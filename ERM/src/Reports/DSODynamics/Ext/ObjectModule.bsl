
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	//Если КомпоновщикНастроек.Настройки.Структура.Количество() > 0 Тогда
	//	СтандартнаяОбработка = Истина;
	//	Возврат;
	//КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ИсточникДанных = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя = "ИсточникДанных1";
	ИсточникДанных.ТипИсточникаДанных = "Local";
	
	НаборДанных = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Имя = "НаборДанных1";
	НаборДанных.ИсточникДанных = ИсточникДанных.Имя;
	
	СхемаКомпоновкиДанных.НаборыДанных[0].Запрос =
	"ВЫБРАТЬ
	|	Валюты.Ссылка,
	|	Валюты.ВерсияДанных,
	|	Валюты.ПометкаУдаления,
	|	Валюты.Код,
	|	Валюты.Наименование,
	|	Валюты.ЗагружаетсяИзИнтернета,
	|	Валюты.НаименованиеПолное,
	|	Валюты.Наценка,
	|	Валюты.ОсновнаяВалюта,
	|	Валюты.ПараметрыПрописиНаРусском,
	|	Валюты.ФормулаРасчетаКурса,
	|	Валюты.СпособУстановкиКурса,
	|	Валюты.Предопределенный,
	|	Валюты.ИмяПредопределенныхДанных
	|ИЗ
	|	Справочник.Валюты КАК Валюты";
	
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());
	
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
	
	//ПоляВыбора = КомпоновщикНастроек.Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	//ЗаполнитьДоступныеПоляВыбора(КомпоновщикНастроек.Настройки.ДоступныеПоляВыбора.Элементы, ПоляВыбора.Выбор.Элементы);
	//ЗаполнитьДоступныеПоляВыбора(КомпоновщикНастроек.Настройки.ДоступныеПоляВыбора.Элементы, КомпоновщикНастроек.Настройки.Выбор.Элементы);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, ДанныеРасшифровки, , Тип("ГенераторМакетаКомпоновкиДанных"));
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных, , ДанныеРасшифровки);
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

Процедура ЗаполнитьДоступныеПоляВыбора(ЭлементыИсточник, ЭлементыПриемник)
	Для каждого ЭлементВыбора Из ЭлементыИсточник Цикл
		Если ЭлементВыбора.Папка Тогда
			ЗаполнитьДоступныеПоляВыбора(ЭлементВыбора.Элементы, ЭлементыПриемник);
		Иначе
			НовоеПолеВыбора = ЭлементыПриемник.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ЗаполнитьЗначенияСвойств(НовоеПолеВыбора, ЭлементВыбора);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
