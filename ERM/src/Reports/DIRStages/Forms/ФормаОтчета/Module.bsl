

&НаКлиенте
Процедура ПроверитьКорректностьДатВДокументах(Команда)
	ПроверитьКорректностьДатВДокументахНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьКорректностьДатВДокументахНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МАКСИМУМ(InvoicedDebtsОбороты.Период) КАК Период,
		|	InvoicedDebtsОбороты.Source КАК Source,
		|	InvoicedDebtsОбороты.Company КАК Company,
		|	InvoicedDebtsОбороты.Client КАК Client,
		|	InvoicedDebtsОбороты.AU КАК AU,
		|	InvoicedDebtsОбороты.Account КАК Account,
		|	InvoicedDebtsОбороты.Invoice КАК Invoice,
		|	InvoicedDebtsОбороты.Currency КАК Currency,
		|	InvoicedDebtsОбороты.LegalEntity КАК LegalEntity,
		|	СУММА(InvoicedDebtsОбороты.AmountОборот) КАК AmountОборот,
		|	ВЫБОР
		|		КОГДА ИсточникиСЗаполнениемОплатИзОбмена.Source ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЗаполнятьОплатыПоДаннымОбмена
		|ПОМЕСТИТЬ ВТ_Инвойсы
		|ИЗ
		|	РегистрНакопления.InvoicedDebts.Обороты(,, Месяц,) КАК InvoicedDebtsОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсточникиСЗаполнениемОплатИзОбмена КАК ИсточникиСЗаполнениемОплатИзОбмена
		|		ПО InvoicedDebtsОбороты.Source = ИсточникиСЗаполнениемОплатИзОбмена.Source
		|		И (InvoicedDebtsОбороты.Company = ИсточникиСЗаполнениемОплатИзОбмена.Company
		|		ИЛИ ИсточникиСЗаполнениемОплатИзОбмена.Company = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
		|СГРУППИРОВАТЬ ПО
		|	InvoicedDebtsОбороты.Source,
		|	InvoicedDebtsОбороты.Company,
		|	InvoicedDebtsОбороты.Client,
		|	InvoicedDebtsОбороты.AU,
		|	InvoicedDebtsОбороты.Account,
		|	InvoicedDebtsОбороты.Invoice,
		|	InvoicedDebtsОбороты.Currency,
		|	ВЫБОР
		|		КОГДА ИсточникиСЗаполнениемОплатИзОбмена.Source ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	InvoicedDebtsОбороты.LegalEntity
		|ИНДЕКСИРОВАТЬ ПО
		|	Invoice
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_Инвойсы.Source КАК Source,
		|	ВТ_Инвойсы.Company КАК Company,
		|	ВТ_Инвойсы.Invoice КАК Invoice
		|ПОМЕСТИТЬ ВТ_ИнвойсыДляОплат
		|ИЗ
		|	ВТ_Инвойсы КАК ВТ_Инвойсы
		|ИНДЕКСИРОВАТЬ ПО
		|	Source, Company, Invoice
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	PaymentsОбороты.Invoice КАК Invoice,
		|	МИНИМУМ(ВЫБОР
		|		КОГДА PaymentsОбороты.Регистратор ССЫЛКА Документ.ПроводкаDSS
		|			ТОГДА PaymentsОбороты.Регистратор.DateLawson
		|		КОГДА PaymentsОбороты.Регистратор ССЫЛКА Документ.КорректировкаТранзакции
		|		И ВЫРАЗИТЬ(PaymentsОбороты.Регистратор КАК Документ.КорректировкаТранзакции).ДокументОснование
		|			ССЫЛКА Документ.ПроводкаDSS
		|			ТОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(PaymentsОбороты.Регистратор КАК Документ.КорректировкаТранзакции).ДокументОснование КАК
		|				Документ.ПроводкаDSS).AccountingPeriod
		|		КОГДА PaymentsОбороты.Регистратор ССЫЛКА Документ.КорректировкаТранзакции
		|			ТОГДА ВЫРАЗИТЬ(PaymentsОбороты.Регистратор КАК Документ.КорректировкаТранзакции).ДокументОснование.Дата
		|		ИНАЧЕ PaymentsОбороты.Регистратор.Дата
		|	КОНЕЦ) КАК PaymentDate
		|ПОМЕСТИТЬ ВТ_ОплатыПоПроводкам
		|ИЗ
		|	РегистрНакопления.Payments.Обороты(&НачалоВремен, &КонецВремен, Регистратор, (Source, Company, Invoice) В
		|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ВТ_ИнвойсыДляОплат.Source,
		|			ВТ_ИнвойсыДляОплат.Company,
		|			ВТ_ИнвойсыДляОплат.Invoice
		|		ИЗ
		|			ВТ_ИнвойсыДляОплат КАК ВТ_ИнвойсыДляОплат
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсточникиСЗаполнениемОплатИзОбмена КАК ИсточникиСЗаполнениемОплатИзОбмена
		|				ПО ВТ_ИнвойсыДляОплат.Source = ИсточникиСЗаполнениемОплатИзОбмена.Source
		|				И (ВТ_ИнвойсыДляОплат.Company = ИсточникиСЗаполнениемОплатИзОбмена.Company
		|				ИЛИ ВТ_ИнвойсыДляОплат.Company = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
		|		ГДЕ
		|			ВТ_ИнвойсыДляОплат.Invoice ССЫЛКА Документ.Invoice
		|			И ИсточникиСЗаполнениемОплатИзОбмена.Source ЕСТЬ NULL)) КАК PaymentsОбороты
		|СГРУППИРОВАТЬ ПО
		|	PaymentsОбороты.Invoice
		|ИНДЕКСИРОВАТЬ ПО
		|	Invoice
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	FiscalPayments.Invoice КАК Invoice,
		|	МИНИМУМ(FiscalPayments.PaymentDate) КАК PaymentDate
		|ПОМЕСТИТЬ ВТ_ОплатыИзОбмена
		|ИЗ
		|	РегистрСведений.FiscalPayments КАК FiscalPayments
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсточникиСЗаполнениемОплатИзОбмена КАК ИсточникиСЗаполнениемОплатИзОбмена
		|		ПО FiscalPayments.Source = ИсточникиСЗаполнениемОплатИзОбмена.Source
		|		И (FiscalPayments.Company = ИсточникиСЗаполнениемОплатИзОбмена.Company
		|		ИЛИ ИсточникиСЗаполнениемОплатИзОбмена.Company = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИнвойсыДляОплат КАК ВТ_ИнвойсыДляОплат
		|		ПО FiscalPayments.Source = ВТ_ИнвойсыДляОплат.Source
		|		И FiscalPayments.Company = ВТ_ИнвойсыДляОплат.Company
		|		И FiscalPayments.Invoice = ВТ_ИнвойсыДляОплат.Invoice
		|СГРУППИРОВАТЬ ПО
		|	FiscalPayments.Invoice
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Инвойсы.Invoice КАК Invoice,
		|	ВТ_Инвойсы.Invoice.ДатаВозвратаКС,
		|	ВТ_Инвойсы.Invoice.TriggerDate,
		|	ВТ_Инвойсы.Invoice.DueDateTo,
		|	ВТ_Инвойсы.Invoice.DueDateFrom КАК DateFrom,
		|	ВТ_ОплатыИзОбмена.PaymentDate,
		|	ВТ_ОплатыПоПроводкам.PaymentDate
		|ИЗ
		|	ВТ_Инвойсы КАК ВТ_Инвойсы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DIR КАК DIR
		|		ПО ВТ_Инвойсы.Invoice = DIR.Invoice
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОплатыПоПроводкам КАК ВТ_ОплатыПоПроводкам
		|		ПО ВТ_Инвойсы.Invoice = ВТ_ОплатыПоПроводкам.Invoice
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОплатыИзОбмена КАК ВТ_ОплатыИзОбмена
		|		ПО ВТ_Инвойсы.Invoice = ВТ_ОплатыИзОбмена.Invoice
		|ГДЕ 
		|	ЕСТЬNULL(ВТ_Инвойсы.Invoice.ДатаВозвратаКС, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) И ЕСТЬNULL(ВТ_Инвойсы.Invoice.ДатаВозвратаКС, ДАТАВРЕМЯ(1, 1, 1)) < ДАТАВРЕМЯ(2000, 1, 1)
		|	ИЛИ ЕСТЬNULL(ВТ_Инвойсы.Invoice.TriggerDate, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) И ЕСТЬNULL(ВТ_Инвойсы.Invoice.TriggerDate, ДАТАВРЕМЯ(1, 1, 1)) < ДАТАВРЕМЯ(2000, 1, 1)
		|	ИЛИ ЕСТЬNULL(ВТ_Инвойсы.Invoice.DueDateTo, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) И ЕСТЬNULL(ВТ_Инвойсы.Invoice.DueDateTo, ДАТАВРЕМЯ(1, 1, 1)) < ДАТАВРЕМЯ(2000, 1, 1)
		|	ИЛИ ЕСТЬNULL(ВТ_Инвойсы.Invoice.DueDateFrom, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) И ЕСТЬNULL(ВТ_Инвойсы.Invoice.DueDateFrom, ДАТАВРЕМЯ(1, 1, 1)) < ДАТАВРЕМЯ(2000, 1, 1)
		|	ИЛИ ЕСТЬNULL(ВТ_ОплатыИзОбмена.PaymentDate, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) И ЕСТЬNULL(ВТ_ОплатыИзОбмена.PaymentDate, ДАТАВРЕМЯ(1, 1, 1)) < ДАТАВРЕМЯ(2000, 1, 1)
		|	ИЛИ ЕСТЬNULL(ВТ_ОплатыПоПроводкам.PaymentDate, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) И ЕСТЬNULL(ВТ_ОплатыПоПроводкам.PaymentDate, ДАТАВРЕМЯ(1, 1, 1)) < ДАТАВРЕМЯ(2000, 1, 1)		
		|";
	
	Запрос.УстановитьПараметр("НачалоВремен", Отчет.КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")).Значение.ДатаНачала);
	Запрос.УстановитьПараметр("КонецВремен", Отчет.КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")).Значение.ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗ_ПроблемныеИнвойсы = РезультатЗапроса.Выгрузить();
	
КонецПроцедуры
