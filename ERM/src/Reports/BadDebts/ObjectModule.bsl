
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущийПериодОтчетаПараметрСхемы = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Период");
	ТекущийПериодОтчета = КонецМесяца(КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ТекущийПериодОтчетаПараметрСхемы.ИдентификаторПользовательскойНастройки).Значение);
	
	//Получение активных отборов СКД
	ТекущиеОтборы = КомпоновщикНастроек.ПолучитьНастройки().Отбор.Элементы;
	КоллекцияОтборов = Новый Массив;
	
	Для каждого ЭлементОтбора Из ТекущиеОтборы Цикл
		
		Если ЭлементОтбора.Использование Тогда
		
			КоллекцияОтборов.Добавить(ЭлементОтбора);
		
		КонецЕсли; 
	
	КонецЦикла;
	
	ТЗ_ИсточникОтчета = Отчеты.BadDebts.СформироватьТаблицуИсточникДанных(ТекущийПериодОтчета, КоллекцияОтборов);
	
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки(); 
 
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ВнешнийНаборДанных = Новый Структура("ТЗ_ИсточникОтчета", ТЗ_ИсточникОтчета); 
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки); 
	
	ДокументРезультат.Очистить();
	
 	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент; 
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат); 
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	//ДокументРезультат.ФиксацияСлева = 2;
	
КонецПроцедуры
