
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//Получение параметров СКД
	ПериодПервогоОтчетаПараметрСхемы = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодПервогоОтчета");
	ПериодПервогоОтчета = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПериодПервогоОтчетаПараметрСхемы.ИдентификаторПользовательскойНастройки).Значение;
	
	ПериодВторогоОтчетаПараметрСхемы = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодВторогоОтчета");
	ПериодВторогоОтчета = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПериодВторогоОтчетаПараметрСхемы.ИдентификаторПользовательскойНастройки).Значение;
	
	ZeroValuesПараметрСхемы = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ОбнулятьForecastCollectBefore10");
	ZeroValues = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ZeroValuesПараметрСхемы.ИдентификаторПользовательскойНастройки).Значение;
	
	//Получение активных отборов СКД
	ТекущиеОтборы = КомпоновщикНастроек.ПолучитьНастройки().Отбор.Элементы;
	КоллекцияОтборов = Новый Массив;
	
	Для каждого ЭлементОтбора Из ТекущиеОтборы Цикл
		
		Если ЭлементОтбора.Использование Тогда
		
			КоллекцияОтборов.Добавить(ЭлементОтбора);
		
		КонецЕсли; 
	
	КонецЦикла;
	
	ПараметрыДанных = Новый Соответствие;
	ПараметрыДанных.Вставить("Период", ПериодПервогоОтчета);
	ПараметрыДанных.Вставить("ОбнулятьForecastCollectBefore10", ZeroValues);
	ПараметрыДанных.Вставить("ИмяИсточникаДанных", "РезультатНаПервыйПериод");
	
	РезультатНаПервыйПериод = СформироватьCollectionTargetReport(ПараметрыДанных, КоллекцияОтборов);
	
	ПараметрыДанных.Вставить("Период", ПериодВторогоОтчета);
	ПараметрыДанных.Вставить("ИмяИсточникаДанных", "РезультатНаВторойПериод");
	
	РезультатНаВторойПериод = СформироватьCollectionTargetReport(ПараметрыДанных, КоллекцияОтборов);
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗНаПервыйПериод.Client КАК Client,
	               |	ТЗНаПервыйПериод.ClientCRMID КАК CRM_ID,
	               |	ВЫРАЗИТЬ(ТЗНаПервыйПериод.Paid КАК ЧИСЛО(15, 2)) КАК Paid,
	               |	ТЗНаПервыйПериод.FcstCollect КАК FcstCollect,
	               |	ТЗНаПервыйПериод.OverdueNoFcst КАК OverdueNoFcst,
	               |	ТЗНаПервыйПериод.OverdueDispute КАК OverdueDispute,
	               |	ТЗНаПервыйПериод.OverdueNotFcsted КАК OverdueNotFcsted,
	               |	ТЗНаПервыйПериод.InRangeNoColl КАК InRangeNoColl,
	               |	ТЗНаПервыйПериод.NotDue КАК NotDue,
	               |	ТЗНаПервыйПериод.NoFrcst КАК NoFcst,
	               |	ТЗНаПервыйПериод.UnderLitigation КАК UnderLitigation,
	               |	ВЫРАЗИТЬ(ТЗНаПервыйПериод.USDAmount КАК ЧИСЛО(15, 2)) КАК USDAmount,
	               |	ТЗНаПервыйПериод.PotentialForecast КАК PotentialForecast,
	               |	ТЗНаПервыйПериод.PotentialRisk КАК PotentialRisk,
	               |	ТЗНаПервыйПериод.MgmtGeomarket КАК MgmtGeomarket,
	               |	ТЗНаПервыйПериод.ProductGroup КАК ProductGroup,
	               |	ТЗНаПервыйПериод.Company КАК Company,
	               |	ТЗНаПервыйПериод.Source КАК Source,
	               |	ТЗНаПервыйПериод.Corporate КАК Corporate,
	               |	ТЗНаПервыйПериод.SegmentHFM КАК SegmentHFM,
	               |	ТЗНаПервыйПериод.BU КАК BU,
	               |	ТЗНаПервыйПериод.Collector КАК Collector,
	               |	ТЗНаПервыйПериод.Comment КАК Comment
	               |ПОМЕСТИТЬ ДанныеПервойТаблицы
	               |ИЗ
	               |	&ТЗНаПервыйПериод КАК ТЗНаПервыйПериод
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗНаВторойПериод.Client КАК Client,
	               |	ТЗНаВторойПериод.ClientCRMID КАК CRM_ID,
	               |	ВЫРАЗИТЬ(ТЗНаВторойПериод.Paid КАК ЧИСЛО(15, 2)) КАК Paid,
	               |	ТЗНаВторойПериод.FcstCollect КАК FcstCollect,
	               |	ТЗНаВторойПериод.OverdueNoFcst КАК OverdueNoFcst,
	               |	ТЗНаВторойПериод.OverdueDispute КАК OverdueDispute,
	               |	ТЗНаВторойПериод.OverdueNotFcsted КАК OverdueNotFcsted,
	               |	ТЗНаВторойПериод.InRangeNoColl КАК InRangeNoColl,
	               |	ТЗНаВторойПериод.NotDue КАК NotDue,
	               |	ТЗНаВторойПериод.NoFrcst КАК NoFcst,
	               |	ТЗНаВторойПериод.UnderLitigation КАК UnderLitigation,
	               |	ВЫРАЗИТЬ(ТЗНаВторойПериод.USDAmount КАК ЧИСЛО(15, 2)) КАК USDAmount,
	               |	ТЗНаВторойПериод.PotentialForecast КАК PotentialForecast,
	               |	ТЗНаВторойПериод.PotentialRisk КАК PotentialRisk,
	               |	ТЗНаВторойПериод.MgmtGeomarket КАК MgmtGeomarket,
	               |	ТЗНаВторойПериод.ProductGroup КАК ProductGroup,
	               |	ТЗНаВторойПериод.Company КАК Company,
	               |	ТЗНаВторойПериод.Source КАК Source,
	               |	ТЗНаВторойПериод.Corporate КАК Corporate,
	               |	ТЗНаВторойПериод.SegmentHFM КАК SegmentHFM,
	               |	ТЗНаВторойПериод.BU КАК BU,
	               |	ТЗНаВторойПериод.Collector КАК Collector,
	               |	ТЗНаВторойПериод.Comment КАК Comment
	               |ПОМЕСТИТЬ ДанныеВторойТаблицы
	               |ИЗ
	               |	&ТЗНаВторойПериод КАК ТЗНаВторойПериод
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеПервойТаблицы.BU КАК BU,
	               |	ДанныеПервойТаблицы.Client КАК Client,
	               |	ДанныеПервойТаблицы.Collector КАК Collector,
	               |	ДанныеПервойТаблицы.Comment КАК Comment,
	               |	ДанныеПервойТаблицы.Company КАК Company,
	               |	ДанныеПервойТаблицы.Corporate КАК Corporate,
	               |	ДанныеПервойТаблицы.CRM_ID КАК CRM_ID,
	               |	СУММА(ДанныеПервойТаблицы.FcstCollect) КАК FcstCollect,
	               |	СУММА(ДанныеПервойТаблицы.InRangeNoColl) КАК InRangeNoColl,
	               |	ДанныеПервойТаблицы.MgmtGeomarket КАК MgmtGeomarket,
	               |	СУММА(ДанныеПервойТаблицы.NoFcst) КАК NoFcst,
	               |	СУММА(ДанныеПервойТаблицы.NotDue) КАК NotDue,
	               |	СУММА(ДанныеПервойТаблицы.OverdueDispute) КАК OverdueDispute,
	               |	СУММА(ДанныеПервойТаблицы.OverdueNoFcst) КАК OverdueNoFcst,
	               |	СУММА(ДанныеПервойТаблицы.OverdueNotFcsted) КАК OverdueNotFcsted,
	               |	СУММА(ДанныеПервойТаблицы.Paid) КАК Paid,
	               |	СУММА(ДанныеПервойТаблицы.PotentialForecast) КАК PotentialForecast,
	               |	СУММА(ДанныеПервойТаблицы.PotentialRisk) КАК PotentialRisk,
	               |	ДанныеПервойТаблицы.ProductGroup КАК ProductGroup,
	               |	ДанныеПервойТаблицы.SegmentHFM КАК SegmentHFM,
	               |	ДанныеПервойТаблицы.Source КАК Source,
	               |	СУММА(ДанныеПервойТаблицы.UnderLitigation) КАК UnderLitigation,
	               |	СУММА(ДанныеПервойТаблицы.USDAmount) КАК USDAmount
	               |ПОМЕСТИТЬ ДанныеПервойТаблицыГруппировка
	               |ИЗ
	               |	ДанныеПервойТаблицы КАК ДанныеПервойТаблицы
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ДанныеПервойТаблицы.BU,
	               |	ДанныеПервойТаблицы.Client,
	               |	ДанныеПервойТаблицы.CRM_ID,
	               |	ДанныеПервойТаблицы.Collector,
	               |	ДанныеПервойТаблицы.Comment,
	               |	ДанныеПервойТаблицы.Company,
	               |	ДанныеПервойТаблицы.Corporate,
	               |	ДанныеПервойТаблицы.ProductGroup,
	               |	ДанныеПервойТаблицы.SegmentHFM,
	               |	ДанныеПервойТаблицы.Source,
	               |	ДанныеПервойТаблицы.MgmtGeomarket
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеВторойТаблицы.Client КАК Client,
	               |	ДанныеВторойТаблицы.CRM_ID КАК CRM_ID,
	               |	СУММА(ДанныеВторойТаблицы.Paid) КАК Paid,
	               |	СУММА(ДанныеВторойТаблицы.FcstCollect) КАК FcstCollect,
	               |	СУММА(ДанныеВторойТаблицы.OverdueNoFcst) КАК OverdueNoFcst,
	               |	СУММА(ДанныеВторойТаблицы.OverdueDispute) КАК OverdueDispute,
	               |	СУММА(ДанныеВторойТаблицы.OverdueNotFcsted) КАК OverdueNotFcsted,
	               |	СУММА(ДанныеВторойТаблицы.InRangeNoColl) КАК InRangeNoColl,
	               |	СУММА(ДанныеВторойТаблицы.NotDue) КАК NotDue,
	               |	СУММА(ДанныеВторойТаблицы.NoFcst) КАК NoFcst,
	               |	СУММА(ДанныеВторойТаблицы.UnderLitigation) КАК UnderLitigation,
	               |	СУММА(ДанныеВторойТаблицы.USDAmount) КАК USDAmount,
	               |	СУММА(ДанныеВторойТаблицы.PotentialForecast) КАК PotentialForecast,
	               |	СУММА(ДанныеВторойТаблицы.PotentialRisk) КАК PotentialRisk,
	               |	ДанныеВторойТаблицы.MgmtGeomarket КАК MgmtGeomarket,
	               |	ДанныеВторойТаблицы.ProductGroup КАК ProductGroup,
	               |	ДанныеВторойТаблицы.Company КАК Company,
	               |	ДанныеВторойТаблицы.Source КАК Source,
	               |	ДанныеВторойТаблицы.Corporate КАК Corporate,
	               |	ДанныеВторойТаблицы.SegmentHFM КАК SegmentHFM,
	               |	ДанныеВторойТаблицы.BU КАК BU,
	               |	ДанныеВторойТаблицы.Collector КАК Collector,
	               |	ДанныеВторойТаблицы.Comment КАК Comment
	               |ПОМЕСТИТЬ ДанныеВторойТаблицыГруппировка
	               |ИЗ
	               |	ДанныеВторойТаблицы КАК ДанныеВторойТаблицы
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ДанныеВторойТаблицы.Client,
	               |	ДанныеВторойТаблицы.CRM_ID,
	               |	ДанныеВторойТаблицы.MgmtGeomarket,
	               |	ДанныеВторойТаблицы.Company,
	               |	ДанныеВторойТаблицы.Source,
	               |	ДанныеВторойТаблицы.Corporate,
	               |	ДанныеВторойТаблицы.SegmentHFM,
	               |	ДанныеВторойТаблицы.BU,
	               |	ДанныеВторойТаблицы.Collector,
	               |	ДанныеВторойТаблицы.Comment,
	               |	ДанныеВторойТаблицы.ProductGroup
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.Client, ДанныеВторойТаблицыГруппировка.Client) КАК Client,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.CRM_ID, ДанныеВторойТаблицыГруппировка.CRM_ID) КАК CRM_ID,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.Paid, 0) КАК Paid,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.FcstCollect, 0) КАК FcstCollect,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.OverdueNoFcst, 0) КАК OverdueNoFcst,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.OverdueDispute, 0) КАК OverdueDispute,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.OverdueNotFcsted, 0) КАК OverdueNotFcsted,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.InRangeNoColl, 0) КАК InRangeNoColl,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.NotDue, 0) КАК NotDue,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.NoFcst, 0) КАК NoFcst,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.UnderLitigation, 0) КАК UnderLitigation,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.USDAmount, 0) КАК USDAmount,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.PotentialForecast, 0) КАК PotentialForecast,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.PotentialRisk, 0) КАК PotentialRisk,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.MgmtGeomarket, ДанныеВторойТаблицыГруппировка.MgmtGeomarket) КАК MgmtGeomarket,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.ProductGroup, ДанныеВторойТаблицыГруппировка.ProductGroup) КАК ProductGroup,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.Company, ДанныеВторойТаблицыГруппировка.Company) КАК Company,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.Source, ДанныеВторойТаблицыГруппировка.Source) КАК Source,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.Corporate, ДанныеВторойТаблицыГруппировка.Corporate) КАК Corporate,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.SegmentHFM, ДанныеВторойТаблицыГруппировка.SegmentHFM) КАК SegmentHFM,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.BU, ДанныеВторойТаблицыГруппировка.BU) КАК BU,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.Collector, ДанныеВторойТаблицыГруппировка.Collector) КАК Collector,
	               |	ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.Comment, ДанныеВторойТаблицыГруппировка.Comment) КАК Comment,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.Paid, 0) КАК Paid_1,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.FcstCollect, 0) КАК FcstCollect_1,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.OverdueNoFcst, 0) КАК OverdueNoFcst_1,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.OverdueDispute, 0) КАК OverdueDispute_1,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.OverdueNotFcsted, 0) КАК OverdueNotFcsted_1,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.InRangeNoColl, 0) КАК InRangeNoColl_1,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.NotDue, 0) КАК NotDue_1,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.NoFcst, 0) КАК NoFcst_1,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.UnderLitigation, 0) КАК UnderLitigation_1,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.USDAmount, 0) КАК USDAmount_1,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.PotentialForecast, 0) КАК PotentialForecast_1,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.PotentialRisk, 0) КАК PotentialRisk_1,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.Paid, 0) + ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.FcstCollect, 0) - (ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.Paid, 0) + ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.FcstCollect, 0)) КАК PaidFcstCollect,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.FcstCollect, 0) - ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.FcstCollect, 0) КАК Diff_FcstCollect,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.Paid, 0) - ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.Paid, 0) КАК Diff_Paid,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.OverdueNoFcst, 0) - ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.OverdueNoFcst, 0) КАК Diff_OverdueNoFcst,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.OverdueDispute, 0) - ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.OverdueDispute, 0) КАК Diff_OverdueDispute,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.InRangeNoColl, 0) - ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.InRangeNoColl, 0) КАК Diff_InRangeNoColl,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.UnderLitigation, 0) - ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.UnderLitigation, 0) КАК Diff_UnderLitigation,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.NotDue, 0) - ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.NotDue, 0) КАК Diff_NotDue,
	               |	ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.FcstCollect, 0) - ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.FcstCollect, 0) + (ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.OverdueNoFcst, 0) - ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.OverdueNoFcst, 0)) + (ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.OverdueDispute, 0) - ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.OverdueDispute, 0)) + (ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.UnderLitigation, 0) - ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.UnderLitigation, 0)) + (ЕСТЬNULL(ДанныеВторойТаблицыГруппировка.NotDue, 0) - ЕСТЬNULL(ДанныеПервойТаблицыГруппировка.NotDue, 0)) КАК TotalDiff
	               |ИЗ
	               |	ДанныеПервойТаблицыГруппировка КАК ДанныеПервойТаблицыГруппировка
	               |		ПОЛНОЕ СОЕДИНЕНИЕ ДанныеВторойТаблицыГруппировка КАК ДанныеВторойТаблицыГруппировка
	               |		ПО ДанныеПервойТаблицыГруппировка.Client = ДанныеВторойТаблицыГруппировка.Client
	               |			И ДанныеПервойТаблицыГруппировка.CRM_ID = ДанныеВторойТаблицыГруппировка.CRM_ID
	               |			И ДанныеПервойТаблицыГруппировка.MgmtGeomarket = ДанныеВторойТаблицыГруппировка.MgmtGeomarket
	               |			И ДанныеПервойТаблицыГруппировка.ProductGroup = ДанныеВторойТаблицыГруппировка.ProductGroup
	               |			И ДанныеПервойТаблицыГруппировка.Company = ДанныеВторойТаблицыГруппировка.Company
	               |			И ДанныеПервойТаблицыГруппировка.Source = ДанныеВторойТаблицыГруппировка.Source
	               |			И ДанныеПервойТаблицыГруппировка.Corporate = ДанныеВторойТаблицыГруппировка.Corporate
	               |			И ДанныеПервойТаблицыГруппировка.SegmentHFM = ДанныеВторойТаблицыГруппировка.SegmentHFM
	               |			И ДанныеПервойТаблицыГруппировка.BU = ДанныеВторойТаблицыГруппировка.BU
	               |			И ДанныеПервойТаблицыГруппировка.Collector = ДанныеВторойТаблицыГруппировка.Collector
	               |			И ДанныеПервойТаблицыГруппировка.Comment = ДанныеВторойТаблицыГруппировка.Comment";
	Запрос.УстановитьПараметр("ТЗНаВторойПериод", РезультатНаВторойПериод);
	Запрос.УстановитьПараметр("ТЗНаПервыйПериод", РезультатНаПервыйПериод);
	
	ТЗИсточникОтчета = Запрос.Выполнить().Выгрузить();
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки(); 
 
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных; 
 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ВнешнийНаборДанных = Новый Структура("ТЗИсточникОтчета", ТЗИсточникОтчета); 
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки); 
	
	ДокументРезультат.Очистить();
	
 	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент; 
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат); 
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ДокументРезультат.ФиксацияСлева = 2;
	
КонецПроцедуры

Функция СформироватьCollectionTargetReport(ПараметрыДанных, КоллекцияОтборов)

	ОтчетНаПериод = Отчеты.CollectionTargetBilledDetails.Создать();
	СКД = ОтчетНаПериод.СхемаКомпоновкиДанных;
	ИмяВарианта = "Служебный";
	АктивизироватьВариантОтчета(СКД, ИмяВарианта);
	АдресСхемы = ПоместитьВоВременноеХранилище(СКД, Новый УникальныйИдентификатор());
	ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы);
	
	ОтчетНаПериод.КомпоновщикНастроек.Инициализировать(ИсточникДоступныхНастроек);
	
	ИнициализироватьПараметрыДанных(ОтчетНаПериод.КомпоновщикНастроек, ПараметрыДанных);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	НастройкиДляКомпоновкиМакета = ОтчетНаПериод.КомпоновщикНастроек.ПолучитьНастройки();
	
	ЭлементНайден = Ложь;
	
	Для Каждого ЭлементОтбора Из КоллекцияОтборов Цикл
		
		Для каждого Элемент Из НастройкиДляКомпоновкиМакета.Отбор.Элементы Цикл
		
			Если ТипЗнч(Элемент) = Тип("ЭлементОтбораКомпоновкиДанных") И Элемент.ЛевоеЗначение = ЭлементОтбора.ЛевоеЗначение Тогда
			
				Элемент.ВидСравнения = ЭлементОтбора.ВидСравнения;
				Элемент.ПравоеЗначение = ЭлементОтбора.ПравоеЗначение;
				Элемент.Использование = Истина;
				ЭлементНайден = Истина;
			
			КонецЕсли; 
		
		КонецЦикла;
		
		Если ЭлементНайден = Ложь Тогда
		
			НовыйЭлементОтбора = НастройкиДляКомпоновкиМакета.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйЭлементОтбора.ЛевоеЗначение = ЭлементОтбора.ЛевоеЗначение;
			НовыйЭлементОтбора.ВидСравнения = ЭлементОтбора.ВидСравнения;
			НовыйЭлементОтбора.ПравоеЗначение = ЭлементОтбора.ПравоеЗначение;
			НовыйЭлементОтбора.Использование = Истина;
		
		Иначе
			
			ЭлементНайден = Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, НастройкиДляКомпоновкиМакета, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	
	ТЗ = Новый ТаблицаЗначений;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТЗ);
	
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	//Удаление строки итогов
	ТЗ.Удалить(0);
	
	Возврат ТЗ;
	
КонецФункции

Процедура АктивизироватьВариантОтчета(СКД, ИмяВарианта)
	
	Если Не ЗначениеЗаполнено(ИмяВарианта) Тогда
		Возврат;
	КонецЕсли;
	
	Вариант = СКД.ВариантыНастроек.Найти(ИмяВарианта);
	
	Если Вариант = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВариантыДляУдаления = Новый Массив;
	
	Для каждого ТекВариант Из СКД.ВариантыНастроек Цикл
		Если ТекВариант.Имя <> ИмяВарианта Тогда
			ВариантыДляУдаления.Добавить(ТекВариант);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ТекВариант Из ВариантыДляУдаления Цикл
		СКД.ВариантыНастроек.Удалить(ТекВариант);
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнициализироватьПараметрыДанных(КомпоновщикНастроек, ПараметрыДанных)
	
	Если ПараметрыДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ТекПараметр Из ПараметрыДанных Цикл
		Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ТекПараметр.Ключ);
		Если Параметр <> Неопределено Тогда
			Параметр.Значение = ТекПараметр.Значение;
			Параметр.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
