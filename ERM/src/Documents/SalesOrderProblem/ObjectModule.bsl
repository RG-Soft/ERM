#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЭтоНовый() ИЛИ ОбменДанными.Загрузка Тогда
		
		ResponsiblesСтрокой = "";
		
		Если Responsibles.Количество() > 0 Тогда
			Для каждого СтрокаТЧ Из Responsibles Цикл
				ResponsiblesСтрокой = ResponsiblesСтрокой + СтрокаТЧ.Responsible + ", ";
			КонецЦикла;
			ResponsiblesСтрокой = Лев(ResponsiblesСтрокой, СтрДлина(ResponsiblesСтрокой) - 2);
		КонецЕсли;
		
		Если ResponsiblesList <> ResponsiblesСтрокой Тогда
			ResponsiblesList = ResponsiblesСтрокой;
		КонецЕсли;
		
	Иначе
		
		Отказ = Истина;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(EscalateTo) И Responsibles.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Responsibles are empty!", , , "Объект.Responsibles", Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(EscalateTo) И Billed <> Перечисления.SalesOrderBilledStatus.Billed И Billed <> Перечисления.SalesOrderBilledStatus.Canceled Тогда
		
		ДобавитьВОчередьУведомлений();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьВОчередьУведомлений()
	
	ТекущаяДата = НачалоДня(ТекущаяДата());
	DateNotification1 = КалендарныеГрафики.ПолучитьДатуПоКалендарю(КалендарныеГрафики.ПроизводственныйКалендарьРоссийскойФедерации(), НачалоМесяца(ТекущаяДата), 5);
	//DateNotification2 = DateLevel1 + 5 * 24 * 60 * 60;
	//DateNotification3 = DateLevel1 + 10 * 24 * 60 * 60;
	//DateNotification4 = DateLevel1 + 14 * 24 * 60 * 60;
	//DateNotification5 = НачалоМесяца(ТекущаяДата) + 25 * 24 * 60 * 60;
	
	ДатыНотификации = Новый Массив;
	ДатыНотификации.Добавить(DateNotification1);
	ДатыНотификации.Добавить(DateNotification1 + 5 * 24 * 60 * 60);
	ДатыНотификации.Добавить(DateNotification1 + 10 * 24 * 60 * 60);
	ДатыНотификации.Добавить(DateNotification1 + 14 * 24 * 60 * 60);
	ДатыНотификации.Добавить(НачалоМесяца(ТекущаяДата) + 24 * 24 * 60 * 60);
	
	ВидыНотификаций = Новый Массив;
	ВидыНотификаций.Добавить(Справочники.ВидыУведомлений.Notification1);
	ВидыНотификаций.Добавить(Справочники.ВидыУведомлений.Notification2);
	ВидыНотификаций.Добавить(Справочники.ВидыУведомлений.Notification3);
	ВидыНотификаций.Добавить(Справочники.ВидыУведомлений.Notification4);
	ВидыНотификаций.Добавить(Справочники.ВидыУведомлений.Notification5);
	
	МассивУровней = Новый Массив;
	МассивУровней.Добавить(Справочники.EscalationLevels.Level1);
	МассивУровней.Добавить(Справочники.EscalationLevels.Level2);
	МассивУровней.Добавить(Справочники.EscalationLevels.Level3);
	МассивУровней.Добавить(Справочники.EscalationLevels.Level4);
	МассивУровней.Добавить(Справочники.EscalationLevels.Level4);
	
	СтруктураПодчиненияУровней = Новый Соответствие;
	Подчинение1 = Новый Массив;
	Подчинение2 = Новый Массив;
	Подчинение2.Добавить(Справочники.EscalationLevels.Level1);
	Подчинение3 = Новый Массив;
	Подчинение3.Добавить(Справочники.EscalationLevels.Level1);
	Подчинение3.Добавить(Справочники.EscalationLevels.Level2);
	Подчинение4 = Новый Массив;
	Подчинение4.Добавить(Справочники.EscalationLevels.Level1);
	Подчинение4.Добавить(Справочники.EscalationLevels.Level2);
	Подчинение4.Добавить(Справочники.EscalationLevels.Level3);
	СтруктураПодчиненияУровней.Вставить(Справочники.EscalationLevels.Level1, Подчинение1);
	СтруктураПодчиненияУровней.Вставить(Справочники.EscalationLevels.Level2, Подчинение2);
	СтруктураПодчиненияУровней.Вставить(Справочники.EscalationLevels.Level3, Подчинение3);
	СтруктураПодчиненияУровней.Вставить(Справочники.EscalationLevels.Level4, Подчинение4);
	
	ИндексУровня = МассивУровней.Найти(EscalateTo);
	
	НЗ = РегистрыСведений.ОчередьУведомлений.СоздатьНаборЗаписей();
	НЗ.Отбор.Проблема.Установить(Ссылка);
	
	Для ТекИндекс = 0 По 4 Цикл
		Если ТекущаяДата <= ДатыНотификации[ТекИндекс] Тогда
			ЗаписьРегистра = НЗ.Добавить();
			ЗаписьРегистра.Проблема = Ссылка;
			ЗаписьРегистра.Уровень = МассивУровней[Макс(ИндексУровня, ТекИндекс)];
			ЗаписьРегистра.ВидУведомления = ВидыНотификаций[ТекИндекс];
			ЗаписьРегистра.ДатаУведомления = ДатыНотификации[ТекИндекс];
			ПодчиненныеУровни = СтруктураПодчиненияУровней[ЗаписьРегистра.Уровень];
			Для каждого ПодчиненныйУровень Из ПодчиненныеУровни Цикл
				ЗаписьПодчиненногоУровня = НЗ.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьПодчиненногоУровня, ЗаписьРегистра);
				ЗаписьПодчиненногоУровня.Уровень = ПодчиненныйУровень;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	//Если ТекущаяДата <= DateNotification1 Тогда
	//	ЗаписьРегистра = НЗ.Добавить();
	//	ЗаписьРегистра.Проблема = Ссылка;
	//	ЗаписьРегистра.Уровень = МассивУровней[Макс(ИндексУровня, 0)];
	//	ЗаписьРегистра.ДатаУведомления = DateNotification1;
	//КонецЕсли;
	//
	//Если ТекущаяДата <= DateNotification2 Тогда
	//	ЗаписьРегистра = НЗ.Добавить();
	//	ЗаписьРегистра.Проблема = Ссылка;
	//	ЗаписьРегистра.ДатаУведомления = DateNotification1;
	//КонецЕсли;
	//
	//ЗаписьРегистра = НЗ.Добавить();
	//ЗаписьРегистра.Проблема = Ссылка;
	//ЗаписьРегистра.ДатаУведомления = FollowUpDate;
	//
	//ТаблицаУровней = Справочники.EscalationLevels.ПолучитьВышестоящиеУровни(EscalateTo, Истина);
	//
	//Для каждого СтрокаУровня Из ТаблицаУровней Цикл
	//	
	//	ЗаписьРегистра = НЗ.Добавить();
	//	ЗаписьРегистра.Проблема = Ссылка;
	//	ЗаписьРегистра.Уровень = СтрокаУровня.Ссылка;
	//	ЗаписьРегистра.ДатаУведомления = FollowUpDate + СтрокаУровня.DaysFromTheStartingDate * 24 * 60 * 60;
	//	
	//КонецЦикла;
	
	НЗ.Записать(Истина);
	
КонецПроцедуры

#КонецЕсли
