#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Не ЭтоНовый() Тогда
		Если Source = Перечисления.ТипыСоответствий.Lawson Тогда
			ДополнительныеСвойства.Вставить("СтарыеЗначенияКлючей", ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
				"Source, Company, Journal, LineNbr, Date"));
		Иначе 
			ДополнительныеСвойства.Вставить("СтарыеЗначенияКлючей", ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
				"Source, Company, Client, Location, SubSubSegment, AU, Account, Currency"));
				//"Source, Company, Location, SubSubSegment, AU, Account, Currency"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ДополнительныеСвойства.Свойство("СтарыеЗначенияКлючей") Тогда
		
		СтарыеЗначенияКлючей = ДополнительныеСвойства.СтарыеЗначенияКлючей;
		
		Если Source = Перечисления.ТипыСоответствий.Lawson Тогда
			
			Если СтарыеЗначенияКлючей.Source <> Source ИЛИ СтарыеЗначенияКлючей.Company <> Company
				ИЛИ СтарыеЗначенияКлючей.Journal <> JournalLawson 
				ИЛИ СтарыеЗначенияКлючей.LineNbr <> LineNbrLawson 
				ИЛИ СтарыеЗначенияКлючей.Date <> Дата Тогда
				
				НЗ = РегистрыСведений.КлючиДетальныхРучныхКорректировок.СоздатьНаборЗаписей();
				НЗ.Отбор.Source.Установить(СтарыеЗначенияКлючей.Source);
				НЗ.Отбор.Company.Установить(СтарыеЗначенияКлючей.Company);
				НЗ.Отбор.Journal.Установить(СтарыеЗначенияКлючей.Journal);
				НЗ.Отбор.LineNbr.Установить(СтарыеЗначенияКлючей.LineNbr);
				НЗ.Отбор.Date.Установить(СтарыеЗначенияКлючей.Date);
				НЗ.Записать(Истина);
				
				НЗ.Отбор.Source.Установить(Source);
				НЗ.Отбор.Company.Установить(Company);
				НЗ.Отбор.Journal.Установить(JournalLawson);
				НЗ.Отбор.LineNbr.Установить(LineNbrLawson);
				НЗ.Отбор.Date.Установить(Дата);
				ЗаписьНабора = НЗ.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЭтотОбъект);
				ЗаписьНабора.Journal = JournalLawson;
				ЗаписьНабора.LineNbr = LineNbrLawson;
				ЗаписьНабора.РучнаяКорректировка = Ссылка;
				НЗ.Записать(Истина);
				
			КонецЕсли;
			
		Иначе
			
			Если СтарыеЗначенияКлючей.Source <> Source ИЛИ СтарыеЗначенияКлючей.Company <> Company
				ИЛИ СтарыеЗначенияКлючей.Client <> Client 
				ИЛИ СтарыеЗначенияКлючей.Location <> Location
				ИЛИ СтарыеЗначенияКлючей.SubSubSegment <> SubSubSegment
				ИЛИ СтарыеЗначенияКлючей.AU <> AU 
				ИЛИ СтарыеЗначенияКлючей.Account <> Account 
				ИЛИ СтарыеЗначенияКлючей.Currency <> Currency Тогда
				
				НЗ = РегистрыСведений.КлючиРучныхКорректировок.СоздатьНаборЗаписей();
				НЗ.Отбор.Source.Установить(СтарыеЗначенияКлючей.Source);
				НЗ.Отбор.Company.Установить(СтарыеЗначенияКлючей.Company);
				НЗ.Отбор.Client.Установить(СтарыеЗначенияКлючей.Client);
				НЗ.Отбор.Location.Установить(СтарыеЗначенияКлючей.Location);
				НЗ.Отбор.SubSubSegment.Установить(СтарыеЗначенияКлючей.SubSubSegment);
				НЗ.Отбор.AU.Установить(СтарыеЗначенияКлючей.AU);
				НЗ.Отбор.Account.Установить(СтарыеЗначенияКлючей.Account);
				НЗ.Отбор.Currency.Установить(СтарыеЗначенияКлючей.Currency);
				НЗ.Записать(Истина);
				
				НЗ.Отбор.Source.Установить(Source);
				НЗ.Отбор.Company.Установить(Company);
				НЗ.Отбор.Client.Установить(Client);
				НЗ.Отбор.Location.Установить(Location);
				НЗ.Отбор.SubSubSegment.Установить(SubSubSegment);
				НЗ.Отбор.AU.Установить(AU);
				НЗ.Отбор.Account.Установить(Account);
				НЗ.Отбор.Currency.Установить(Currency);
				ЗаписьНабора = НЗ.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЭтотОбъект);
				ЗаписьНабора.РучнаяКорректировка = Ссылка;
				НЗ.Записать(Истина);
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если Source = Перечисления.ТипыСоответствий.Lawson Тогда
			
			НЗ = РегистрыСведений.КлючиДетальныхРучныхКорректировок.СоздатьНаборЗаписей();
			НЗ.Отбор.Source.Установить(Source);
			НЗ.Отбор.Company.Установить(Company);
			НЗ.Отбор.Journal.Установить(JournalLawson);
			НЗ.Отбор.LineNbr.Установить(LineNbrLawson);
			НЗ.Отбор.Date.Установить(Дата);
			ЗаписьНабора = НЗ.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЭтотОбъект);
			ЗаписьНабора.Journal = JournalLawson;
			ЗаписьНабора.LineNbr = LineNbrLawson;
			ЗаписьНабора.РучнаяКорректировка = Ссылка;
			НЗ.Записать(Истина);
			
		Иначе
			
			НЗ = РегистрыСведений.КлючиРучныхКорректировок.СоздатьНаборЗаписей();
			НЗ.Отбор.Source.Установить(Source);
			НЗ.Отбор.Company.Установить(Company);
			НЗ.Отбор.Client.Установить(Client);
			НЗ.Отбор.Location.Установить(Location);
			НЗ.Отбор.SubSubSegment.Установить(SubSubSegment);
			НЗ.Отбор.AU.Установить(AU);
			НЗ.Отбор.Account.Установить(Account);
			НЗ.Отбор.Currency.Установить(Currency);
			ЗаписьНабора = НЗ.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, ЭтотОбъект);
			ЗаписьНабора.РучнаяКорректировка = Ссылка;
			НЗ.Записать(Истина);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	НЗ = РегистрыСведений.КлючиРучныхКорректировок.СоздатьНаборЗаписей();
	НЗ.Отбор.Source.Установить(Source);
	НЗ.Отбор.Company.Установить(Company);
	НЗ.Отбор.Client.Установить(Client);
	НЗ.Отбор.Location.Установить(Location);
	НЗ.Отбор.SubSubSegment.Установить(SubSubSegment);
	НЗ.Отбор.AU.Установить(AU);
	НЗ.Отбор.Account.Установить(Account);
	НЗ.Отбор.Currency.Установить(Currency);
	НЗ.Записать(Истина);
	
КонецПроцедуры

#КонецЕсли
