
&НаКлиенте
Процедура InvoiceПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Invoice) Тогда
			
		InvoiceПриИзмененииНаСервере();
		
		Если ЕстьAllocationПоДокументу(Объект.Invoice) Тогда
			Сообщить(" " + Объект.Invoice + " was previously credited.");
		КонецЕсли;
		
		RemainingInvoiceAmount = РассчитатьRemainingInvoiceAmount();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура InvoiceПриИзмененииНаСервере()
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Invoice, "Company, Location, SubSubSegment, Account, Currency, AU, Client, Amount");
	
	ЗаполнитьЗначенияСвойств(Объект, ЗначенияРеквизитов);
	
	//РасчитатьДатуДокумента();
	InvoiceClient = ЗначенияРеквизитов.Client;
	
	Если ТипЗнч(Объект.Invoice) = Тип("ДокументСсылка.Invoice") Тогда
		InvoiceAmount = ЗначенияРеквизитов.Amount;
	Иначе 
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	UnallocatedMemoОстатки.AmountОстаток
			|ИЗ
			|	РегистрНакопления.UnallocatedMemo.Остатки(&ПериодОстатков, Memo = &Memo) КАК UnallocatedMemoОстатки";
		
		Запрос.УстановитьПараметр("Memo", Объект.Invoice);
		Запрос.УстановитьПараметр("ПериодОстатков", Объект.Дата);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			InvoiceAmount = ВыборкаДетальныеЗаписи.AmountОстаток;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура CreditNotesCreditNoteПриИзменении(Элемент)
	
	ПустаяДата = Дата(1,1,1);
	ТекущиеДанные = Элементы.CreditNotes.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.CreditNote) Тогда
		
		//Если ТекущиеДанные = Неопределено Тогда
		//	Возврат;
		//КонецЕсли;
		
		Если ЕстьAllocationПоДокументу(ТекущиеДанные.CreditNote) Тогда
			Сообщить(" " + ТекущиеДанные.CreditNote + " was previously allocated.");
		КонецЕсли;
		
		ЗначенияРеквизитов = CreditNotesCreditNoteПриИзмененииНаСервере(ТекущиеДанные.CreditNote);
		
		ЗначенияРеквизитов.Amount = -ЗначенияРеквизитов.Amount;
		
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ЗначенияРеквизитов);
		
		RemainingInvoiceAmount = РассчитатьRemainingInvoiceAmount();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция CreditNotesCreditNoteПриИзмененииНаСервере(CreditNote)
	
	//Если Объект.ВидОперацииNoteAllocation = Перечисления.ВидыОперацийNoteAllocation.CreditNote Тогда
	//	Объект.Дата = CreditNote.Дата;
	//КонецЕсли;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(CreditNote, "Company, Location, SubSubSegment, Account, Currency, AU, Amount, Дата");
	
	//РасчитатьДатуДокумента(ЗначенияРеквизитов.Дата);
	
	Если ТипЗнч(CreditNote) = Тип("ДокументСсылка.Memo") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	UnallocatedMemoОстатки.AmountОстаток
			|ИЗ
			|	РегистрНакопления.UnallocatedMemo.Остатки(&ПериодОстатков, Memo = &Memo) КАК UnallocatedMemoОстатки";
		
		Запрос.УстановитьПараметр("Memo", CreditNote);
		Запрос.УстановитьПараметр("ПериодОстатков", Объект.Дата);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ЗначенияРеквизитов.Amount = ВыборкаДетальныеЗаписи.AmountОстаток;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ЗначенияРеквизитов;
	
КонецФункции

&НаСервере
Процедура РасчитатьДатуДокумента(ДатаCreditNote = Неопределено)
	
	Если ДатаCreditNote = Неопределено Тогда
		
		ДатаCreditNote = Дата(1,1,1);
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Invoice) Тогда
		
		InvoiceДата = Дата(1,1,1);
		
	Иначе
		
		InvoiceДата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Invoice, "Дата");
		
	КонецЕсли;
	
	Объект.Дата = Макс(ДатаCreditNote, InvoiceДата);
	
	
КонецПроцедуры

&НаСервере
Функция РассчитатьRemainingInvoiceAmount()
	Сумма = Объект.Invoice.Amount;
	Для каждого СтрокаCreditNote Из Объект.CreditNotes Цикл
		Сумма = Сумма - СтрокаCreditNote.Amount;
	КонецЦикла;
	Возврат Сумма;
КонецФункции

&НаСервере
Функция ЕстьAllocationПоДокументу(Документ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	BilledARОбороты.Регистратор
		|ИЗ
		|	РегистрНакопления.BilledAR.Обороты(, , Регистратор, Invoice = &Документ) КАК BilledARОбороты
		|ГДЕ
		|	BilledARОбороты.Регистратор ССЫЛКА Документ.NoteAllocation
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	UnallocatedMemoОбороты.Регистратор
		|ИЗ
		|	РегистрНакопления.UnallocatedMemo.Обороты(, , Регистратор, Memo = &Документ) КАК UnallocatedMemoОбороты
		|ГДЕ
		|	UnallocatedMemoОбороты.Регистратор ССЫЛКА Документ.NoteAllocation";
	
	Запрос.УстановитьПараметр("Документ", Документ);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаBilledAR = РезультатЗапроса[0].Выбрать();
	ВыборкаUnallocatedMemo = РезультатЗапроса[1].Выбрать();
	
	Если ВыборкаBilledAR.Количество() <> 0 ИЛИ ВыборкаUnallocatedMemo.Количество() <> 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(Объект.Invoice) Тогда
		RemainingInvoiceAmount = РассчитатьRemainingInvoiceAmount();
		InvoiceAmount = ПолучитьСуммуИнвойса();
	КонецЕсли;
	//ОпределитьВидимостьПолей();
КонецПроцедуры

&НаСервере
Функция ПолучитьСуммуИнвойса()
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Invoice, "Amount");

КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Invoice, "Company, Location, SubSubSegment, Account, Currency, AU, Client");
	//
	//InvoiceClient = ЗначенияРеквизитов.Client;
	Если Объект.Дата = Неопределено Тогда
		
		Объект.Дата = ТекущаяДата();
	
	КонецЕсли; 
	
КонецПроцедуры

