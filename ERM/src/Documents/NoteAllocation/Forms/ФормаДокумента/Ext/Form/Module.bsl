
&НаКлиенте
Процедура InvoiceПриИзменении(Элемент)
	
	InvoiceПриИзмененииНаСервере();
	
	Если ЕстьКредитНотаПоИнвойсу(Объект.Invoice) Тогда
		Сообщить(" " + Объект.Invoice + ") was previously credited.");
	КонецЕсли;
	
	RemainingInvoiceAmount = РассчитатьRemainingInvoiceAmount();
	
КонецПроцедуры

&НаСервере
Процедура InvoiceПриИзмененииНаСервере()
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Invoice, "Company, Location, SubSubSegment, Account, Currency, AU");
	
	ЗаполнитьЗначенияСвойств(Объект, ЗначенияРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура CreditNotesCreditNoteПриИзменении(Элемент)
	
	ПустаяДата = Дата(1,1,1);
	ТекущиеДанные = Элементы.CreditNotes.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЕстьКредитНотаПоИнвойсу(ТекущиеДанные.CreditNote) Тогда
		Сообщить(" " + ТекущиеДанные.CreditNote + ") was previously allocated.");
	КонецЕсли;
	
	ЗначенияРеквизитов = CreditNotesCreditNoteПриИзмененииНаСервере(ТекущиеДанные.CreditNote);
	
	ЗначенияРеквизитов.Amount = -ЗначенияРеквизитов.Amount;
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ЗначенияРеквизитов);
	
	RemainingInvoiceAmount = РассчитатьRemainingInvoiceAmount();
	
КонецПроцедуры

&НаСервере
Функция CreditNotesCreditNoteПриИзмененииНаСервере(CreditNote)
	
	Объект.Дата = CreditNote.Дата;
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(CreditNote, "Company, Location, SubSubSegment, Account, Currency, AU, Amount, Дата");
	
КонецФункции

&НаСервере
Функция РассчитатьRemainingInvoiceAmount()
	Сумма = Объект.Invoice.Amount;
	Для каждого СтрокаCreditNote Из Объект.CreditNotes Цикл
		Сумма = Сумма - СтрокаCreditNote.Amount;
	КонецЦикла;
	Возврат Сумма;
КонецФункции

&НаСервере
Функция ЕстьКредитНотаПоИнвойсу(Инвойс)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	BilledARОбороты.Регистратор
		|ИЗ
		|	РегистрНакопления.BilledAR.Обороты(, , Регистратор, Invoice = &Инвойс) КАК BilledARОбороты
		|ГДЕ
		|	BilledARОбороты.Регистратор ССЫЛКА Документ.CreditNoteAllocation";
	
	Запрос.УстановитьПараметр("Инвойс", Инвойс);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() = 0 Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	RemainingInvoiceAmount = РассчитатьRemainingInvoiceAmount();
КонецПроцедуры
