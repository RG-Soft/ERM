#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения            = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаПараметрыПроведения(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	ТаблицаСвязанныеДокументы = Результат[НомераТаблиц["СвязанныеДокументы"]].Выгрузить();
	
	ПараметрыПроведения.Вставить("СвязанныеДокументы", Новый Структура("SalesOrder, Invoice, CashBatch, BatchAllocation, РучнаяКорректировка, Memo"));
	
	Для каждого СтрокаСвязанногоДокумента Из ТаблицаСвязанныеДокументы Цикл
		Если СтрокаСвязанногоДокумента.ТипСвязанногоОбъекта = Перечисления.ТипыОбъектовСвязанныхСПроводкойDSS.SalesOrder Тогда
			ПараметрыПроведения.СвязанныеДокументы.SalesOrder = СтрокаСвязанногоДокумента.Ссылка;
		ИначеЕсли СтрокаСвязанногоДокумента.ТипСвязанногоОбъекта = Перечисления.ТипыОбъектовСвязанныхСПроводкойDSS.Invoice Тогда
			ПараметрыПроведения.СвязанныеДокументы.Invoice = СтрокаСвязанногоДокумента.Ссылка;
		ИначеЕсли СтрокаСвязанногоДокумента.ТипСвязанногоОбъекта = Перечисления.ТипыОбъектовСвязанныхСПроводкойDSS.CashBatch Тогда
			ПараметрыПроведения.СвязанныеДокументы.CashBatch = СтрокаСвязанногоДокумента.Ссылка;
		ИначеЕсли СтрокаСвязанногоДокумента.ТипСвязанногоОбъекта = Перечисления.ТипыОбъектовСвязанныхСПроводкойDSS.BatchAllocation Тогда
			ПараметрыПроведения.СвязанныеДокументы.BatchAllocation = СтрокаСвязанногоДокумента.Ссылка;
		ИначеЕсли СтрокаСвязанногоДокумента.ТипСвязанногоОбъекта = Перечисления.ТипыОбъектовСвязанныхСПроводкойDSS.РучнаяКорректировка Тогда
			ПараметрыПроведения.СвязанныеДокументы.РучнаяКорректировка = СтрокаСвязанногоДокумента.Ссылка;
		ИначеЕсли СтрокаСвязанногоДокумента.ТипСвязанногоОбъекта = Перечисления.ТипыОбъектовСвязанныхСПроводкойDSS.Memo Тогда
			ПараметрыПроведения.СвязанныеДокументы.Memo = СтрокаСвязанногоДокумента.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаПараметрыПроведения(НомераТаблиц)
	
	НомераТаблиц.Вставить("Реквизиты",                       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СвязанныеДокументы",              НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПроводкаDSS.ПометкаУдаления КАК ПометкаУдаления,
	|	ПроводкаDSS.Номер КАК Номер,
	|	ПроводкаDSS.Дата КАК Дата,
	|	ПроводкаDSS.Проведен КАК Проведен,
	|	ПроводкаDSS.System КАК System,
	|	ПроводкаDSS.Документ КАК Документ,
	|	ПроводкаDSS.Модуль КАК Модуль,
	|	ПроводкаDSS.SourceCode КАК SourceCode,
	|	ПроводкаDSS.AccountLawson КАК Account,
	|	ПроводкаDSS.AU КАК AU,
	|	ПроводкаDSS.Location КАК Location,
	|	ПроводкаDSS.BaseAmount КАК BaseAmount,
	|	ПроводкаDSS.DateLawson КАК DateLawson,
	|	ПроводкаDSS.Reference КАК Reference,
	|	ПроводкаDSS.Description КАК Description,
	|	ПроводкаDSS.TranAmount КАК Amount,
	|	ПроводкаDSS.Currency КАК Currency,
	|	ПроводкаDSS.GUID КАК GUID,
	|	ПроводкаDSS.PeriodLawson КАК PeriodLawson,
	|	ПроводкаDSS.Company КАК Company,
	|	ПроводкаDSS.UpdateDateLawson КАК UpdateDateLawson,
	|	ПроводкаDSS.SeqTrnsNbrLawson КАК SeqTrnsNbrLawson,
	|	ПроводкаDSS.OrigCompanyLawson КАК OrigCompanyLawson,
	|	ПроводкаDSS.Activity КАК Activity,
	|	ПроводкаDSS.JeTypeLawson КАК JeTypeLawson,
	|	ПроводкаDSS.JournalLawson КАК JournalLawson,
	|	ПроводкаDSS.LineNbrLawson КАК LineNbrLawson,
	|	ПроводкаDSS.AutoRevLawson КАК AutoRevLawson,
	|	ПроводкаDSS.Operator КАК Operator,
	|	ПроводкаDSS.LegalFiscalFlagLawson КАК LegalFiscalFlagLawson,
	|	ПроводкаDSS.Vendor КАК Vendor,
	|	ПроводкаDSS.VendorVname КАК VendorVname,
	|	ПроводкаDSS.ApInvoice КАК ApInvoice,
	|	ПроводкаDSS.TransNbr КАК TransNbr,
	|	ПроводкаDSS.OrigOperatorId КАК OrigOperatorId,
	|	ПроводкаDSS.ProcessLevel КАК ProcessLevel,
	|	ПроводкаDSS.CashCode КАК CashCode,
	|	ПроводкаDSS.PoNumber КАК PoNumber,
	|	ПроводкаDSS.LineNbrIc КАК LineNbrIc,
	|	ПроводкаDSS.PoCode КАК PoCode,
	|	ПроводкаDSS.ItemDescription КАК ItemDescription,
	|	ПроводкаDSS.CustomerNumber КАК CustomerNumber,
	|	ПроводкаDSS.CustomerName КАК CustomerName,
	|	ПроводкаDSS.ArInvoice КАК ArInvoice,
	|	ПроводкаDSS.TaxCode КАК TaxCode,
	|	ПроводкаDSS.Item КАК Item,
	|	ПроводкаDSS.DocumentNbr КАК DocumentNbr,
	|	ПроводкаDSS.ContractNumber КАК ContractNumber,
	|	ПроводкаDSS.AktOfAcceptance КАК AktOfAcceptance,
	|	ПроводкаDSS.AktDateLawson КАК AktDateLawson,
	|	ПроводкаDSS.ApTransFormId КАК ApTransFormId,
	|	ПроводкаDSS.КонтрагентLawson КАК Client,
	|	ПроводкаDSS.Deferred КАК Deferred,
	|	ПроводкаDSS.Ответственный КАК Ответственный,
	|	ПроводкаDSS.Комментарий КАК Комментарий,
	|	ПроводкаDSS.RubAmount КАК RubAmount,
	|	ПроводкаDSS.FiscAmount КАК FiscAmount,
	|	ПроводкаDSS.TempDiff КАК TempDiff,
	|	ПроводкаDSS.PermDiff КАК PermDiff,
	|	ПроводкаDSS.ExchDiff КАК ExchDiff,
	|	ПроводкаDSS.ТипПроводки КАК ТипПроводки,
	|	ПроводкаDSS.Ваучер КАК Ваучер,
	|	ПроводкаDSS.FiscalDate КАК FiscalDate,
	|	ПроводкаDSS.Urn КАК Urn,
	|	ПроводкаDSS.SubSubSegment КАК SubSubSegment,
	|	ПроводкаDSS.AccountingPeriod КАК AccountingPeriod,
	|	ПроводкаDSS.AccountLawson.БазовыйЭлемент КАК HFMAccount,
	|	ПроводкаDSS.LegalEntity КАК LegalEntity,
	|	ПроводкаDSS.SplitCurrency КАК SplitCurrency
	|ИЗ
	|	Документ.ПроводкаDSS КАК ПроводкаDSS
	|ГДЕ
	|	ПроводкаDSS.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	DSSСвязанныеДокументы.ТипСвязанногоОбъекта КАК ТипСвязанногоОбъекта,
	|	DSSСвязанныеДокументы.СвязанныйОбъект КАК Ссылка
	|ИЗ
	|	РегистрСведений.DSSСвязанныеДокументы КАК DSSСвязанныеДокументы
	|ГДЕ
	|	DSSСвязанныеДокументы.ПроводкаDSS = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьСуммыДляПроводки(Реквизиты, СвязанныеДокументы, СчетВыручкиHFM, ВалютаUSD, Отказ) Экспорт
	
	СуммыДляПроводки = Новый Структура("Amount,BaseAmount");
	
	Если НЕ Реквизиты.HFMAccount.ПринадлежитЭлементу(СчетВыручкиHFM) И
		Реквизиты.System = "AR" И
		(Реквизиты.SourceCode = "RL" ИЛИ Реквизиты.SourceCode = "RY") И
		 Реквизиты.Account = ПланыСчетов.Lawson.TradeReceivables Тогда

		ДокументРасчетов = ?(ЗначениеЗаполнено(СвязанныеДокументы.Invoice), СвязанныеДокументы.Invoice, СвязанныеДокументы.Memo);
		// { RGS TAlmazova 11.08.2016 16:41:21 - может не найти инвойс
		//ВалютаИнвойса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументРасчетов, "Currency");
		Если НЕ ЗначениеЗаполнено(ДокументРасчетов) И Реквизиты.BaseAmount = 0 Тогда
			ДокументРасчетов = Документы.Invoice.ПустаяСсылка();
			ВалютаИнвойса = Реквизиты.Currency;
		Иначе
			ВалютаИнвойса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументРасчетов, "Currency");
		КонецЕсли;
		// } RGS TAlmazova 11.08.2016 16:41:27 - может не найти инвойс
		//ВалютаРазнесенияПлатежа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыПроведения.СвязанныеДокументы.BatchAllocation, "Currency");
		ВалютаРазнесенияПлатежа = Реквизиты.Currency;
		// { RGS TAlmazova 01.08.2017 17:59:47 - изменение алгоритма при различных валютах транзакции и инвойса
		//Если ВалютаИнвойса = ВалютаUSD И ВалютаРазнесенияПлатежа <> ВалютаUSD Тогда
		//ЭтоSplitCurrency = СтрЗаканчиваетсяНа(Реквизиты.ArInvoice, "B");
		Если ВалютаИнвойса = ВалютаUSD И ВалютаРазнесенияПлатежа <> ВалютаUSD И НЕ Реквизиты.SplitCurrency Тогда

			СуммыДляПроводки.Amount = Реквизиты.BaseAmount;
			СуммыДляПроводки.BaseAmount = Реквизиты.BaseAmount;
			
		Иначе
			
			СуммыДляПроводки.Amount = Реквизиты.Amount;
			СуммыДляПроводки.BaseAmount = Реквизиты.BaseAmount;
			
		КонецЕсли;
		// } RGS TAlmazova 01.08.2017 18:00:17 - изменение алгоритма при различных валютах транзакции и инвойса
	Иначе
	
		СуммыДляПроводки.Amount = Реквизиты.Amount;
		СуммыДляПроводки.BaseAmount = Реквизиты.BaseAmount;

	КонецЕсли;

	Возврат СуммыДляПроводки;
	
КонецФункции
#КонецЕсли