Перем ТаблицаСтрокRevenue Экспорт;
Перем НужнаСинхронизация;

Перем мМассивСтрокRevenueДоЗаписи;

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ТаблицаСтрокRevenue = Неопределено Тогда
		ТаблицаСтрокRevenue = Документы.ЗагрузкаДанныхRevenue.ПолучитьТаблицуRevenueLines(Ссылка);
	КонецЕсли;
	
	ДвиженияRevenueByClients = Движения.RevenueByClients;
	ДвиженияRevenueByClients.Записывать = Истина;
	
	Для каждого ТекСтрокаRevenue Из ТаблицаСтрокRevenue Цикл
		Движение = ДвиженияRevenueByClients.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ТекСтрокаRevenue);
		Движение.Период = Дата;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаСтрокRevenue = Неопределено Тогда
		ТаблицаСтрокRevenue = Документы.ЗагрузкаДанныхRevenue.ПолучитьТаблицуRevenueLines(Ссылка);
		НужнаСинхронизация = Ложь;
	Иначе
		НужнаСинхронизация = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
	Если НужнаСинхронизация Тогда
		
		ДобавитьДополнительныеКолонкиВТаблицуСтрокRevenue(ТаблицаСтрокRevenue);
		
		// получим таблицу строк revenue из базы
		ТаблицаСтрокRevenueБазы = Документы.ЗагрузкаДанныхRevenue.ПолучитьТаблицуRevenueLines(Ссылка);
		
		// Синхронизируем таблицу строк revenue со строками в базе данных
		РГСофт.СинхронизироватьСтрокиТаблицыСБазойДанных(ТаблицаСтрокRevenueБазы, ТаблицаСтрокRevenue, Справочники.СтрокиRevenue, Отказ);
		
		// для unallocated clients создаем привязки, чтобы потом видеть историю привязок
		СоздатьПривязкиПоUnallocated(ТаблицаСтрокRevenue);
		
	КонецЕсли;
	
	ТаблицаСтрокRevenue = Неопределено;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьДополнительныеКолонкиВТаблицуСтрокRevenue(ТаблицаСтрокRevenue)
	
	КолонкиТаблицы = ТаблицаСтрокRevenue.Колонки;
	
	Если КолонкиТаблицы.Найти("ЗагрузкаДанных") = Неопределено Тогда
		КолонкиТаблицы.Добавить("ЗагрузкаДанных", Новый ОписаниеТипов("ДокументСсылка.ЗагрузкаДанныхRevenue"));
	КонецЕсли;
	ТаблицаСтрокRevenue.ЗаполнитьЗначения(Ссылка, "ЗагрузкаДанных");
	
КонецПроцедуры

Процедура СоздатьПривязкиПоUnallocated(ТаблицаСтрокRevenue)
	
	ТаблицаСтрокRevenueРасширенная = Документы.ЗагрузкаДанныхRevenue.ДополнитьТаблицуСтрокRevenueДаннымиФайла(ТаблицаСтрокRevenue);
	ТаблицаСтрокRevenueРасширенная.Индексы.Добавить("Client");
	
	НайденныеСтроки = ТаблицаСтрокRevenueРасширенная.НайтиСтроки(Новый Структура("Client", Справочники.Контрагенты.Unallocated));
	
	НЗ_Clients = РегистрыСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СоздатьНаборЗаписей();
	НЗ_Clients.Отбор.Период.Установить(НачалоМесяца(Дата));
	НЗ_Clients.Отбор.ТипСоответствия.Установить(ТипВнешнейСистемы);
	НЗ_Clients.Отбор.ТипОбъектаВнешнейСистемы.Установить(Перечисления.ТипыОбъектовВнешнихСистем.Client);
	
	НЗ_ParentClients = РегистрыСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СоздатьНаборЗаписей();
	НЗ_ParentClients.Отбор.Период.Установить(НачалоМесяца(Дата));
	НЗ_ParentClients.Отбор.ТипСоответствия.Установить(Перечисления.ТипыСоответствий.ParentClients);
	НЗ_ParentClients.Отбор.ТипОбъектаВнешнейСистемы.Установить(Перечисления.ТипыОбъектовВнешнихСистем.Client);
	
	Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		НЗ_Clients.Очистить();
		НЗ_Clients.Отбор.Идентификатор.Установить(НайденнаяСтрока.BillingID);
		Запись = НЗ_Clients.Добавить();
		Запись.Период = НачалоМесяца(Дата);
		Запись.ТипСоответствия = ТипВнешнейСистемы;
		Запись.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Client;
		Запись.Идентификатор = НайденнаяСтрока.BillingID;
		Запись.ОбъектПриемника = НайденнаяСтрока.Client;
		НЗ_Clients.Записать(Истина);
		Если Не ЗначениеЗаполнено(НайденнаяСтрока.ParentClient) Тогда
			НЗ_ParentClients.Очистить();
			НЗ_ParentClients.Отбор.Идентификатор.Установить(НайденнаяСтрока.ParentClientID);
			Запись = НЗ_ParentClients.Добавить();
			Запись.Период = НачалоМесяца(Дата);
			Запись.ТипСоответствия = Перечисления.ТипыСоответствий.ParentClients;
			Запись.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Client;
			Запись.Идентификатор = НайденнаяСтрока.ParentClientID;
			Запись.ОбъектПриемника = НайденнаяСтрока.ParentClient;
			НЗ_ParentClients.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ДвиженияRevenueByClients = Движения.RevenueByClients;
	ДвиженияRevenueByClients.Записывать = Истина;
	ДвиженияRevenueByClients.Очистить();
	ДвиженияRevenueByClients.Записать(Истина);
	
	
КонецПроцедуры
