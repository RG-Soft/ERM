#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Не ЭтоНовый() Тогда
		ДополнительныеСвойства.Вставить("СтарыеЗначенияКлючей", ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Номер, Company,Source"));
	КонецЕсли;
	
	Если Source = Перечисления.ТипыСоответствий.HOBs Тогда
		Если ЭтоНовый() Тогда
			УстановитьНовыйНомер("HB");
		КонецЕсли;
		РеквизитыИнвойса = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Company,LegalEntity");
		Если НЕ РегистрыСведений.ДатыDIRИзГИС.ЗаписьЕстьВРегистре(РеквизитыИнвойса) Тогда
			Даты = Новый Соответствие();
			Даты.Вставить("JobEndDate", ?(ЗначениеЗаполнено(ФактическаяДатаРеализации),ФактическаяДатаРеализации,Дата));
			РегистрыСведений.DIR.ЗаписатьДаты(Ссылка, Даты);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ОбменДанными.Загрузка Тогда
		
		Если ЗначениеЗаполнено(TriggerDate) Тогда
			
			Если Врег(Contract.PTType) = Врег("Business") Тогда
				
				Календарь = AU.ПодразделениеОрганизации.БазовыйЭлемент.GeoMarket.ManagementGeomarket.ПроизводственныйКалендарь;
				
				Если Календарь.Пустая() Тогда
					
					Календарь = КалендарныеГрафики.ОсновнойПроизводственныйКалендарь();
					
				КонецЕсли;
				
				DueDateFrom = ?(ЗначениеЗаполнено(Contract.PTDaysFrom), КалендарныеГрафики.ДатаПоКалендарю(Календарь, TriggerDate, Contract.PTDaysFrom, Ложь), DueDateFrom);
				DueDateTo = ?(ЗначениеЗаполнено(Contract.СрокОплаты), КалендарныеГрафики.ДатаПоКалендарю(Календарь, TriggerDate, Contract.СрокОплаты, Ложь), DueDateTo);
					
			Иначе
					
				КоличествоСекундВСутках = 86400;
					
				DueDateFrom = ?(ЗначениеЗаполнено(Contract.PTDaysFrom), TriggerDate + КоличествоСекундВСутках * Contract.PTDaysFrom, DueDateFrom);
				DueDateTo = ?(ЗначениеЗаполнено(Contract.СрокОплаты), TriggerDate + КоличествоСекундВСутках * Contract.СрокОплаты, DueDateTo);
					
			КонецЕсли;
				
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ДополнительныеСвойства.Свойство("СтарыеЗначенияКлючей") Тогда
		
		СтарыеЗначенияКлючей = ДополнительныеСвойства.СтарыеЗначенияКлючей;
		Если СтарыеЗначенияКлючей.Номер <> Номер
			ИЛИ СтарыеЗначенияКлючей.Company <> Company Тогда
			
			НЗ = РегистрыСведений.КлючиИнвойсов.СоздатьНаборЗаписей();
			НЗ.Отбор.ArInvoice.Установить(СтарыеЗначенияКлючей.Номер);
			НЗ.Отбор.Company.Установить(СтарыеЗначенияКлючей.Company);
			НЗ.Отбор.Source.Установить(СтарыеЗначенияКлючей.Source);
			НЗ.Записать(Истина);
			
			НЗ.Отбор.ArInvoice.Установить(Номер);
			НЗ.Отбор.Company.Установить(Company);
			НЗ.Отбор.Source.Установить(Source);
			ЗаписьНабора = НЗ.Добавить();
			ЗаписьНабора.ArInvoice = Номер;
			ЗаписьНабора.Company = Company;
			ЗаписьНабора.Source = Source;
			ЗаписьНабора.Invoice = Ссылка;
			НЗ.Записать(Истина);
			
		КонецЕсли;
		
	Иначе
		
		НЗ = РегистрыСведений.КлючиИнвойсов.СоздатьНаборЗаписей();
		НЗ.Отбор.ArInvoice.Установить(Номер);
		НЗ.Отбор.Company.Установить(Company);
		НЗ.Отбор.Source.Установить(Source);
		ЗаписьНабора = НЗ.Добавить();
		ЗаписьНабора.ArInvoice = Номер;
		ЗаписьНабора.Company = Company;
		ЗаписьНабора.Source = Source;
		ЗаписьНабора.Invoice = Ссылка;
		НЗ.Записать(Истина);
		
	КонецЕсли;
	
	ЗаполнятьИзДатаОкончания = ЗначениеЗаполнено(ОтчетныйПериод_ДатаОкончания) И Дата >= Дата(2020, 1, 1); 
	
	Если Source = Перечисления.ТипыСоответствий.OracleMI И ЗаполнятьИзДатаОкончания Тогда
		
		Даты = Новый Соответствие();
		Даты.Вставить("JobEndDate", ОтчетныйПериод_ДатаОкончания);
		Даты.Вставить("FTLSubmissionDate", ShipDateActual);
		РегистрыСведений.DIR.ЗаписатьДаты(Ссылка, Даты);
		
	ИначеЕсли Source = Перечисления.ТипыСоответствий.OracleSmith Тогда
		
		JobEndDate = ?(ЗаполнятьИзДатаОкончания, ОтчетныйПериод_ДатаОкончания, ФактическаяДатаРеализации);
		
		Если JobEndDate <> Дата(1,1,1) Тогда
			Даты = Новый Соответствие();
			Даты.Вставить("JobEndDate", JobEndDate);
			РегистрыСведений.DIR.ЗаписатьДаты(Ссылка, Даты);
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	НЗ = РегистрыСведений.КлючиИнвойсов.СоздатьНаборЗаписей();
	НЗ.Отбор.ArInvoice.Установить(Номер);
	НЗ.Отбор.Company.Установить(Company);
	НЗ.Отбор.Source.Установить(Source);
	НЗ.Записать(Истина);
	
КонецПроцедуры

#КонецЕсли