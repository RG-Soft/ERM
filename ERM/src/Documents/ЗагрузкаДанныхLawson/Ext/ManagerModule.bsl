#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ЗагрузитьДанныеИзФайла(СтруктураПараметров, АдресХранилища) Экспорт
	
	ДанныеДляЗаполнения = Новый Структура();
	ТаблицаДанных = СтруктураПараметров.ТаблицаДанных;
	ТекстОшибки = "";
	
	ФайлДанных = СтруктураПараметров.ИсточникДанных.Получить();
	
	ИмяКаталога = КаталогВременныхФайлов() + Строка(Новый УникальныйИдентификатор());
	СоздатьКаталог(ИмяКаталога);
	ПутьКФайлу = ИмяКаталога + "\DSS.csv";
	ФайлДанных.Записать(ПутьКФайлу);
	
	ПутьСхемы = ИмяКаталога+"\schema.ini";
	ФайлСхемы = Новый ТекстовыйДокумент;
	ФайлСхемы.ДобавитьСтроку("["+ "DSS.csv" +"]" + Символы.ПС + "DecimalSymbol=.");
	ФайлСхемы.Записать(ПутьСхемы, КодировкаТекста.OEM);
	
	Connection = Новый COMОбъект("ADODB.Connection");
	
	Попытка
		СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + ИмяКаталога + ";Extended Properties=""text;HDR=NO;IMEX=1;""";
		Connection.Open(СтрокаПодключения);
	Исключение
		Попытка
			СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + ИмяКаталога + ";Extended Properties=""text;HDR=NO;IMEX=1""";
			Connection.Open(СтрокаПодключения);
		Исключение
			ВызватьИсключение "Can't open connection! " + ОписаниеОшибки();
		КонецПопытки;		
	КонецПопытки;
	
	rs = Новый COMObject("ADODB.RecordSet");
	
	Стр_SQL = "Select * FROM DSS.csv";
	rs.Open(Стр_SQL, Connection);
	
	СтруктураКолонок = СтруктураПараметров.СтруктураКолонок;
	СоответствиеКолонок = Новый Соответствие;
	Для каждого ЭлементСтруктурыКолонок Из СтруктураКолонок Цикл
		СоответствиеКолонок.Вставить(ЭлементСтруктурыКолонок.ИмяПоля, ЭлементСтруктурыКолонок.ИмяКолонки);
	КонецЦикла;
	
	ТаблицаДанных = ИнициализироватьТаблицуДанных(СтруктураКолонок);
	
	rs.MoveFirst();
	
	Пока rs.EOF() = 0 Цикл
		
		СтрокаДанных = ТаблицаДанных.Добавить();
		
		Для каждого ЭлементСоответствия Из СоответствиеКолонок Цикл
			
			Попытка
				ТекЗначение = rs.Fields(ЭлементСоответствия.Значение).Value;
			Исключение
				ДанныеДляЗаполнения.Вставить("ОшибкаЗаполнения", ОписаниеОшибки());
				ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
				Возврат;
			КонецПопытки;
			
			Если ТипЗнч(ТекЗначение) = ТипЗнч("Строка") Тогда
				СтрокаДанных[ЭлементСоответствия.Ключ] = СокрЛП(ТекЗначение);
			Иначе
				СтрокаДанных[ЭлементСоответствия.Ключ] = ТекЗначение;
			КонецЕсли;
			
		КонецЦикла;
		
		rs.MoveNext();
		
	КонецЦикла;
	
	rs.Close();
	Connection.Close();
	
	УдалитьФайлы(ИмяКаталога);
	
	ЗагрузитьИЗаписатьДвижения(СтруктураПараметров.Ссылка, СтруктураПараметров.Дата, ТаблицаДанных);
	
	ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
	
КонецПроцедуры

Функция ИнициализироватьТаблицуДанных(СтруктураКолонок)
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	
	Для каждого ТекСтрокаСтруктурыКолонок Из СтруктураКолонок Цикл
		ТаблицаДанных.Колонки.Добавить(ТекСтрокаСтруктурыКолонок.ИмяПоля);
	КонецЦикла;
	
	Возврат ТаблицаДанных;
	
КонецФункции

Процедура ЗагрузитьИЗаписатьДвижения(Ссылка, ДатаДокумента, ТаблицаДанных)
	
	ТаблицаДанных.Колонки.Добавить("ДокументЗагрузки");
	ТаблицаДанных.ЗаполнитьЗначения(Ссылка, "ДокументЗагрузки");
	
	НЗ = РегистрыСведений.DSSSourceData.СоздатьНаборЗаписей();
	НЗ.Отбор.ДокументЗагрузки.Установить(Ссылка);
	НЗ.Загрузить(ТаблицаДанных);
	НЗ.Записать(Истина);
	
КонецПроцедуры

Процедура ВыполнитьПроверкуНастроекСинхронизации(СтруктураПараметров, АдресХранилища) Экспорт
	
	ДанныеДляЗаполнения = Новый Структура();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЛОЖЬ КАК КоллизияОтработана,
		|	""Specify the 1C object"" КАК Описание,
		|	&ТипВнешнейСистемы КАК ТипСоответствия,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Segment) КАК ТипОбъектаВнешнейСистемы,
		|	ЗНАЧЕНИЕ(Справочник.Сегменты.ПустаяСсылка) КАК ОбъектПриемника,
		|	DSSSourceData.BusSeg КАК Идентификатор
		|ИЗ
		|	РегистрСведений.DSSSourceData КАК DSSSourceData
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|				&Период,
		|				ТипСоответствия = &ТипВнешнейСистемы
		|					И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Segment)) КАК НастройкаСинхронизацииSegment
		|		ПО DSSSourceData.BusSeg = НастройкаСинхронизацииSegment.Идентификатор
		|			И (DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки)
		|ГДЕ
		|	НастройкаСинхронизацииSegment.ОбъектПриемника ЕСТЬ NULL 
		|	И НЕ DSSSourceData.BusSeg = """"
		|	И DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ,
		|	""Specify the 1C object"",
		|	&ТипВнешнейСистемы,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Segment),
		|	ЗНАЧЕНИЕ(Справочник.Сегменты.ПустаяСсылка),
		|	DSSSourceData.SubSeg
		|ИЗ
		|	РегистрСведений.DSSSourceData КАК DSSSourceData
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|				&Период,
		|				ТипСоответствия = &ТипВнешнейСистемы
		|					И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Segment)) КАК НастройкаСинхронизацииSubSegment
		|		ПО (DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки)
		|			И DSSSourceData.SubSeg = НастройкаСинхронизацииSubSegment.Идентификатор
		|ГДЕ
		|	НастройкаСинхронизацииSubSegment.ОбъектПриемника ЕСТЬ NULL 
		|	И &ТипВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.Lawson)
		|	И НЕ DSSSourceData.SubSeg = """"
		|	И DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ,
		|	""Specify the 1C object"",
		|	&ТипВнешнейСистемы,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Segment),
		|	ЗНАЧЕНИЕ(Справочник.Сегменты.ПустаяСсылка),
		|	DSSSourceData.SubSubSeg
		|ИЗ
		|	РегистрСведений.DSSSourceData КАК DSSSourceData
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|				&Период,
		|				ТипСоответствия = &ТипВнешнейСистемы
		|					И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Segment)) КАК НастройкаСинхронизацииSubSubSegment
		|		ПО (DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки)
		|			И DSSSourceData.SubSubSeg = НастройкаСинхронизацииSubSubSegment.Идентификатор
		|ГДЕ
		|	НастройкаСинхронизацииSubSubSegment.ОбъектПриемника ЕСТЬ NULL 
		|	И &ТипВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.Lawson)
		|	И НЕ DSSSourceData.SubSubSeg = """"
		|	И DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ,
		|	""Specify the 1C object"",
		|	&ТипВнешнейСистемы,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Geomarket),
		|	ЗНАЧЕНИЕ(Справочник.Geomarkets.ПустаяСсылка),
		|	DSSSourceData.Geo
		|ИЗ
		|	РегистрСведений.DSSSourceData КАК DSSSourceData
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|				&Период,
		|				ТипСоответствия = &ТипВнешнейСистемы
		|					И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Geomarket)) КАК НастройкаСинхронизацииGeomarket
		|		ПО (DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки)
		|			И DSSSourceData.Geo = НастройкаСинхронизацииGeomarket.Идентификатор
		|ГДЕ
		|	НастройкаСинхронизацииGeomarket.ОбъектПриемника ЕСТЬ NULL 
		|	И НЕ DSSSourceData.Geo = """"
		|	И DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ,
		|	""Specify the 1C object"",
		|	&ТипВнешнейСистемы,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Geomarket),
		|	ЗНАЧЕНИЕ(Справочник.Geomarkets.ПустаяСсылка),
		|	DSSSourceData.SubGeo
		|ИЗ
		|	РегистрСведений.DSSSourceData КАК DSSSourceData
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|				&Период,
		|				ТипСоответствия = &ТипВнешнейСистемы
		|					И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Geomarket)) КАК НастройкаСинхронизацииSubGeomarket
		|		ПО (DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки)
		|			И DSSSourceData.SubGeo = НастройкаСинхронизацииSubGeomarket.Идентификатор
		|ГДЕ
		|	НастройкаСинхронизацииSubGeomarket.ОбъектПриемника ЕСТЬ NULL 
		|	И НЕ DSSSourceData.SubGeo = """"
		|	И DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ,
		|	""Specify the 1C object"",
		|	&ТипВнешнейСистемы,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.AccountingUnit),
		|	ЗНАЧЕНИЕ(Справочник.КостЦентры.ПустаяСсылка),
		|	DSSSourceData.AccountUnit
		|ИЗ
		|	РегистрСведений.DSSSourceData КАК DSSSourceData
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|				&Период,
		|				ТипСоответствия = &ТипВнешнейСистемы
		|					И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.AccountingUnit)) КАК НастройкаСинхронизацииSubGeomarket
		|		ПО (DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки)
		|			И DSSSourceData.AccountUnit = НастройкаСинхронизацииSubGeomarket.Идентификатор
		|ГДЕ
		|	НастройкаСинхронизацииSubGeomarket.ОбъектПриемника ЕСТЬ NULL 
		|	И НЕ DSSSourceData.AccountUnit = """"
		|	И DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ,
		|	""Specify the 1C object"",
		|	&ТипВнешнейСистемы,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Currency),
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка),
		|	DSSSourceData.CurrencyCode
		|ИЗ
		|	РегистрСведений.DSSSourceData КАК DSSSourceData
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|				&Период,
		|				ТипСоответствия = &ТипВнешнейСистемы
		|					И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Currency)) КАК НастройкаСинхронизацииCurrency
		|		ПО (DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки)
		|			И DSSSourceData.CurrencyCode = НастройкаСинхронизацииCurrency.Идентификатор
		|ГДЕ
		|	НастройкаСинхронизацииCurrency.ОбъектПриемника ЕСТЬ NULL 
		|	И DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки
		|	И НЕ DSSSourceData.CurrencyCode = """"";
	
	Запрос.УстановитьПараметр("ДокументЗагрузки", СтруктураПараметров.Ссылка);
	Запрос.УстановитьПараметр("Период", СтруктураПараметров.Дата);
	Запрос.УстановитьПараметр("ТипВнешнейСистемы", СтруктураПараметров.ТипВнешнейСистемы);
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеДляЗаполнения.Вставить("ТаблицаКоллизий", РезультатЗапроса.Выгрузить());
	
	ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
	
КонецПроцедуры

Процедура СформироватьПроводкиDSS(СтруктураПараметров, АдресХранилища) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	DSSSourceData.BusSeg КАК Segment,
		|	DSSSourceData.SubSeg КАК SubSegment,
		|	DSSSourceData.SubSubSeg КАК SubSubSegment,
		|	DSSSourceData.Geo КАК Geomarket,
		|	DSSSourceData.SubGeo КАК SubGeomarket,
		|	DSSSourceData.CustomerNumber,
		|	DSSSourceData.Reference,
		|	DSSSourceData.CurrencyCode КАК Currency,
		|	DSSSourceData.AccountUnit,
		|	DSSSourceData.System,
		|	DSSSourceData.JeType,
		|	DSSSourceData.Journal,
		|	DSSSourceData.GltObjId,
		|	DSSSourceData.Area,
		|	DSSSourceData.Mgmtctry,
		|	DSSSourceData.Company,
		|	DSSSourceData.Location,
		|	DSSSourceData.MgmtNIS_BLSummaryAcct,
		|	DSSSourceData.SummaryAcct,
		|	DSSSourceData.Account,
		|	DSSSourceData.SubAccount,
		|	DSSSourceData.FiscalYear,
		|	DSSSourceData.Date,
		|	DSSSourceData.AccountingPeriod,
		|	DSSSourceData.UpdateDate,
		|	DSSSourceData.SeqTrnsNbr,
		|	DSSSourceData.PostingDate,
		|	DSSSourceData.Description,
		|	DSSSourceData.TranAmount,
		|	DSSSourceData.BaseAmount,
		|	DSSSourceData.OrigCompany,
		|	DSSSourceData.Activity,
		|	DSSSourceData.SourceCode,
		|	DSSSourceData.LineNbr,
		|	DSSSourceData.AutoRev,
		|	DSSSourceData.Operator,
		|	DSSSourceData.LegalFiscalFlag,
		|	DSSSourceData.Vendor,
		|	DSSSourceData.VendorVName,
		|	DSSSourceData.ApInvoice,
		|	DSSSourceData.TransNbr,
		|	DSSSourceData.OrigOperatorId,
		|	DSSSourceData.ProcessLevel,
		|	DSSSourceData.CashCode,
		|	DSSSourceData.PoNumber,
		|	DSSSourceData.LineNbrIc,
		|	DSSSourceData.PoCode,
		|	DSSSourceData.ItemDescription,
		|	DSSSourceData.ArInvoice,
		|	DSSSourceData.TaxCode,
		|	DSSSourceData.Item,
		|	DSSSourceData.DocumentNbr,
		|	DSSSourceData.ContractNumber,
		|	DSSSourceData.AktOfAcceptance,
		|	DSSSourceData.AktDate,
		|	DSSSourceData.ApTransFormId,
		|	DSSSourceData.Urn,
		|	DSSSourceData.CustomerName
		|ПОМЕСТИТЬ ВТ_ДанныеФайла
		|ИЗ
		|	РегистрСведений.DSSSourceData КАК DSSSourceData
		|ГДЕ
		|	DSSSourceData.ДокументЗагрузки = &ДокументЗагрузки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.Идентификатор КАК Идентификатор,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_СоответствиеСегментов
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|			&Период,
		|			ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.Lawson)
		|				И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Segment)
		|				И Идентификатор В
		|					(ВЫБРАТЬ
		|						ВТ_ДанныеФайла.Segment
		|					ИЗ
		|						ВТ_ДанныеФайла КАК ВТ_ДанныеФайла
		|			
		|					ОБЪЕДИНИТЬ
		|			
		|					ВЫБРАТЬ
		|						ВТ_ДанныеФайла.SubSegment
		|					ИЗ
		|						ВТ_ДанныеФайла КАК ВТ_ДанныеФайла
		|			
		|					ОБЪЕДИНИТЬ
		|			
		|					ВЫБРАТЬ
		|						ВТ_ДанныеФайла.SubSubSegment
		|					ИЗ
		|						ВТ_ДанныеФайла КАК ВТ_ДанныеФайла)) КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.Идентификатор КАК Идентификатор,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_СоответствиеГеомаркетов
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|			&Период,
		|			ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.Lawson)
		|				И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Geomarket)
		|				И Идентификатор В
		|					(ВЫБРАТЬ
		|						ВТ_ДанныеФайла.Geomarket
		|					ИЗ
		|						ВТ_ДанныеФайла КАК ВТ_ДанныеФайла
		|			
		|					ОБЪЕДИНИТЬ
		|			
		|					ВЫБРАТЬ
		|						ВТ_ДанныеФайла.SubGeomarket
		|					ИЗ
		|						ВТ_ДанныеФайла КАК ВТ_ДанныеФайла)) КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.Идентификатор КАК Идентификатор,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_СоответствиеКлиентовCustomerNumber
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|			&Период,
		|			ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.Lawson)
		|				И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Client)
		|				И Идентификатор В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_ДанныеФайла.CustomerNumber
		|					ИЗ
		|						ВТ_ДанныеФайла КАК ВТ_ДанныеФайла)) КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.Идентификатор КАК Идентификатор,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_СоответствиеКлиентовReference
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|			&Период,
		|			ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.Lawson)
		|				И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Client)
		|				И Идентификатор В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_ДанныеФайла.Reference
		|					ИЗ
		|						ВТ_ДанныеФайла КАК ВТ_ДанныеФайла)) КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.Идентификатор КАК Идентификатор,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_СоответствиеCurrency
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|			&Период,
		|			ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.Lawson)
		|				И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Currency)
		|				И Идентификатор В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_ДанныеФайла.Currency
		|					ИЗ
		|						ВТ_ДанныеФайла КАК ВТ_ДанныеФайла)) КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.Идентификатор КАК Идентификатор,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_СоответствиеAccountingUnit
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|			&Период,
		|			ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.Lawson)
		|				И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.AccountingUnit)
		|				И Идентификатор В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_ДанныеФайла.AccountUnit
		|					ИЗ
		|						ВТ_ДанныеФайла КАК ВТ_ДанныеФайла)) КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ДанныеФайла.ArInvoice КАК ArInvoice,
		|	ВТ_ДанныеФайла.Company КАК Company
		|ПОМЕСТИТЬ ВТ_КлючиПоискаInvoiceSalesOrders
		|ИЗ
		|	ВТ_ДанныеФайла КАК ВТ_ДанныеФайла
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ArInvoice,
		|	Company
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Lawson.КодЧислом,
		|	Lawson.Ссылка
		|ИЗ
		|	ПланСчетов.Lawson КАК Lawson
		|ГДЕ
		|	НЕ Lawson.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КлючиИнвойсов.ArInvoice КАК ArInvoice,
		|	КлючиИнвойсов.Invoice
		|ИЗ
		|	РегистрСведений.КлючиИнвойсов КАК КлючиИнвойсов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КлючиПоискаInvoiceSalesOrders КАК ВТ_КлючиПоискаInvoiceSalesOrders
		|		ПО КлючиИнвойсов.ArInvoice = ВТ_КлючиПоискаInvoiceSalesOrders.ArInvoice
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КлючиSalesOrders.ArInvoice,
		|	КлючиSalesOrders.Company,
		|	КлючиSalesOrders.SalesOrder
		|ИЗ
		|	РегистрСведений.КлючиSalesOrders КАК КлючиSalesOrders
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КлючиПоискаInvoiceSalesOrders КАК ВТ_КлючиПоискаInvoiceSalesOrders
		|		ПО КлючиSalesOrders.ArInvoice = ВТ_КлючиПоискаInvoiceSalesOrders.ArInvoice
		|			И КлючиSalesOrders.Company = ВТ_КлючиПоискаInvoiceSalesOrders.Company
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СоответствиеСегментов.ОбъектПриемника КАК Segment,
		|	ВТ_СоответствиеСегментов1.ОбъектПриемника КАК SubSegment,
		|	ВТ_СоответствиеСегментов2.ОбъектПриемника КАК SubSubSegment,
		|	ВТ_СоответствиеГеомаркетов.ОбъектПриемника КАК Geomarket,
		|	ВТ_СоответствиеГеомаркетов1.ОбъектПриемника КАК SubGeomarket,
		|	ВТ_СоответствиеКлиентовCustomerNumber.ОбъектПриемника КАК ClientCustomerNumber,
		|	ВТ_СоответствиеCurrency.ОбъектПриемника КАК Currency,
		|	ВТ_СоответствиеКлиентовReference.ОбъектПриемника КАК ClientReference,
		|	ВТ_СоответствиеAccountingUnit.ОбъектПриемника КАК AU,
		|	ВТ_ДанныеФайла.System,
		|	ВТ_ДанныеФайла.SourceCode,
		|	ВТ_ДанныеФайла.Account,
		|	ВТ_ДанныеФайла.BaseAmount,
		|	ВТ_ДанныеФайла.Date,
		|	ВТ_ДанныеФайла.Reference,
		|	ВТ_ДанныеФайла.Description,
		|	ВТ_ДанныеФайла.TranAmount,
		|	ВТ_ДанныеФайла.PostingDate,
		|	ВТ_ДанныеФайла.Company,
		|	ВТ_ДанныеФайла.UpdateDate,
		|	ВТ_ДанныеФайла.SeqTrnsNbr,
		|	ВТ_ДанныеФайла.OrigCompany,
		|	ВТ_ДанныеФайла.Activity,
		|	ВТ_ДанныеФайла.JeType,
		|	ВТ_ДанныеФайла.Journal,
		|	ВТ_ДанныеФайла.LineNbr,
		|	ВТ_ДанныеФайла.AutoRev,
		|	ВТ_ДанныеФайла.Operator,
		|	ВТ_ДанныеФайла.LegalFiscalFlag,
		|	ВТ_ДанныеФайла.Vendor,
		|	ВТ_ДанныеФайла.VendorVName,
		|	ВТ_ДанныеФайла.ApInvoice,
		|	ВТ_ДанныеФайла.TransNbr,
		|	ВТ_ДанныеФайла.OrigOperatorId,
		|	ВТ_ДанныеФайла.ProcessLevel,
		|	ВТ_ДанныеФайла.CashCode,
		|	ВТ_ДанныеФайла.PoNumber,
		|	ВТ_ДанныеФайла.LineNbrIc,
		|	ВТ_ДанныеФайла.PoCode,
		|	ВТ_ДанныеФайла.ItemDescription,
		|	ВТ_ДанныеФайла.CustomerNumber,
		|	ВТ_ДанныеФайла.CustomerName,
		|	ВТ_ДанныеФайла.ArInvoice,
		|	ВТ_ДанныеФайла.TaxCode,
		|	ВТ_ДанныеФайла.Item,
		|	ВТ_ДанныеФайла.DocumentNbr,
		|	ВТ_ДанныеФайла.ContractNumber,
		|	ВТ_ДанныеФайла.AktOfAcceptance,
		|	ВТ_ДанныеФайла.AktDate,
		|	ВТ_ДанныеФайла.ApTransFormId,
		|	ВТ_ДанныеФайла.Urn,
		|	ЕСТЬNULL(ПроводкаDSS.Ссылка, НЕОПРЕДЕЛЕНО) КАК ПроводкаDSS,
		|	ВТ_ДанныеФайла.GltObjId
		|ИЗ
		|	ВТ_ДанныеФайла КАК ВТ_ДанныеФайла
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоответствиеСегментов КАК ВТ_СоответствиеСегментов
		|		ПО ВТ_ДанныеФайла.Segment = ВТ_СоответствиеСегментов.Идентификатор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоответствиеСегментов КАК ВТ_СоответствиеСегментов1
		|		ПО ВТ_ДанныеФайла.SubSegment = ВТ_СоответствиеСегментов1.Идентификатор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоответствиеСегментов КАК ВТ_СоответствиеСегментов2
		|		ПО ВТ_ДанныеФайла.SubSubSegment = ВТ_СоответствиеСегментов2.Идентификатор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоответствиеГеомаркетов КАК ВТ_СоответствиеГеомаркетов
		|		ПО ВТ_ДанныеФайла.Geomarket = ВТ_СоответствиеГеомаркетов.Идентификатор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоответствиеГеомаркетов КАК ВТ_СоответствиеГеомаркетов1
		|		ПО ВТ_ДанныеФайла.SubGeomarket = ВТ_СоответствиеГеомаркетов1.Идентификатор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоответствиеКлиентовCustomerNumber КАК ВТ_СоответствиеКлиентовCustomerNumber
		|		ПО ВТ_ДанныеФайла.CustomerNumber = ВТ_СоответствиеКлиентовCustomerNumber.Идентификатор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоответствиеCurrency КАК ВТ_СоответствиеCurrency
		|		ПО ВТ_ДанныеФайла.Currency = ВТ_СоответствиеCurrency.Идентификатор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоответствиеКлиентовReference КАК ВТ_СоответствиеКлиентовReference
		|		ПО ВТ_ДанныеФайла.Reference = ВТ_СоответствиеКлиентовReference.Идентификатор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоответствиеAccountingUnit КАК ВТ_СоответствиеAccountingUnit
		|		ПО ВТ_ДанныеФайла.AccountUnit = ВТ_СоответствиеAccountingUnit.Идентификатор
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроводкаDSS КАК ПроводкаDSS
		|		ПО (НЕ ПроводкаDSS.ПометкаУдаления)
		|			И ВТ_ДанныеФайла.GltObjId = ПроводкаDSS.Номер";
	
	Запрос.УстановитьПараметр("Период", СтруктураПараметров.Дата);
	Запрос.УстановитьПараметр("ДокументЗагрузки", СтруктураПараметров.Ссылка);
	
	НачатьТранзакцию();
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ЗафиксироватьТранзакцию();
	
	КэшСчетовЛоусон = РезультатЗапроса[8].Выгрузить();
	КэшСчетовЛоусон.Индексы.Добавить("КодЧислом");
	
	КэшИнвойсов = РезультатЗапроса[9].Выгрузить();
	КэшИнвойсов.Индексы.Добавить("ArInvoice");
	
	КэшSalesOrders = РезультатЗапроса[10].Выгрузить();
	КэшSalesOrders.Индексы.Добавить("ArInvoice");
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[11].Выбрать();
	
	НЗ = РегистрыСведений.DSSСформированныеПриЗагрузке.СоздатьНаборЗаписей();
	НЗ.Отбор.ДокументЗагрузки.Установить(СтруктураПараметров.Ссылка);
	
	НачатьТранзакцию();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПроводкаDSS) Тогда
			ПроводкаDSSОбъект = ВыборкаДетальныеЗаписи.ПроводкаDSS.ПолучитьОбъект();
		Иначе
			ПроводкаDSSОбъект = Документы.ПроводкаDSS.СоздатьДокумент();
			ПроводкаDSSОбъект.GUID = Строка(Новый УникальныйИдентификатор());
		КонецЕсли;
		
		ЗаполнитьПроводкуDSS(ПроводкаDSSОбъект, ВыборкаДетальныеЗаписи, КэшСчетовЛоусон, СтруктураПараметров.Дата);
		
		ПроводкаDSSОбъект.Записать(РежимЗаписиДокумента.Запись);
		
		СформироватьСвязанныеОбъекты(ПроводкаDSSОбъект, КэшИнвойсов, КэшSalesOrders);
		
		ЗаписьНабора = НЗ.Добавить();
		ЗаписьНабора.ДокументЗагрузки = СтруктураПараметров.Ссылка;
		ЗаписьНабора.ПроводкаDSS = ПроводкаDSSОбъект.Ссылка;
		
	КонецЦикла;
	
	НЗ.Записать(Истина);
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Процедура ЗаполнитьПроводкуDSS(ПроводкаDSSОбъект, ДанныеДляЗаполнения, КэшСчетовЛоусон, ПериодЗагрузки)
	
	ЗаполнитьЗначенияСвойств(ПроводкаDSSОбъект, ДанныеДляЗаполнения);
	
	ПроводкаDSSОбъект.Номер = ДанныеДляЗаполнения.GltObjId; 
	ПроводкаDSSОбъект.Дата = ПериодЗагрузки;
	ПроводкаDSSОбъект.Документ = ПроводкаDSSОбъект.Ссылка;
	
	ПроводкаDSSОбъект.PeriodLawson = ПреобразоватьВДату(ДанныеДляЗаполнения.PostingDate, "PostingDate");
	Если НЕ Строка(ДанныеДляЗаполнения.Date) = Строка(Дата(1,1,1)) Тогда
		ПроводкаDSSОбъект.DateLawson = ПреобразоватьВДату(ДанныеДляЗаполнения.Date, "Date");
	КонецЕсли;
	Если НЕ Строка(ДанныеДляЗаполнения.UpdateDate) = Строка(Дата(1,1,1)) Тогда
		ПроводкаDSSОбъект.UpdateDateLawson = ПреобразоватьВДату(ДанныеДляЗаполнения.UpdateDate, "UpdateDate");
	КонецЕсли;
	Если НЕ Строка(ДанныеДляЗаполнения.AktDate) = Строка(Дата(1,1,1)) Тогда
		ПроводкаDSSОбъект.AktDateLawson = ПреобразоватьВДату(ДанныеДляЗаполнения.AktDate, "AktDate");
	КонецЕсли;
	
	ПроводкаDSSОбъект.JournalLawson = ДанныеДляЗаполнения.Journal;
	ПроводкаDSSОбъект.SeqTrnsNbrLawson = ДанныеДляЗаполнения.SeqTrnsNbr;
	ПроводкаDSSОбъект.OrigCompanyLawson = ДанныеДляЗаполнения.OrigCompany;
	ПроводкаDSSОбъект.LineNbrLawson = ДанныеДляЗаполнения.LineNbr;
	ПроводкаDSSОбъект.JeTypeLawson = ДанныеДляЗаполнения.JeType;
	
	СтрокаСчетаЛоусон = КэшСчетовЛоусон.Найти(ДанныеДляЗаполнения.Account, "КодЧислом");
	Если СтрокаСчетаЛоусон <> Неопределено Тогда
		ПроводкаDSSОбъект.AccountLawson = СтрокаСчетаЛоусон.Ссылка;
		//ПроводкаDSSОбъект.AccountNumber = СтрокаСчетаЛоусон.КодЧислом;
		//ПроводкаDSSОбъект.SumAcctNumber = СтрокаСчетаЛоусон.РодительКодЧислом;
	КонецЕсли;
	
	ПреобразованиеСокрЛП(ПроводкаDSSОбъект);
	
	ЭтоПроводкаAPAP = (СокрЛП(ДанныеДляЗаполнения.System) = "AP" И (СокрЛП(ДанныеДляЗаполнения.SourceCode) = "AP" ИЛИ СокрЛП(ДанныеДляЗаполнения.SourceCode) = "VP"));
	Если ЭтоПроводкаAPAP Тогда
		ПроводкаDSSОбъект.ТипПроводки = ПолучитьТипПроводкиAPAP(ДанныеДляЗаполнения.TranAmount, ДанныеДляЗаполнения.Description);
		ПроводкаDSSОбъект.Ваучер = ПолучитьВаучерПоDescription(ДанныеДляЗаполнения.Description);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПреобразованиеСокрЛП(ПроводкаDSSОбъект)
	
	ПроводкаDSSОбъект.Reference = СокрЛП(ПроводкаDSSОбъект.Reference);
	ПроводкаDSSОбъект.Description = СокрЛП(ПроводкаDSSОбъект.Description);
	ПроводкаDSSОбъект.TransNbr = СокрЛП(ПроводкаDSSОбъект.TransNbr);
	ПроводкаDSSОбъект.Vendor = СокрЛП(ПроводкаDSSОбъект.Vendor);
	ПроводкаDSSОбъект.VendorVname = СокрЛП(ПроводкаDSSОбъект.VendorVname);
	ПроводкаDSSОбъект.CustomerNumber = СокрЛП(ПроводкаDSSОбъект.CustomerNumber);
	ПроводкаDSSОбъект.CustomerName = СокрЛП(ПроводкаDSSОбъект.CustomerName);
	ПроводкаDSSОбъект.ApInvoice = СокрЛП(ПроводкаDSSОбъект.ApInvoice);
	ПроводкаDSSОбъект.ArInvoice = СокрЛП(ПроводкаDSSОбъект.ArInvoice);
	ПроводкаDSSОбъект.PoNumber = СокрЛП(ПроводкаDSSОбъект.PoNumber);
	
КонецПроцедуры

Процедура УстановитьБулевыПоля(ПроводкаDSSОбъект, ДанныеДляЗаполнения)
	
	Если СокрЛП(ДанныеДляЗаполнения.AutoRev) = "Y" Тогда
		ПроводкаDSSОбъект.AutoRevLawson = Истина;
	КонецЕсли;
	
	Если СокрЛП(ДанныеДляЗаполнения.LegalFiscalFlag) = "Y" Тогда
		ПроводкаDSSОбъект.LegalFiscalFlagLawson = Истина;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьТипПроводкиAPAP(TranAmount, Description)
	
	Если TranAmount = 0
		ИЛИ СтрНайти(Description, "Gain/Loss") > 0 Тогда
		
		Возврат Перечисления.ТипыПроводокAPAP.GainLoss;
		
	ИначеЕсли СтрНайти(Description, "Cash Disbursement") > 0 Тогда
		
		Возврат Перечисления.ТипыПроводокAPAP.CashDisbursement;
		
	ИначеЕсли СтрНайти(Description, "Payment Accrual") > 0 Тогда
		
		Возврат Перечисления.ТипыПроводокAPAP.PaymentAccrual;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьВаучерПоDescription(Description)
	
	ПозицияЗвездочки = СтрНайти(Description, "*");
	Если ПозицияЗвездочки = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Ваучер = Прав(Description, СтрДлина(Description) - ПозицияЗвездочки);
	Возврат СокрЛП(Ваучер);
	
КонецФункции

Функция ПреобразоватьВДату(Знач Строчка, Знач ВидДаты)
	
	Если ТипЗнч(Строчка) = Тип("Строка") Тогда
		СтрокаДляОбработки = СокрЛП(Строчка);
		Если СтрДлина(СтрокаДляОбработки) = 7 ИЛИ СтрДлина(СтрокаДляОбработки) = 9 Тогда
			СтрокаДляОбработки = "0" + СтрокаДляОбработки;
		КонецЕсли;
		
		День = Лев(СтрокаДляОбработки, 2);
		Месяц = Сред(СтрокаДляОбработки, 3, 2);
		Год = Прав(СтрокаДляОбработки, 2);
		Если СтрНайти(Месяц, "/") ИЛИ СтрНайти(Месяц, ".") ИЛИ СтрНайти(Месяц, ",") Тогда
			Месяц = Сред(СтрокаДляОбработки, 4, 2);
		КонецЕсли;
		
		Если СтрДлина(СтрокаДляОбработки) = 10 ИЛИ СтрДлина(СтрокаДляОбработки) = 18 Тогда
			Год = Сред(СтрокаДляОбработки, 7, 4);
		Иначе	
			Год = Прав(СтрокаДляОбработки, 2);
			Попытка
				Если Число(Год) > 50 Тогда
					Год = "19" + Год;
				Иначе
					Год = "20" + Год;
				КонецЕсли;
			Исключение
				Возврат Дата(1,1,1);
			КонецПопытки;
		КонецЕсли; 
		
	ИначеЕсли  ТипЗнч(Строчка) = Тип("Дата") Тогда
		Возврат Строчка;
	ИначеЕсли  ТипЗнч(Строчка) = Тип("Число") Тогда 
		День = Цел(Строчка/10000);
		Месяц = Цел((Строчка - День*10000)/100);
		Год = Строчка - День*10000 - Месяц * 100;
		Попытка
			Если Число(Год) > 50 Тогда
				Год = 1900 + Год;
			Иначе
				Год = 2000 + Год;
			КонецЕсли;
		Исключение
			Возврат Дата(1,1,1);
		КонецПопытки;
	Иначе		
		Возврат Дата(1,1,1);
	КонецЕсли;	
	Попытка 
		Возврат Дата(Год, Месяц, День);
	Исключение
		Возврат Дата(1,1,1);
	КонецПопытки;
	
	
КонецФункции

Процедура СформироватьСвязанныеОбъекты(ПроводкаDSSОбъект, КэшИнвойсов, КэшSalesOrders)
	
	Если ПроводкаDSSОбъект.System = "BL" Тогда
		
		Если ПроводкаDSSОбъект.SourceCode = "DM" ИЛИ ПроводкаDSSОбъект.SourceCode = "CM" Тогда
			
			СтрокаИнвойса = КэшИнвойсов.Найти(ПроводкаDSSОбъект.ArInvoice, "ArInvoice");
			
			Если СтрокаИнвойса = Неопределено Тогда
				
				СоздатьИнвойс(ПроводкаDSSОбъект);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьИнвойс(ПроводкаDSSОбъект)
	
	ДокОбъект = Документы.Invoice.СоздатьДокумент();
	ДокОбъект.Номер = ПроводкаDSSОбъект.ArInvoice;
	ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	
	НЗ = РегистрыСведений.DSSСвязанныеДокументы.СоздатьНаборЗаписей();
	НЗ.Отбор.ПроводкаDSS.Установить(ПроводкаDSSОбъект.Ссылка);
	НЗ.Отбор.ТипСвязанногоОбъекта.Установить(Перечисления.ТипыОбъектовСвязанныхСПроводкойDSS.Invoice);
	НоваяЗапись = НЗ.Добавить();
	НоваяЗапись.ПроводкаDSS = ПроводкаDSSОбъект.Ссылка;
	НоваяЗапись.ТипСвязанногоОбъекта = Перечисления.ТипыОбъектовСвязанныхСПроводкойDSS.Invoice;
	НоваяЗапись.СвязанныйОбъект = ДокОбъект.Ссылка;
	НЗ.Записать(Истина);
	
КонецПроцедуры

#КонецЕсли