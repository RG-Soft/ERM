#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ЗагрузитьДанныеИзФайла(СтруктураПараметров, АдресХранилища) Экспорт
	
	ДанныеФайла = СтруктураПараметров.ИсточникДанных.Получить();
	
	АдресФайла = ПоместитьВоВременноеХранилище(ДанныеФайла);
	
	ИмяФайла = ПолучитьИмяВременногоФайла(".txt");
	ДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
	
	ДанныеФайла.Записать(ИмяФайла);
	
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ИмяФайла);
	
	Строки = Текст.ПолучитьТекст();
	
	RegExpTable = Новый COMОбъект("VBScript.RegExp");
	
	RegExpTable.IgnoreCase = Истина; //Игнорировать регистр
	RegExpTable.Global = Истина; //Поиск всех вхождений шаблона
	RegExpTable.MultiLine = Истина; //Многострочный режим
	
	RegExpTable.Pattern = "([(IN|CM)]{0,2}[\d]+)\s+((Invoice-|Credit-)\s*[\d,()\w'&\.,\s]*-*[\d,\w'&\.,\s]+)\s+([^\s]{8})\s+(\d{2}-(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)-\d{4})\s+(\d{2}-(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)-\d{4})\s+(\(?[\d.,]+\)?)\s+(\(?[\d.,]+\)?)\s+((\d{4}).\d{6}.\d{3}.\d{4}.\d{3}.\d{4}.\d{6})\s*\n";
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	ТаблицаДанных.Колонки.Добавить("СтрокаФайла", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15, 0, ДопустимыйЗнак.Неотрицательный)));
	ТаблицаДанных.Колонки.Добавить("DocNumber", Новый ОписаниеТипов("Строка",,,Новый КвалификаторыСтроки(15)));
	ТаблицаДанных.Колонки.Добавить("CustomerNumber", Новый ОписаниеТипов("Строка",,,Новый КвалификаторыСтроки(50)));
	ТаблицаДанных.Колонки.Добавить("CompanyCodeStr", Новый ОписаниеТипов("Строка",,,Новый КвалификаторыСтроки(4)));
	ТаблицаДанных.Колонки.Добавить("InvoiceAmount", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15, 2)));
	ТаблицаДанных.Колонки.Добавить("CreationDate", Новый ОписаниеТипов("Дата"));
	
	СтрокиФайла=RegExpTable.Execute(Строки);
	ЧислоВхожденийТаблиц=СтрокиФайла.Count();
	Если ЧислоВхожденийТаблиц>0 Тогда
		
		Для СчВхожденийТаблиц = 0 По ЧислоВхожденийТаблиц-1 Цикл
			НоваяСтрокаТаблицаДанных = ТаблицаДанных.Добавить();
			СтрокаДанных = СтрокиФайла.Item(СчВхожденийТаблиц);
			
			МассивДанныхВСтроке = СтрокаДанных.SubMatches;
			НоваяСтрокаТаблицаДанных.СтрокаФайла = СчВхожденийТаблиц + 1;
			НоваяСтрокаТаблицаДанных.DocNumber = МассивДанныхВСтроке.Item(0);
			НоваяСтрокаТаблицаДанных.CustomerNumber = МассивДанныхВСтроке.Item(3);
			НоваяСтрокаТаблицаДанных.CompanyCodeStr = Строка(Формат(МассивДанныхВСтроке.Item(11), "ЧРГ=' '; ЧГ=0"));
			НоваяСтрокаТаблицаДанных.InvoiceAmount = СтрЗаменить(СтрЗаменить(СтрЗаменить(МассивДанныхВСтроке.Item(8),",",""),"(","-"),")","");
			НоваяСтрокаТаблицаДанных.CreationDate = ФайловыеФункцииСлужебный.ДатаRFC1123(МассивДанныхВСтроке.Item(4));
				
		КонецЦикла;
	КонецЕсли;
	
	УдалитьИзВременногоХранилища(АдресФайла);
	
	ЗагрузитьИЗаписатьДвижения(СтруктураПараметров.Ссылка, СтруктураПараметров.Дата, ТаблицаДанных);
	
	//ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
	
КонецПроцедуры


Процедура ЗагрузитьИЗаписатьДвижения(Ссылка, ДатаДокумента, ТаблицаДанных)
	
	ТаблицаДанных.Колонки.Добавить("ДокументЗагрузки");
	ТаблицаДанных.ЗаполнитьЗначения(Ссылка, "ДокументЗагрузки");
	
	НЗ = РегистрыСведений.OracleSalesOrdersDetailsSourceData.СоздатьНаборЗаписей();
	НЗ.Отбор.ДокументЗагрузки.Установить(Ссылка);
	НЗ.Загрузить(ТаблицаДанных);
	НЗ.Записать(Истина);
	
КонецПроцедуры

Процедура ОбновитьРеквизитыInvoice(СтруктураПараметров, АдресХранилища) Экспорт
	
	ДанныеДляЗаполнения = Новый Структура();
	ТекстОшибки = "";

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Invoice.Ссылка) КАК КоличестоИнвойсов,
	|	OracleSalesOrdersDetailsSourceData.InvoiceAmount,
	|	OracleSalesOrdersDetailsSourceData.CreationDate,
	|	МАКСИМУМ(Invoice.Ссылка) КАК СсылкаInvoice,
	|	OracleSalesOrdersDetailsSourceData.CustomerNumber КАК CustomerNumber,
	|	OracleSalesOrdersDetailsSourceData.DocNumber + ""."" + OracleSalesOrdersDetailsSourceData.CustomerNumber + ""."" + OracleSalesOrdersDetailsSourceData.CompanyCodeStr КАК НомерInvoice
	|ИЗ
	|	РегистрСведений.OracleSalesOrdersDetailsSourceData КАК OracleSalesOrdersDetailsSourceData
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Invoice КАК Invoice
	|		ПО (OracleSalesOrdersDetailsSourceData.DocNumber + ""."" + OracleSalesOrdersDetailsSourceData.CustomerNumber + ""."" + OracleSalesOrdersDetailsSourceData.CompanyCodeStr = Invoice.DocID)
	|			И (НЕ Invoice.ПометкаУдаления)
	|			И (Invoice.Source = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.OracleSmith))
	|ГДЕ
	|	OracleSalesOrdersDetailsSourceData.ДокументЗагрузки = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	OracleSalesOrdersDetailsSourceData.InvoiceAmount,
	|	OracleSalesOrdersDetailsSourceData.CreationDate,
	|	OracleSalesOrdersDetailsSourceData.CustomerNumber,
	|	Invoice.ClientID,
	|	OracleSalesOrdersDetailsSourceData.DocNumber + ""."" + OracleSalesOrdersDetailsSourceData.CustomerNumber + ""."" + OracleSalesOrdersDetailsSourceData.CompanyCodeStr";
	
	Запрос.УстановитьПараметр("Ссылка", СтруктураПараметров.Ссылка);
	
	НачатьТранзакцию();
	РезультатЗапроса = Запрос.Выполнить();
	ЗафиксироватьТранзакцию();
	
	ВыборкаInvoice = РезультатЗапроса.Выбрать();
	
	ОбновленныеInvoice = Новый ТаблицаЗначений;
	ОбновленныеInvoice.Колонки.Добавить("Invoice", Новый ОписаниеТипов("ДокументСсылка.Invoice"));
	
	НенайденныеInvoice = Новый ТаблицаЗначений;
	НенайденныеInvoice.Колонки.Добавить("InvoiceNumber", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(50)));
	
	ОшибкиИдентификацииИнвойсов = Новый ТаблицаЗначений;
	ОшибкиИдентификацииИнвойсов.Колонки.Добавить("InvoiceNumber", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(50)));
	ОшибкиИдентификацииИнвойсов.Колонки.Добавить("ClientID", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(50)));
	//ОшибкиИдентификацииИнвойсов.Колонки.Добавить("InvoiceDate", Новый ОписаниеТипов("Дата", , , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	
	ПустаяДата = '00010101';
	
	НачатьТранзакцию();
	
	Пока ВыборкаInvoice.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаInvoice.СсылкаInvoice) Тогда
			
			СтрокаТЗ = НенайденныеInvoice.Добавить();
			СтрокаТЗ.InvoiceNumber = ВыборкаInvoice.НомерInvoice;
			
		ИначеЕсли ВыборкаInvoice.КоличестоИнвойсов > 1 Тогда
			
			СтрокаТЗ = ОшибкиИдентификацииИнвойсов.Добавить();
			СтрокаТЗ.InvoiceNumber = ВыборкаInvoice.НомерInvoice;
			СтрокаТЗ.ClientID = ВыборкаInvoice.CustomerNumber;
			
		Иначе
		
			ТекОбъект = ВыборкаInvoice.СсылкаInvoice.ПолучитьОбъект();
			
			РГСофтКлиентСервер.УстановитьЗначение(ТекОбъект.Дата, ВыборкаInvoice.CreationDate);
			РГСофтКлиентСервер.УстановитьЗначение(ТекОбъект.Amount, ВыборкаInvoice.InvoiceAmount);
			
			Если ТекОбъект.Модифицированность() Тогда
				
				Попытка
					ТекОбъект.Записать();
				Исключение
					ОтменитьТранзакцию();
					ДанныеДляЗаполнения.Вставить("ОшибкаЗаполнения", Строка(ТекОбъект) + ": " + ОписаниеОшибки());
					ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
					Возврат;
				КонецПопытки;
				СтрокаТЗ = ОбновленныеInvoice.Добавить();
				СтрокаТЗ.Invoice = ТекОбъект.Ссылка;
				
			КонецЕсли;
			
			// { RGS TAlmazova 23.01.2017 15:00:33 - обновление комментария для СО
			//ОбновитьСтатусСО(ВыборкаSO.СсылкаSalesOrder, ВыборкаSO.ERPStatus, ВыборкаSO.ShipmentDate, ТекстОшибки);
			Если ТекстОшибки <> "" Тогда
				ОтменитьТранзакцию();
				ДанныеДляЗаполнения.Вставить("ОшибкаЗаполнения", ТекстОшибки);
				ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
				Возврат;
			КонецЕсли;
			// } RGS TAlmazova 23.01.2017 15:00:44 - обновление комментария для СО
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	ОбновленныеInvoice.Свернуть("Invoice");
	НенайденныеInvoice.Свернуть("InvoiceNumber");
	ОшибкиИдентификацииИнвойсов.Свернуть("InvoiceNumber,ClientID");
	
	ДанныеДляЗаполнения.Вставить("ОбновленныеInvoice", ОбновленныеInvoice);
	ДанныеДляЗаполнения.Вставить("НенайденныеInvoice", НенайденныеInvoice);
	ДанныеДляЗаполнения.Вставить("ОшибкиИдентификацииИнвойсов", ОшибкиИдентификацииИнвойсов);
	
	ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
	
КонецПроцедуры

#КонецЕсли