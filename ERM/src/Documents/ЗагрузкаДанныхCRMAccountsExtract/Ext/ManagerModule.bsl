#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ЗагрузитьДанныеИзФайла(СтруктураПараметров, АдресХранилища) Экспорт
	
	ДанныеДляЗаполнения = Новый Структура();
	ТаблицаДанных = СтруктураПараметров.ТаблицаДанных;
	ТекстОшибки = "";
	
	ПутьКФайлу = ПолучитьИмяВременногоФайла("xlsx");
	ФайлЭксель = СтруктураПараметров.ИсточникДанных.Получить();
	ФайлЭксель.Записать(ПутьКФайлу);
	
	// { RGS  PMatkov 01.12.2015 16:47:17 - Перенос повторяющегося кода в общий модуль
	rgsЗагрузкаИзExcel.ВыгрузитьЭксельВТаблицуДанных(ПутьКФайлу, ТаблицаДанных, ДанныеДляЗаполнения, АдресХранилища, СтруктураПараметров);
	// } RGS  PMatkov 01.12.2015 16:47:33 - Перенос повторяющегося кода в общий модуль
	
	ЗагрузитьИЗаписатьДвижения(СтруктураПараметров.Ссылка, СтруктураПараметров.Дата, ТаблицаДанных);
	
	ТаблицаНовыеParentClients = ПолучитьТаблицуНовыеParentClients(СтруктураПараметров.Ссылка);
	ТаблицаНовыеSalesКлиенты = ПолучитьТаблицуНовыеSalesКлиенты(СтруктураПараметров.Ссылка);
	ТаблицаНовыеBillingКлиенты = ПолучитьТаблицуНовыеBillingКлиенты(СтруктураПараметров.Ссылка);
	//ТаблицаИзмененныеCRMID = ПолучитьТаблицуИзмененныеCRMID(СтруктураПараметров.Ссылка, СтруктураПараметров.Дата);
	ТаблицаИзмененныеBillingID = ПолучитьТаблицуИзмененныеBillingID(СтруктураПараметров.Ссылка, СтруктураПараметров.Дата);
	ТаблицаИзмененныеParentClients = ПолучитьТаблицуИзмененныеParentClients(СтруктураПараметров.Ссылка, СтруктураПараметров.Дата);
	ТаблицаИзмененныеРеквизиты = ПолучитьТаблицуИзмененныеРеквизиты(СтруктураПараметров.Ссылка);
	
	ДанныеДляЗаполнения.Вставить("ТаблицаНовыеParentClients", ТаблицаНовыеParentClients);
	ДанныеДляЗаполнения.Вставить("ТаблицаНовыеSalesКлиенты", ТаблицаНовыеSalesКлиенты);
	ДанныеДляЗаполнения.Вставить("ТаблицаНовыеBillingКлиенты", ТаблицаНовыеBillingКлиенты);
	//ДанныеДляЗаполнения.Вставить("ТаблицаИзмененныеCRMID", ТаблицаИзмененныеCRMID);
	ДанныеДляЗаполнения.Вставить("ТаблицаИзмененныеBillingID", ТаблицаИзмененныеBillingID);
	ДанныеДляЗаполнения.Вставить("ТаблицаИзмененныеParentClients", ТаблицаИзмененныеParentClients);
	ДанныеДляЗаполнения.Вставить("ТаблицаИзмененныеРеквизиты", ТаблицаИзмененныеРеквизиты);
	
	ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
	
КонецПроцедуры

Процедура ЗагрузитьИЗаписатьДвижения(Ссылка, ДатаДокумента, ТаблицаДанных)
	
	ТаблицаДанных.Колонки.Добавить("ДокументЗагрузки");
	ТаблицаДанных.ЗаполнитьЗначения(Ссылка, "ДокументЗагрузки");
	
	НЗ = РегистрыСведений.CRMAccountsExtractSourceData.СоздатьНаборЗаписей();
	НЗ.Отбор.ДокументЗагрузки.Установить(Ссылка);
	НЗ.Загрузить(ТаблицаДанных);
	НЗ.Записать(Истина);
	
КонецПроцедуры

Функция ПолучитьТаблицуНовыеParentClients(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	CRMAccountsExtractSourceData.CorporateAccountId КАК CorporateAccountId,
		|	CRMAccountsExtractSourceData.CorporateAccount
		|ПОМЕСТИТЬ ВТ_ParentClients
		|ИЗ
		|	РегистрСведений.CRMAccountsExtractSourceData КАК CRMAccountsExtractSourceData
		|ГДЕ
		|	CRMAccountsExtractSourceData.ДокументЗагрузки = &Ссылка
		|	И CRMAccountsExtractSourceData.CorporateAccountId <> """"
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	CorporateAccountId
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_SalesAccounts.CorporateAccountId КАК CRMID,
		|	ВТ_SalesAccounts.CorporateAccount КАК Description
		|ИЗ
		|	ВТ_ParentClients КАК ВТ_SalesAccounts
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО ВТ_SalesAccounts.CorporateAccountId = Контрагенты.CRMID
		|			И (НЕ Контрагенты.ПометкаУдаления)
		|ГДЕ
		|	Контрагенты.Ссылка ЕСТЬ NULL ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаНовыеParentClients = РезультатЗапроса.Выгрузить();
	ТаблицаНовыеParentClients.Колонки.Добавить("Применить", Новый ОписаниеТипов("Булево"));
	// { RGS PMatkov 25.12.2015 17:14:28 - 
	ТаблицаНовыеParentClients.ЗаполнитьЗначения(Истина, "Применить");
	// } RGS PMatkov 25.12.2015 17:14:28 - 
	
	
	Возврат ТаблицаНовыеParentClients;
	
КонецФункции

Функция ПолучитьТаблицуНовыеSalesКлиенты(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRMAccountsExtractSourceData.AccountId КАК CRMID,
		|	CRMAccountsExtractSourceData.Account КАК Description,
		|	CRMAccountsExtractSourceData.CorporateAccountId КАК ParentClientID,
		|	CRMAccountsExtractSourceData.CorporateAccount КАК ParentClientDescription
		|ПОМЕСТИТЬ ВТ_SalesAccounts
		|ИЗ
		|	РегистрСведений.CRMAccountsExtractSourceData КАК CRMAccountsExtractSourceData
		|ГДЕ
		|	CRMAccountsExtractSourceData.ДокументЗагрузки = &Ссылка
		|	И CRMAccountsExtractSourceData.MIIntegrationId = """"
		|	И CRMAccountsExtractSourceData.SMITHIntegrationId = """"
		|	И CRMAccountsExtractSourceData.IntegrationId = """"
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	CRMID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_SalesAccounts.CRMID,
		|	ВТ_SalesAccounts.Description,
		|	ВТ_SalesAccounts.ParentClientDescription,
		|	ВТ_SalesAccounts.ParentClientID
		|ИЗ
		|	ВТ_SalesAccounts КАК ВТ_SalesAccounts
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО ВТ_SalesAccounts.CRMID = Контрагенты.CRMID
		|			И (НЕ Контрагенты.ПометкаУдаления)
		|ГДЕ
		|	Контрагенты.Ссылка ЕСТЬ NULL ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаНовыеSalesКлиенты = РезультатЗапроса.Выгрузить();
	ТаблицаНовыеSalesКлиенты.Колонки.Добавить("Применить", Новый ОписаниеТипов("Булево"));
	// { RGS PMatkov 25.12.2015 17:14:28 - 
	ТаблицаНовыеSalesКлиенты.ЗаполнитьЗначения(Истина, "Применить");
	// } RGS PMatkov 25.12.2015 17:14:28 - 
	
	Возврат ТаблицаНовыеSalesКлиенты;
	
КонецФункции

Функция ПолучитьТаблицуНовыеBillingКлиенты(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRMAccountsExtractSourceData.AccountId КАК CRMID,
		|	CRMAccountsExtractSourceData.Account КАК Description,
		|	CRMAccountsExtractSourceData.CorporateAccount КАК ParentClientDescription,
		|	CRMAccountsExtractSourceData.CorporateAccountId КАК ParentClientID,
		|	CRMAccountsExtractSourceData.MIIntegrationId КАК MIID,
		|	CRMAccountsExtractSourceData.SMITHIntegrationId КАК SMITHID,
		|	CRMAccountsExtractSourceData.LawsonIntegrationId КАК LawsonID
		|ПОМЕСТИТЬ ВТ_BillingAccounts
		|ИЗ
		|	РегистрСведений.CRMAccountsExtractSourceData КАК CRMAccountsExtractSourceData
		|ГДЕ
		|	CRMAccountsExtractSourceData.ДокументЗагрузки = &Ссылка
		|	И (CRMAccountsExtractSourceData.MIIntegrationId <> """"
		|			ИЛИ CRMAccountsExtractSourceData.SMITHIntegrationId <> """"
		|			ИЛИ CRMAccountsExtractSourceData.LawsonIntegrationId <> """")
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	CRMAccountsExtractSourceData.AccountId
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_BillingAccounts.CRMID,
		|	ВТ_BillingAccounts.Description,
		|	ВТ_BillingAccounts.ParentClientDescription,
		|	ВТ_BillingAccounts.ParentClientID,
		|	ВТ_BillingAccounts.MIID,
		|	ВТ_BillingAccounts.SMITHID,
		|	ВТ_BillingAccounts.LawsonID
		|ИЗ
		|	ВТ_BillingAccounts КАК ВТ_BillingAccounts
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО ВТ_BillingAccounts.CRMID = Контрагенты.CRMID
		|			И (НЕ Контрагенты.ПометкаУдаления)
		|ГДЕ
		|	Контрагенты.Ссылка ЕСТЬ NULL ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаНовыеBillingКлиенты = РезультатЗапроса.Выгрузить();
	ТаблицаНовыеBillingКлиенты.Колонки.Добавить("Применить", Новый ОписаниеТипов("Булево"));
	// { RGS PMatkov 25.12.2015 17:14:28 - 
	ТаблицаНовыеBillingКлиенты.ЗаполнитьЗначения(Истина, "Применить");
	// } RGS PMatkov 25.12.2015 17:14:28 - 
	
	Возврат ТаблицаНовыеBillingКлиенты;
	
КонецФункции

Функция ПолучитьТаблицуИзмененныеCRMID(Ссылка, Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRMAccountsExtractSourceData.Id КАК CRMID,
		|	CRMAccountsExtractSourceData.CustomerNumber КАК BillingID,
		|	CRMAccountsExtractSourceData.Account КАК Description
		|ПОМЕСТИТЬ ВТ_BillingAccounts
		|ИЗ
		|	РегистрСведений.CRMAccountsExtractSourceData КАК CRMAccountsExtractSourceData
		|ГДЕ
		|	CRMAccountsExtractSourceData.ДокументЗагрузки = &Ссылка
		|	И CRMAccountsExtractSourceData.CustomerNumber <> """"
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	CRMAccountsExtractSourceData.Id
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихCRM.Период) КАК Период,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихCRM.ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_ПоследниеДатыCRM
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(&Период, ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.CRM)) КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихCRM
		|
		|СГРУППИРОВАТЬ ПО
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихCRM.ОбъектПриемника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихLawson.Период) КАК Период,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихLawson.ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_ПоследниеДатыLawson
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(&Период, ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.Lawson)) КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихLawson
		|
		|СГРУППИРОВАТЬ ПО
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихLawson.ОбъектПриемника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Идентификатор,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника КАК ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_ИдентификаторыCRM
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемами
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоследниеДатыCRM КАК ВТ_ПоследниеДатыCRM
		|		ПО (НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.CRM))
		|			И НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Период = ВТ_ПоследниеДатыCRM.Период
		|			И НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника = ВТ_ПоследниеДатыCRM.ОбъектПриемника
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектПриемника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Идентификатор,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника КАК ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_ИдентификаторыLawson
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемами
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоследниеДатыLawson КАК ВТ_ПоследниеДатыLawson
		|		ПО НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Период = ВТ_ПоследниеДатыLawson.Период
		|			И НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника = ВТ_ПоследниеДатыLawson.ОбъектПриемника
		|			И (НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.Lawson))
		// { RGS PMatkov 25.12.2015 17:41:53 - 
		|ГДЕ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Client)
		 // } RGS PMatkov 25.12.2015 17:41:54 - 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектПриемника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_ИдентификаторыCRM.ОбъектПриемника, ВТ_ИдентификаторыLawson.ОбъектПриемника) КАК ОбъектПриемника,
		|	ЕСТЬNULL(ВТ_ИдентификаторыCRM.Идентификатор, """") КАК CRMID,
		|	ЕСТЬNULL(ВТ_ИдентификаторыLawson.Идентификатор, """") КАК BillingID
		|ПОМЕСТИТЬ ВТ_ActualMapping
		|ИЗ
		|	ВТ_ИдентификаторыCRM КАК ВТ_ИдентификаторыCRM
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ИдентификаторыLawson КАК ВТ_ИдентификаторыLawson
		|		ПО ВТ_ИдентификаторыCRM.ОбъектПриемника = ВТ_ИдентификаторыLawson.ОбъектПриемника
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	BillingID
		|;
		// { RGS PMatkov 25.12.2015 18:41:55 - 
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтрокиRevenue.Client
		|ПОМЕСТИТЬ ВТ_ДанныеПоКлиентам
		|ИЗ
		|	Справочник.СтрокиRevenue КАК СтрокиRevenue
		|;
		|
		// } RGS PMatkov 25.12.2015 18:41:55 - 
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ActualMapping.CRMID КАК OldCRMID,
		|	ВТ_BillingAccounts.CRMID КАК NewCRMID,
		|	ВТ_BillingAccounts.BillingID,
		|	ВТ_BillingAccounts.Description,
		|	ВТ_ActualMapping.ОбъектПриемника КАК Client
		|ИЗ
		|	ВТ_BillingAccounts КАК ВТ_BillingAccounts
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ActualMapping КАК ВТ_ActualMapping
		|		ПО ВТ_BillingAccounts.BillingID = ВТ_ActualMapping.BillingID
		// { RGS PMatkov 25.12.2015 18:40:44 - 
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеПоКлиентам КАК ВТ_ДанныеПоКлиентам
		|		ПО (ВТ_ActualMapping.ОбъектПриемника = ВТ_ДанныеПоКлиентам.Client)
		// } RGS PMatkov 25.12.2015 18:40:44 - 
		|ГДЕ
		|	ВТ_BillingAccounts.CRMID <> ВТ_ActualMapping.CRMID
		|	И ВТ_ActualMapping.CRMID <> """"";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаИзмененныеCRMID = РезультатЗапроса.Выгрузить();
	ТаблицаИзмененныеCRMID.Колонки.Добавить("Применить", Новый ОписаниеТипов("Булево"));
	
	Возврат ТаблицаИзмененныеCRMID;
	
КонецФункции

Функция ПолучитьТаблицуИзмененныеBillingID(Ссылка, Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRMAccountsExtractSourceData.AccountId КАК CRMID,
		|	CRMAccountsExtractSourceData.LawsonIntegrationId КАК LawsonID,
		|	CRMAccountsExtractSourceData.MIIntegrationId КАК MIID,
		|	CRMAccountsExtractSourceData.SMITHIntegrationId КАК SMITHID,
		|	CRMAccountsExtractSourceData.Account КАК Description
		|ПОМЕСТИТЬ ВТ_BillingAccounts
		|ИЗ
		|	РегистрСведений.CRMAccountsExtractSourceData КАК CRMAccountsExtractSourceData
		|ГДЕ
		|	CRMAccountsExtractSourceData.ДокументЗагрузки = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	CRMAccountsExtractSourceData.AccountId
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_BillingAccounts.CRMID КАК Идентификатор,
		|	Контрагенты.Ссылка КАК ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_ИдентификаторыCRM
		|ИЗ
		|	ВТ_BillingAccounts КАК ВТ_BillingAccounts
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО ВТ_BillingAccounts.CRMID = Контрагенты.CRMID
		|			И (НЕ Контрагенты.ПометкаУдаления)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектПриемника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихLawson.Период) КАК Период,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихLawson.ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_ПоследниеДатыLawson
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|			&Период,
		|			ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.Lawson)
		|				И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Client)) КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихLawson
		|
		|СГРУППИРОВАТЬ ПО
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихLawson.ОбъектПриемника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Идентификатор,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника КАК ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_ИдентификаторыLawson
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемами
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоследниеДатыLawson КАК ВТ_ПоследниеДатыLawson
		|		ПО НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Период = ВТ_ПоследниеДатыLawson.Период
		|			И НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника = ВТ_ПоследниеДатыLawson.ОбъектПриемника
		|			И (НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.Lawson))
		|			И (НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Client))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектПриемника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихMI.Период) КАК Период,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихMI.ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_ПоследниеДатыMI
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|			&Период,
		|			ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.OracleMI)
		|				И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Client)) КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихMI
		|
		|СГРУППИРОВАТЬ ПО
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихMI.ОбъектПриемника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Идентификатор,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника КАК ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_ИдентификаторыMI
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемами
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоследниеДатыMI КАК ВТ_ПоследниеДатыMI
		|		ПО НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Период = ВТ_ПоследниеДатыMI.Период
		|			И НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника = ВТ_ПоследниеДатыMI.ОбъектПриемника
		|			И (НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.OracleMI))
		|			И (НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Client))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектПриемника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихSMITH.Период) КАК Период,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихSMITH.ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_ПоследниеДатыSMITH
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|			&Период,
		|			ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.OracleSmith)
		|				И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Client)) КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихSMITH
		|
		|СГРУППИРОВАТЬ ПО
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследнихSMITH.ОбъектПриемника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Идентификатор,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника КАК ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_ИдентификаторыSmith
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемами
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоследниеДатыSMITH КАК ВТ_ПоследниеДатыSMITH
		|		ПО НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Период = ВТ_ПоследниеДатыSMITH.Период
		|			И НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника = ВТ_ПоследниеДатыSMITH.ОбъектПриемника
		|			И (НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.OracleSmith))
		|			И (НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Client))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектПриемника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_BillingAccounts.CRMID,
		|	ВТ_ИдентификаторыLawson.Идентификатор КАК OldLawsonID,
		|	ВТ_BillingAccounts.LawsonID КАК NewLawsonID,
		|	ВТ_ИдентификаторыMI.Идентификатор КАК OldMIID,
		|	ВТ_BillingAccounts.MIID КАК NewMIID,
		|	ВТ_ИдентификаторыSmith.Идентификатор КАК OldSmithID,
		|	ВТ_BillingAccounts.SMITHID КАК NewSmithID,
		|	ВТ_BillingAccounts.Description,
		|	ВТ_ИдентификаторыCRM.ОбъектПриемника КАК Client
		|ИЗ
		|	ВТ_BillingAccounts КАК ВТ_BillingAccounts
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИдентификаторыCRM КАК ВТ_ИдентификаторыCRM
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИдентификаторыLawson КАК ВТ_ИдентификаторыLawson
		|			ПО ВТ_ИдентификаторыCRM.ОбъектПриемника = ВТ_ИдентификаторыLawson.ОбъектПриемника
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИдентификаторыMI КАК ВТ_ИдентификаторыMI
		|			ПО ВТ_ИдентификаторыCRM.ОбъектПриемника = ВТ_ИдентификаторыMI.ОбъектПриемника
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИдентификаторыSmith КАК ВТ_ИдентификаторыSmith
		|			ПО ВТ_ИдентификаторыCRM.ОбъектПриемника = ВТ_ИдентификаторыSmith.ОбъектПриемника
		|		ПО ВТ_BillingAccounts.CRMID = ВТ_ИдентификаторыCRM.Идентификатор
		|ГДЕ
		|	(ЕСТЬNULL(ВТ_ИдентификаторыLawson.Идентификатор, """") <> ВТ_BillingAccounts.LawsonID
		|			ИЛИ ЕСТЬNULL(ВТ_ИдентификаторыMI.Идентификатор, """") <> ВТ_BillingAccounts.MIID
		|			ИЛИ ЕСТЬNULL(ВТ_ИдентификаторыSmith.Идентификатор, """") <> ВТ_BillingAccounts.SMITHID)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаИзмененныеBillingID = РезультатЗапроса.Выгрузить();
	ТаблицаИзмененныеBillingID.Колонки.Добавить("Применить", Новый ОписаниеТипов("Булево"));
	
	Возврат ТаблицаИзмененныеBillingID;
	
КонецФункции

Функция ПолучитьТаблицуИзмененныеParentClients(Ссылка, Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRMAccountsExtractSourceData.AccountId КАК CRMID,
		|	CRMAccountsExtractSourceData.Account КАК Description,
		|	CRMAccountsExtractSourceData.CorporateAccount КАК ParentClientDescription,
		|	CRMAccountsExtractSourceData.CorporateAccountId КАК ParentClientID,
		|	Контрагенты.Ссылка КАК Client,
		|	ЕСТЬNULL(Контрагенты1.Ссылка, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК NewParentClient
		|ПОМЕСТИТЬ ВТ_SalesAccounts
		|ИЗ
		|	РегистрСведений.CRMAccountsExtractSourceData КАК CRMAccountsExtractSourceData
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО CRMAccountsExtractSourceData.AccountId = Контрагенты.CRMID
		|			И (НЕ Контрагенты.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты1
		|		ПО CRMAccountsExtractSourceData.AccountId = Контрагенты1.CRMID
		|			И (НЕ Контрагенты1.ПометкаУдаления)
		|ГДЕ
		|	CRMAccountsExtractSourceData.ДокументЗагрузки = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	CRMAccountsExtractSourceData.AccountId
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_SalesAccounts.CRMID,
		|	ВТ_SalesAccounts.Description,
		|	ВТ_SalesAccounts.Client,
		|	ИерархияКонтрагентовСрезПоследних.ГоловнойКонтрагент КАК OldParentClient,
		|	ВТ_SalesAccounts.NewParentClient,
		|	ВТ_SalesAccounts.ParentClientDescription КАК NewParentClientDescription,
		|	ВТ_SalesAccounts.ParentClientID КАК NewParentClientID
		|ИЗ
		|	ВТ_SalesAccounts КАК ВТ_SalesAccounts
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИерархияКонтрагентов.СрезПоследних(
		|				&Период,
		|				Контрагент В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_SalesAccounts.Client
		|					ИЗ
		|						ВТ_SalesAccounts КАК ВТ_SalesAccounts)) КАК ИерархияКонтрагентовСрезПоследних
		|		ПО ВТ_SalesAccounts.Client = ИерархияКонтрагентовСрезПоследних.Контрагент
		|ГДЕ
		|	ЕСТЬNULL(ИерархияКонтрагентовСрезПоследних.ГоловнойКонтрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) <> ВТ_SalesAccounts.NewParentClient";

	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаИзмененныеParentClients = РезультатЗапроса.Выгрузить();
	ТаблицаИзмененныеParentClients.Колонки.Добавить("Применить", Новый ОписаниеТипов("Булево"));
	
	Возврат ТаблицаИзмененныеParentClients;
	
КонецФункции

Функция ПолучитьТаблицуИзмененныеРеквизиты(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRMAccountsExtractSourceData.AccountId КАК CRMID,
		|	CRMAccountsExtractSourceData.Account КАК NewDescription,
		|	Контрагенты.Ссылка КАК Client,
		|	ВЫБОР
		|		КОГДА CRMAccountsExtractSourceData.CreditRating = ""Banned""
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.CreditRating.Banned)
		|		КОГДА CRMAccountsExtractSourceData.CreditRating = ""Conditional""
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.CreditRating.Conditional)
		|		КОГДА CRMAccountsExtractSourceData.CreditRating = ""Limited""
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.CreditRating.Limited)
		|		КОГДА CRMAccountsExtractSourceData.CreditRating = ""Unlimited""
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.CreditRating.Unlimited)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.CreditRating.ПустаяСсылка)
		|	КОНЕЦ КАК NewCreditRating,
		|	Контрагенты.CreditRating КАК OldCreditRating,
		|	Контрагенты.Наименование КАК OldDescription
		|ИЗ
		|	РегистрСведений.CRMAccountsExtractSourceData КАК CRMAccountsExtractSourceData
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО CRMAccountsExtractSourceData.AccountId = Контрагенты.CRMID
		|			И (НЕ Контрагенты.ПометкаУдаления)
		|ГДЕ
		|	CRMAccountsExtractSourceData.ДокументЗагрузки = &Ссылка
		|	И (CRMAccountsExtractSourceData.Account <> Контрагенты.Наименование
		|			ИЛИ ВЫБОР
		|				КОГДА CRMAccountsExtractSourceData.CreditRating = ""Banned""
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.CreditRating.Banned)
		|				КОГДА CRMAccountsExtractSourceData.CreditRating = ""Conditional""
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.CreditRating.Conditional)
		|				КОГДА CRMAccountsExtractSourceData.CreditRating = ""Limited""
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.CreditRating.Limited)
		|				КОГДА CRMAccountsExtractSourceData.CreditRating = ""Unlimited""
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.CreditRating.Unlimited)
		|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.CreditRating.ПустаяСсылка)
		|			КОНЕЦ <> Контрагенты.CreditRating)";

	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаИзмененныеРеквизиты = РезультатЗапроса.Выгрузить();
	ТаблицаИзмененныеРеквизиты.Колонки.Добавить("Применить", Новый ОписаниеТипов("Булево"));
	ТаблицаИзмененныеРеквизиты.ЗаполнитьЗначения(Истина, "Применить");
	
	Возврат ТаблицаИзмененныеРеквизиты;
	
КонецФункции

#КонецЕсли