
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СоздатьНовыйОбъекты(Отказ);
	ОбработатьИзмененныеОбъекты(Отказ);
	
КонецПроцедуры

Процедура СоздатьНовыйОбъекты(Отказ)
	
	//НЗ_ParentClients = РегистрыСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СоздатьНаборЗаписей();
	//НЗ_ParentClients.Отбор.ТипСоответствия.Установить(Перечисления.ТипыСоответствий.ParentClients);
	//НЗ_ParentClients.Отбор.ТипОбъектаВнешнейСистемы.Установить(Перечисления.ТипыОбъектовВнешнихСистем.Client);
	
	//НЗ_SalesClients = РегистрыСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СоздатьНаборЗаписей();
	//НЗ_SalesClients.Отбор.ТипСоответствия.Установить(Перечисления.ТипыСоответствий.CRM);
	//НЗ_SalesClients.Отбор.ТипОбъектаВнешнейСистемы.Установить(Перечисления.ТипыОбъектовВнешнихСистем.Client);
	
	НЗ_LawsonClients = РегистрыСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СоздатьНаборЗаписей();
	НЗ_LawsonClients.Отбор.ТипСоответствия.Установить(Перечисления.ТипыСоответствий.Lawson);
	НЗ_LawsonClients.Отбор.ТипОбъектаВнешнейСистемы.Установить(Перечисления.ТипыОбъектовВнешнихСистем.Client);
	
	НЗ_MIClients = РегистрыСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СоздатьНаборЗаписей();
	НЗ_MIClients.Отбор.ТипСоответствия.Установить(Перечисления.ТипыСоответствий.OracleMI);
	НЗ_MIClients.Отбор.ТипОбъектаВнешнейСистемы.Установить(Перечисления.ТипыОбъектовВнешнихСистем.Client);
	
	НЗ_SmithClients = РегистрыСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СоздатьНаборЗаписей();
	НЗ_SmithClients.Отбор.ТипСоответствия.Установить(Перечисления.ТипыСоответствий.OracleSmith);
	НЗ_SmithClients.Отбор.ТипОбъектаВнешнейСистемы.Установить(Перечисления.ТипыОбъектовВнешнихСистем.Client);
	
	НЗ_ИерархияКонтрагентов = РегистрыСведений.ИерархияКонтрагентов.СоздатьНаборЗаписей();
	НЗ_ИерархияКонтрагентов.Отбор.Период.Установить(Дата);
	
	// новые parent clients
	СозданныеParentClients = Новый Соответствие;
	Для каждого ТекСтрокаТЧ Из НовыеParentClients Цикл
		
		Если Не ТекСтрокаТЧ.Применить Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйКонтагент = Справочники.Контрагенты.СоздатьЭлемент();
		НовыйКонтагент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		НовыйКонтагент.Наименование = ТекСтрокаТЧ.Description;
		НовыйКонтагент.CRMID = ТекСтрокаТЧ.CRMID;
		НовыйКонтагент.СостояниеАктивности = Перечисления.СостоянияАктивностиКонтрагентов.ОжидаетАктивации;
		НовыйКонтагент.Записать();
		
		СозданныеParentClients.Вставить(ТекСтрокаТЧ.CRMID, НовыйКонтагент.Ссылка);
		
	КонецЦикла;
	
	// новые Sales клиенты
	ГоловныеКонтрагенты = ПолучитьГоловныхКонтрагентов(Дата, НовыеSalesКлиенты.ВыгрузитьКолонку("ParentClientID"));
	
	Для каждого ТекСтрокаТЧ Из НовыеSalesКлиенты Цикл
		
		Если Не ТекСтрокаТЧ.Применить Тогда
			Продолжить;
		КонецЕсли;
		
		Если СозданныеParentClients[ТекСтрокаТЧ.CRMID] = Неопределено Тогда
			НовыйКонтагент = Справочники.Контрагенты.СоздатьЭлемент();
			НовыйКонтагент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
			НовыйКонтагент.Наименование = ТекСтрокаТЧ.Description;
			НовыйКонтагент.CRMID = ТекСтрокаТЧ.CRMID;
			НовыйКонтагент.СостояниеАктивности = Перечисления.СостоянияАктивностиКонтрагентов.ОжидаетАктивации;
			НовыйКонтагент.Записать();
		Иначе
			НовыйКонтагент = СозданныеParentClients[ТекСтрокаТЧ.CRMID];
		КонецЕсли;
		
		//НЗ_SalesClients.Отбор.Идентификатор.Установить(ТекСтрокаТЧ.CRMID);
		//НЗ_SalesClients.Очистить();
		//НоваяЗапись = НЗ_SalesClients.Добавить();
		//НоваяЗапись.Период = Дата;
		//НоваяЗапись.ТипСоответствия = Перечисления.ТипыСоответствий.CRM;
		//НоваяЗапись.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Client;
		//НоваяЗапись.Идентификатор = ТекСтрокаТЧ.CRMID;
		//НоваяЗапись.ОбъектПриемника = НовыйКонтагент.Ссылка;
		//НЗ_SalesClients.Записать();
		
		НЗ_ИерархияКонтрагентов.Отбор.Контрагент.Установить(НовыйКонтагент.Ссылка);
		НЗ_ИерархияКонтрагентов.Очистить();
		НоваяЗапись = НЗ_ИерархияКонтрагентов.Добавить();
		НоваяЗапись.Период = Дата;
		НоваяЗапись.Контрагент = НовыйКонтагент.Ссылка;
		ГоловнойКонтрагент = ГоловныеКонтрагенты[ТекСтрокаТЧ.ParentClientID];
		Если ГоловнойКонтрагент = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Failed to find parent client by ID '" + ТекСтрокаТЧ.ParentClientID + "'",,,,Отказ);
		КонецЕсли;
		НоваяЗапись.ГоловнойКонтрагент = ГоловнойКонтрагент;
		НЗ_ИерархияКонтрагентов.Записать();
		
	КонецЦикла;
	
	// новые Billing клиенты
	ГоловныеКонтрагенты = ПолучитьГоловныхКонтрагентов(Дата, НовыеBillingКлиенты.ВыгрузитьКолонку("ParentClientID"));
	
	Для каждого ТекСтрокаТЧ Из НовыеBillingКлиенты Цикл
		
		Если Не ТекСтрокаТЧ.Применить Тогда
			Продолжить;
		КонецЕсли;
		
		Если СозданныеParentClients[ТекСтрокаТЧ.CRMID] = Неопределено Тогда
			НовыйКонтагент = Справочники.Контрагенты.СоздатьЭлемент();
			НовыйКонтагент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
			НовыйКонтагент.Наименование = ТекСтрокаТЧ.Description;
			НовыйКонтагент.CRMID = ТекСтрокаТЧ.CRMID;
			НовыйКонтагент.СостояниеАктивности = Перечисления.СостоянияАктивностиКонтрагентов.ОжидаетАктивации;
			НовыйКонтагент.Записать();
		Иначе
			НовыйКонтагент = СозданныеParentClients[ТекСтрокаТЧ.CRMID];
		КонецЕсли;
		
		//НЗ_SalesClients.Отбор.Идентификатор.Установить(ТекСтрокаТЧ.CRMID);
		//НЗ_SalesClients.Очистить();
		//НоваяЗапись = НЗ_SalesClients.Добавить();
		//НоваяЗапись.Период = Дата;
		//НоваяЗапись.ТипСоответствия = Перечисления.ТипыСоответствий.CRM;
		//НоваяЗапись.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Client;
		//НоваяЗапись.Идентификатор = ТекСтрокаТЧ.CRMID;
		//НоваяЗапись.ОбъектПриемника = НовыйКонтагент.Ссылка;
		//НЗ_SalesClients.Записать();
		
		// Lawson
		Если Не ПустаяСтрока(ТекСтрокаТЧ.LawsonID) Тогда
			НЗ_LawsonClients.Отбор.Идентификатор.Установить(ТекСтрокаТЧ.LawsonID);
			НЗ_LawsonClients.Очистить();
			НоваяЗапись = НЗ_LawsonClients.Добавить();
			НоваяЗапись.Период = Дата;
			НоваяЗапись.ТипСоответствия = Перечисления.ТипыСоответствий.Lawson;
			НоваяЗапись.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Client;
			НоваяЗапись.Идентификатор = ТекСтрокаТЧ.LawsonID;
			НоваяЗапись.ОбъектПриемника = НовыйКонтагент.Ссылка;
			НЗ_LawsonClients.Записать();
		КонецЕсли;
		
		Если Не ПустаяСтрока(ТекСтрокаТЧ.MIID) Тогда
			НЗ_MIClients.Отбор.Идентификатор.Установить(ТекСтрокаТЧ.MIID);
			НЗ_MIClients.Очистить();
			НоваяЗапись = НЗ_MIClients.Добавить();
			НоваяЗапись.Период = Дата;
			НоваяЗапись.ТипСоответствия = Перечисления.ТипыСоответствий.OracleMI;
			НоваяЗапись.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Client;
			НоваяЗапись.Идентификатор = ТекСтрокаТЧ.MIID;
			НоваяЗапись.ОбъектПриемника = НовыйКонтагент.Ссылка;
			НЗ_MIClients.Записать();
		КонецЕсли;
		
		Если Не ПустаяСтрока(ТекСтрокаТЧ.SMITHID) Тогда
			НЗ_SmithClients.Отбор.Идентификатор.Установить(ТекСтрокаТЧ.SMITHID);
			НЗ_SmithClients.Очистить();
			НоваяЗапись = НЗ_SmithClients.Добавить();
			НоваяЗапись.Период = Дата;
			НоваяЗапись.ТипСоответствия = Перечисления.ТипыСоответствий.OracleSmith;
			НоваяЗапись.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Client;
			НоваяЗапись.Идентификатор = ТекСтрокаТЧ.SMITHID;
			НоваяЗапись.ОбъектПриемника = НовыйКонтагент.Ссылка;
			НЗ_SmithClients.Записать();
		КонецЕсли;
		
		НЗ_ИерархияКонтрагентов.Отбор.Контрагент.Установить(НовыйКонтагент.Ссылка);
		НЗ_ИерархияКонтрагентов.Очистить();
		НоваяЗапись = НЗ_ИерархияКонтрагентов.Добавить();
		НоваяЗапись.Период = Дата;
		НоваяЗапись.Контрагент = НовыйКонтагент.Ссылка;
		ГоловнойКонтрагент = ГоловныеКонтрагенты[ТекСтрокаТЧ.ParentClientID];
		Если ГоловнойКонтрагент = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Failed to find parent client by ID '" + ТекСтрокаТЧ.ParentClientID + "'",,,,Отказ);
		КонецЕсли;
		НоваяЗапись.ГоловнойКонтрагент = ГоловнойКонтрагент;
		НЗ_ИерархияКонтрагентов.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьИзмененныеОбъекты(Отказ)
	
	//НЗ_SalesClients = РегистрыСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СоздатьНаборЗаписей();
	//НЗ_SalesClients.Отбор.ТипСоответствия.Установить(Перечисления.ТипыСоответствий.CRM);
	//НЗ_SalesClients.Отбор.ТипОбъектаВнешнейСистемы.Установить(Перечисления.ТипыОбъектовВнешнихСистем.Client);
	
	НЗ_LawsonClients = РегистрыСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СоздатьНаборЗаписей();
	НЗ_LawsonClients.Отбор.ТипСоответствия.Установить(Перечисления.ТипыСоответствий.Lawson);
	НЗ_LawsonClients.Отбор.ТипОбъектаВнешнейСистемы.Установить(Перечисления.ТипыОбъектовВнешнихСистем.Client);
	
	НЗ_MIClients = РегистрыСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СоздатьНаборЗаписей();
	НЗ_MIClients.Отбор.ТипСоответствия.Установить(Перечисления.ТипыСоответствий.OracleMI);
	НЗ_MIClients.Отбор.ТипОбъектаВнешнейСистемы.Установить(Перечисления.ТипыОбъектовВнешнихСистем.Client);
	
	НЗ_SmithClients = РегистрыСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СоздатьНаборЗаписей();
	НЗ_SmithClients.Отбор.ТипСоответствия.Установить(Перечисления.ТипыСоответствий.OracleSmith);
	НЗ_SmithClients.Отбор.ТипОбъектаВнешнейСистемы.Установить(Перечисления.ТипыОбъектовВнешнихСистем.Client);
	
	НЗ_ИерархияКонтрагентов = РегистрыСведений.ИерархияКонтрагентов.СоздатьНаборЗаписей();
	НЗ_ИерархияКонтрагентов.Отбор.Период.Установить(Дата);
	
	//Для каждого ТекСтрокаТЧ Из ИзмененныеCRMID Цикл
	//	
	//	Если Не ТекСтрокаТЧ.Применить Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	НЗ_SalesClients.Отбор.Идентификатор.Установить(ТекСтрокаТЧ.NewCRMID);
	//	НЗ_SalesClients.Очистить();
	//	НоваяЗапись = НЗ_SalesClients.Добавить();
	//	НоваяЗапись.Период = Дата;
	//	НоваяЗапись.ТипСоответствия = Перечисления.ТипыСоответствий.CRM;
	//	НоваяЗапись.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Client;
	//	НоваяЗапись.Идентификатор = ТекСтрокаТЧ.NewCRMID;
	//	НоваяЗапись.ОбъектПриемника = ТекСтрокаТЧ.Client;
	//	НЗ_SalesClients.Записать();
	//	
	//КонецЦикла;
	
	Для каждого ТекСтрокаТЧ Из ИзмененныеBillingID Цикл
		
		Если Не ТекСтрокаТЧ.Применить Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекСтрокаТЧ.NewLawsonID <> ТекСтрокаТЧ.OldLawsonID Тогда
			НЗ_LawsonClients.Отбор.Идентификатор.Установить(ТекСтрокаТЧ.NewLawsonID);
			НЗ_LawsonClients.Очистить();
			НоваяЗапись = НЗ_LawsonClients.Добавить();
			НоваяЗапись.Период = Дата;
			НоваяЗапись.ТипСоответствия = Перечисления.ТипыСоответствий.Lawson;
			НоваяЗапись.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Client;
			НоваяЗапись.Идентификатор = ТекСтрокаТЧ.NewLawsonID;
			НоваяЗапись.ОбъектПриемника = ТекСтрокаТЧ.Client;
			НЗ_LawsonClients.Записать();
		КонецЕсли;
		
		Если ТекСтрокаТЧ.NewMIID <> ТекСтрокаТЧ.OldMIID Тогда
			НЗ_MIClients.Отбор.Идентификатор.Установить(ТекСтрокаТЧ.NewMIID);
			НЗ_MIClients.Очистить();
			НоваяЗапись = НЗ_MIClients.Добавить();
			НоваяЗапись.Период = Дата;
			НоваяЗапись.ТипСоответствия = Перечисления.ТипыСоответствий.OracleMI;
			НоваяЗапись.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Client;
			НоваяЗапись.Идентификатор = ТекСтрокаТЧ.NewMIID;
			НоваяЗапись.ОбъектПриемника = ТекСтрокаТЧ.Client;
			НЗ_MIClients.Записать();
		КонецЕсли;
		
		Если ТекСтрокаТЧ.NewSmithID <> ТекСтрокаТЧ.OldSmithID Тогда
			НЗ_SmithClients.Отбор.Идентификатор.Установить(ТекСтрокаТЧ.NewSmithID);
			НЗ_SmithClients.Очистить();
			НоваяЗапись = НЗ_SmithClients.Добавить();
			НоваяЗапись.Период = Дата;
			НоваяЗапись.ТипСоответствия = Перечисления.ТипыСоответствий.OracleSmith;
			НоваяЗапись.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Client;
			НоваяЗапись.Идентификатор = ТекСтрокаТЧ.NewSmithID;
			НоваяЗапись.ОбъектПриемника = ТекСтрокаТЧ.Client;
			НЗ_SmithClients.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
	// для пустых новых головных контрагентов попробуем найти их по идентификаторам
	НайденныеСтроки = ИзмененныеParentClients.НайтиСтроки(Новый Структура("Применить, NewParentClient", Истина, Справочники.Контрагенты.ПустаяСсылка()));
	МассивИдентификаторов = Новый Массив;
	Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		МассивИдентификаторов.Добавить(НайденнаяСтрока.NewParentClientID);
	КонецЦикла;
	ГоловныеКонтрагенты = ПолучитьГоловныхКонтрагентов(Дата, МассивИдентификаторов);
	
	Для каждого ТекСтрокаТЧ Из ИзмененныеParentClients Цикл
		
		Если Не ТекСтрокаТЧ.Применить Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекСтрокаТЧ.NewParentClient.Пустая() Тогда
			// попытаемся найти по идентификатору
			NewParentClient = ГоловныеКонтрагенты[ТекСтрокаТЧ.NewParentClientID];
		Иначе
			NewParentClient = ТекСтрокаТЧ.NewParentClient;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(NewParentClient) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Failed to find new parent client for '" + ТекСтрокаТЧ.Client + "'",,,, Отказ);
		КонецЕсли;
		
		НЗ_ИерархияКонтрагентов.Отбор.Контрагент.Установить(ТекСтрокаТЧ.Client);
		НЗ_ИерархияКонтрагентов.Очистить();
		НоваяЗапись = НЗ_ИерархияКонтрагентов.Добавить();
		НоваяЗапись.Период = Дата;
		НоваяЗапись.Контрагент = ТекСтрокаТЧ.Client;
		НоваяЗапись.ГоловнойКонтрагент = NewParentClient;
		НЗ_ИерархияКонтрагентов.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьГоловныхКонтрагентов(Период, МассивИдентификаторов)
	
	Результат = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК ОбъектПриемника,
		|	Контрагенты.CRMID КАК Идентификатор
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	НЕ Контрагенты.ПометкаУдаления
		|	И Контрагенты.CRMID В(&МассивИдентификаторов)";
	
	Запрос.УстановитьПараметр("МассивИдентификаторов", МассивИдентификаторов);
	Запрос.УстановитьПараметр("Период", Период);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Результат.Вставить(Выборка.Идентификатор, Выборка.ОбъектПриемника);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Проведен Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Failed to save posted document");
	КонецЕсли;
	
КонецПроцедуры
