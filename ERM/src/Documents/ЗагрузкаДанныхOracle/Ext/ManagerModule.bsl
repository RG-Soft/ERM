#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ЗагрузитьДанныеИзФайла(СтруктураПараметров, АдресХранилища) Экспорт
	
	ДанныеДляЗаполнения = Новый Структура();
	СтруктураКолонок = СтруктураПараметров.СтруктураКолонок;
	ТаблицаДанных = ИнициализироватьТаблицуДанных(СтруктураКолонок);
	ТекстОшибки = "";
	
	ПутьКФайлу = ПолучитьИмяВременногоФайла("xlsx");
	ФайлЭксель = СтруктураПараметров.ИсточникДанных.Получить();
	ФайлЭксель.Записать(ПутьКФайлу);
	
	rgsЗагрузкаИзExcel.ВыгрузитьЭксельВТаблицуДанныхПоИменамКолонок(ПутьКФайлу, ТаблицаДанных, ДанныеДляЗаполнения, АдресХранилища, СтруктураПараметров);
	
	ЗагрузитьИЗаписатьДвижения(СтруктураПараметров.Ссылка, СтруктураПараметров.Дата, ТаблицаДанных);
	
	ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
	
КонецПроцедуры

Функция ИнициализироватьТаблицуДанных(СтруктураКолонок)
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	
	Для каждого ТекСтрокаСтруктурыКолонок Из СтруктураКолонок Цикл
		ТаблицаДанных.Колонки.Добавить(ТекСтрокаСтруктурыКолонок.ИмяПоля);
	КонецЦикла;
	
	ТаблицаДанных.Колонки.Добавить("СтрокаФайла", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15, 0, ДопустимыйЗнак.Неотрицательный)));
	
	Возврат ТаблицаДанных;
	
КонецФункции

Процедура ЗагрузитьИЗаписатьДвижения(Ссылка, ДатаДокумента, ТаблицаДанных)
	
	ТаблицаДанных.Колонки.Добавить("ДокументЗагрузки");
	ТаблицаДанных.ЗаполнитьЗначения(Ссылка, "ДокументЗагрузки");
	
	НЗ = РегистрыСведений.OracleSourceData.СоздатьНаборЗаписей();
	НЗ.Отбор.ДокументЗагрузки.Установить(Ссылка);
	НЗ.Загрузить(ТаблицаДанных);
	НЗ.Записать(Истина);
	
КонецПроцедуры

Процедура ВыполнитьПроверкуНастроекСинхронизации(СтруктураПараметров, АдресХранилища) Экспорт
	
	ДанныеДляЗаполнения = Новый Структура();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	OracleSourceData.SOURCE_SYSTEM,
		|	OracleSourceData.OU,
		|	OracleSourceData.GL_SOURCE,
		|	OracleSourceData.GL_DATE,
		|	OracleSourceData.CURRENCY_CODE,
		|	OracleSourceData.EXCHANGE_RATE,
		|	OracleSourceData.GL_ACCOUNT,
		|	OracleSourceData.CUSTOMER_ID,
		|	OracleSourceData.CUSTOMER_NUMBER,
		|	OracleSourceData.CUSTOMER_NAME,
		|	OracleSourceData.CONTRACT_NAME,
		|	OracleSourceData.ENTERED,
		|	OracleSourceData.ACCOUNTED,
		|	OracleSourceData.DOC_TYPE,
		|	OracleSourceData.DESCRIPTION,
		|	OracleSourceData.DOC_NUMBER,
		|	OracleSourceData.DOC_NUMBER_2,
		|	OracleSourceData.TRANS_TYPE,
		|	OracleSourceData.INV_DATE,
		|	OracleSourceData.LINE_TYPE,
		|	OracleSourceData.SALESPERSON,
		|	OracleSourceData.DUE_DATE,
		|	OracleSourceData.TAX_RATE,
		|	OracleSourceData.ORIGINAL_TRX_NUMBER,
		|	OracleSourceData.PO_NUMBER,
		|	OracleSourceData.SO_NUM,
		|	OracleSourceData.SO_DATE,
		|	OracleSourceData.SHIP_DATE_ACTUAL,
		|	OracleSourceData.ITEM_NO,
		|	OracleSourceData.ITEM_DESC,
		|	OracleSourceData.PRICE_UNIT,
		|	OracleSourceData.SHIPPED_QUANTITY,
		|	OracleSourceData.RECEIPT_AMOUNT,
		|	OracleSourceData.CREATION_DATE,
		|	OracleSourceData.CREATED_BY,
		|	OracleSourceData.BILL_SITE_NAME,
		|	OracleSourceData.BILL_SITE_ID,
		|	OracleSourceData.SHIP_SITE_NAME,
		|	OracleSourceData.SHIP_SITE_ID,
		|	OracleSourceData.DOC_ID,
		|	OracleSourceData.LINE_ID,
		|	OracleSourceData.DOC_TRANS_ID,
		|	OracleSourceData.ID_ORIG,
		|	ПОДСТРОКА(OracleSourceData.GL_ACCOUNT, 17, 4) + ПОДСТРОКА(OracleSourceData.GL_ACCOUNT, 22, 3) КАК Account,
		|	ПОДСТРОКА(OracleSourceData.GL_ACCOUNT, 6, 3) КАК SubSubSegment,
		|	ПОДСТРОКА(OracleSourceData.GL_ACCOUNT, 10, 6) КАК Location
		|ПОМЕСТИТЬ ВТ_OracleSourceData
		|ИЗ
		|	РегистрСведений.OracleSourceData КАК OracleSourceData
		|ГДЕ
		|	OracleSourceData.ДокументЗагрузки = &ДокументЗагрузки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЛОЖЬ КАК КоллизияОтработана,
		|	""Specify the 1C object"" КАК Описание,
		|	&ТипВнешнейСистемы КАК ТипСоответствия,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Currency) КАК ТипОбъектаВнешнейСистемы,
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ОбъектПриемника,
		|	ВТ_OracleSourceData.CURRENCY_CODE КАК Идентификатор
		|ИЗ
		|	ВТ_OracleSourceData КАК ВТ_OracleSourceData
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|				&Период,
		|				ТипСоответствия = &ТипВнешнейСистемы
		|					И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Currency)) КАК НастройкаСинхронизацииCurrency
		|		ПО ВТ_OracleSourceData.CURRENCY_CODE = НастройкаСинхронизацииCurrency.Идентификатор
		|ГДЕ
		|	НастройкаСинхронизацииCurrency.ОбъектПриемника ЕСТЬ NULL 
		|	И НЕ ВТ_OracleSourceData.CURRENCY_CODE = """"
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЛОЖЬ,
		|	""Failed to find Account"",
		|	&ТипВнешнейСистемы,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Account),
		|	ЗНАЧЕНИЕ(ПланСчетов.Oracle.ПустаяСсылка),
		|	ВТ_OracleSourceData.Account
		|ИЗ
		|	ВТ_OracleSourceData КАК ВТ_OracleSourceData
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Oracle КАК Oracle
		|		ПО (ВТ_OracleSourceData.Account = Oracle.Код)
		|			И (НЕ Oracle.ПометкаУдаления)
		|ГДЕ
		|	Oracle.Ссылка ЕСТЬ NULL 
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЛОЖЬ,
		|	""Failed to find Company"",
		|	&ТипВнешнейСистемы,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Company),
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
		|	ВТ_OracleSourceData.OU
		|ИЗ
		|	ВТ_OracleSourceData КАК ВТ_OracleSourceData
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО (НЕ Организации.ПометкаУдаления)
		|			И ВТ_OracleSourceData.OU = Организации.Код
		|			И (Организации.Source = &ТипВнешнейСистемы)
		|ГДЕ
		|	ВТ_OracleSourceData.OU <> 0
		|	И Организации.Ссылка ЕСТЬ NULL 
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЛОЖЬ,
		|	""Failed to find Sub-Sub-Segment"",
		|	&ТипВнешнейСистемы,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Segment),
		|	ЗНАЧЕНИЕ(Справочник.Сегменты.ПустаяСсылка),
		|	ВТ_OracleSourceData.SubSubSegment
		|ИЗ
		|	ВТ_OracleSourceData КАК ВТ_OracleSourceData
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сегменты КАК Сегменты
		|		ПО (НЕ Сегменты.ПометкаУдаления)
		|			И (ВТ_OracleSourceData.SubSubSegment = Сегменты.Код)
		|			И (Сегменты.Source = &ТипВнешнейСистемы)
		|ГДЕ
		|	Сегменты.Ссылка ЕСТЬ NULL 
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЛОЖЬ,
		|	""Failed to find Location"",
		|	&ТипВнешнейСистемы,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Location),
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка),
		|	ВТ_OracleSourceData.Location
		|ИЗ
		|	ВТ_OracleSourceData КАК ВТ_OracleSourceData
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|		ПО (НЕ ПодразделенияОрганизаций.ПометкаУдаления)
		|			И (ВТ_OracleSourceData.Location = ПодразделенияОрганизаций.Код)
		|			И (ПодразделенияОрганизаций.Source = &ТипВнешнейСистемы)
		|ГДЕ
		|	ПодразделенияОрганизаций.Ссылка ЕСТЬ NULL 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Сегменты.Ссылка,
		|	Сегменты.Код,
		|	ЕСТЬNULL(HFM_Technology.Ссылка, ЗНАЧЕНИЕ(Справочник.HFM_Technology.ПустаяСсылка)) КАК БазовыйЭлемент
		|ИЗ
		|	ВТ_OracleSourceData КАК ВТ_OracleSourceData
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сегменты КАК Сегменты
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.HFM_Technology КАК HFM_Technology
		|			ПО Сегменты.Код = HFM_Technology.Код
		|				И (НЕ HFM_Technology.ПометкаУдаления)
		|		ПО (ПОДСТРОКА(ВТ_OracleSourceData.GL_ACCOUNT, 6, 3) = Сегменты.Код)
		|			И (НЕ Сегменты.ПометкаУдаления)
		|ГДЕ
		|	Сегменты.БазовыйЭлемент = ЗНАЧЕНИЕ(Справочник.HFM_Technology.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодразделенияОрганизаций.Ссылка,
		|	ПодразделенияОрганизаций.Код,
		|	ЕСТЬNULL(HFM_Locations.Ссылка, ЗНАЧЕНИЕ(Справочник.HFM_Locations.ПустаяСсылка)) КАК БазовыйЭлемент
		|ИЗ
		|	ВТ_OracleSourceData КАК ВТ_OracleSourceData
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.HFM_Locations КАК HFM_Locations
		|			ПО ПодразделенияОрганизаций.MgmtCountryCode = HFM_Locations.Код
		|				И (НЕ HFM_Locations.ПометкаУдаления)
		|		ПО (ВТ_OracleSourceData.Location = ПодразделенияОрганизаций.Код)
		|			И (НЕ ПодразделенияОрганизаций.ПометкаУдаления)
		|			И (ПодразделенияОрганизаций.Source = &ТипВнешнейСистемы)
		|ГДЕ
		|	ПодразделенияОрганизаций.БазовыйЭлемент = ЗНАЧЕНИЕ(Справочник.HFM_Locations.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Oracle.Ссылка,
		|	Oracle.Код
		|ИЗ
		|	ВТ_OracleSourceData КАК ВТ_OracleSourceData
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Oracle КАК Oracle
		|		ПО (ВТ_OracleSourceData.Account = Oracle.Код)
		|			И (НЕ Oracle.ПометкаУдаления)
		|ГДЕ
		|	Oracle.БазовыйЭлемент = ЗНАЧЕНИЕ(ПланСчетов.HFM_GL_Accounts.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Организации.Ссылка,
		|	Организации.Код
		|ИЗ
		|	РегистрСведений.OracleSourceData КАК OracleSourceData
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО OracleSourceData.OU = Организации.Код
		|			И (НЕ Организации.ПометкаУдаления)
		|			И (Организации.Source = &ТипВнешнейСистемы)
		|ГДЕ
		|	OracleSourceData.ДокументЗагрузки = &ДокументЗагрузки
		|	И Организации.БазовыйЭлемент = ЗНАЧЕНИЕ(Справочник.HFM_Companies.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ДокументЗагрузки", СтруктураПараметров.Ссылка);
	Запрос.УстановитьПараметр("Период", СтруктураПараметров.Дата);
	Запрос.УстановитьПараметр("ТипВнешнейСистемы", СтруктураПараметров.ТипВнешнейСистемы);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаКоллизий = МассивРезультатов[1].Выгрузить();
	
	ВыборкаСегментов = МассивРезультатов[2].Выбрать();
	
	Пока ВыборкаСегментов.Следующий() Цикл
		
		Если ВыборкаСегментов.БазовыйЭлемент.Пустая() Тогда
			
			СтрокаКоллизии = ТаблицаКоллизий.Добавить();
			СтрокаКоллизии.КоллизияОтработана = Ложь;
			СтрокаКоллизии.Описание = "Not specified base element";
			СтрокаКоллизии.ТипСоответствия = Перечисления.ТипыСоответствий.OracleMI;
			СтрокаКоллизии.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Segment;
			СтрокаКоллизии.ОбъектПриемника = ВыборкаСегментов.Ссылка;
			СтрокаКоллизии.Идентификатор = ВыборкаСегментов.Код;
			
		Иначе
			
			ТекОбъект = ВыборкаСегментов.Ссылка.ПолучитьОбъект();
			ТекОбъект.БазовыйЭлемент = ВыборкаСегментов.БазовыйЭлемент;
			ТекОбъект.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
	// локации
	ВыборкаЛокаций = МассивРезультатов[3].Выбрать();
	
	Пока ВыборкаЛокаций.Следующий() Цикл
		
		Если НЕ ВыборкаЛокаций.БазовыйЭлемент.Пустая() Тогда
			
			ТекОбъект = ВыборкаЛокаций.Ссылка.ПолучитьОбъект();
			ТекОбъект.БазовыйЭлемент = ВыборкаЛокаций.БазовыйЭлемент;
			ТекОбъект.Записать();
			
		Иначе
			
			СтрокаКоллизии = ТаблицаКоллизий.Добавить();
			СтрокаКоллизии.КоллизияОтработана = Ложь;
			СтрокаКоллизии.Описание = "Not specified base element";
			СтрокаКоллизии.ТипСоответствия = Перечисления.ТипыСоответствий.OracleMI;
			СтрокаКоллизии.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Location;
			СтрокаКоллизии.ОбъектПриемника = ВыборкаЛокаций.Ссылка;
			СтрокаКоллизии.Идентификатор = ВыборкаЛокаций.Код;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// счета
	ВыборкаСчетов = МассивРезультатов[4].Выбрать();
	
	Пока ВыборкаСчетов.Следующий() Цикл
		
		СтрокаКоллизии = ТаблицаКоллизий.Добавить();
		СтрокаКоллизии.КоллизияОтработана = Ложь;
		СтрокаКоллизии.Описание = "Not specified base element";
		СтрокаКоллизии.ТипСоответствия = Перечисления.ТипыСоответствий.OracleMI;
		СтрокаКоллизии.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Account;
		СтрокаКоллизии.ОбъектПриемника = ВыборкаСчетов.Ссылка;
		СтрокаКоллизии.Идентификатор = ВыборкаСчетов.Код;
		
	КонецЦикла;
	
	// организации
	ВыборкаКомпаний = МассивРезультатов[5].Выбрать();
	
	Пока ВыборкаКомпаний.Следующий() Цикл
		
		СтрокаКоллизии = ТаблицаКоллизий.Добавить();
		СтрокаКоллизии.КоллизияОтработана = Ложь;
		СтрокаКоллизии.Описание = "Not specified base element";
		СтрокаКоллизии.ТипСоответствия = Перечисления.ТипыСоответствий.OracleMI;
		СтрокаКоллизии.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Company;
		СтрокаКоллизии.ОбъектПриемника = ВыборкаКомпаний.Ссылка;
		СтрокаКоллизии.Идентификатор = ВыборкаКомпаний.Код;
		
	КонецЦикла;
	
	ДанныеДляЗаполнения.Вставить("ТаблицаКоллизий", ТаблицаКоллизий);
	
	ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
	
КонецПроцедуры

Процедура СформироватьПроводкиDSS(СтруктураПараметров, АдресХранилища) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	OracleSourceData.SOURCE_SYSTEM,
		|	OracleSourceData.OU,
		|	OracleSourceData.GL_SOURCE,
		|	OracleSourceData.GL_DATE,
		|	OracleSourceData.CURRENCY_CODE,
		|	OracleSourceData.EXCHANGE_RATE,
		|	OracleSourceData.GL_ACCOUNT,
		|	OracleSourceData.CUSTOMER_ID,
		|	OracleSourceData.CUSTOMER_NUMBER,
		|	OracleSourceData.CUSTOMER_NAME,
		|	OracleSourceData.CONTRACT_NAME,
		|	OracleSourceData.ENTERED,
		|	OracleSourceData.ACCOUNTED,
		|	OracleSourceData.DOC_TYPE,
		|	OracleSourceData.DESCRIPTION,
		|	OracleSourceData.DOC_NUMBER,
		|	OracleSourceData.DOC_NUMBER_2,
		|	OracleSourceData.TRANS_TYPE,
		|	OracleSourceData.INV_DATE,
		|	OracleSourceData.LINE_TYPE,
		|	OracleSourceData.SALESPERSON,
		|	OracleSourceData.DUE_DATE,
		|	OracleSourceData.TAX_RATE,
		|	OracleSourceData.ORIGINAL_TRX_NUMBER,
		|	OracleSourceData.PO_NUMBER,
		|	OracleSourceData.SO_NUM,
		|	OracleSourceData.SO_DATE,
		|	OracleSourceData.SHIP_DATE_ACTUAL,
		|	OracleSourceData.ITEM_NO,
		|	OracleSourceData.ITEM_DESC,
		|	OracleSourceData.PRICE_UNIT,
		|	OracleSourceData.SHIPPED_QUANTITY,
		|	OracleSourceData.RECEIPT_AMOUNT,
		|	OracleSourceData.CREATION_DATE,
		|	OracleSourceData.CREATED_BY,
		|	OracleSourceData.BILL_SITE_NAME,
		|	OracleSourceData.BILL_SITE_ID,
		|	OracleSourceData.SHIP_SITE_NAME,
		|	OracleSourceData.SHIP_SITE_ID,
		|	OracleSourceData.DOC_ID,
		|	OracleSourceData.LINE_ID,
		|	OracleSourceData.DOC_TRANS_ID,
		|	OracleSourceData.ID_ORIG,
		|	ПОДСТРОКА(OracleSourceData.GL_ACCOUNT, 17, 4) + ПОДСТРОКА(OracleSourceData.GL_ACCOUNT, 22, 3) КАК Account,
		|	ПОДСТРОКА(OracleSourceData.GL_ACCOUNT, 6, 3) КАК SubSubSegment,
		|	ПОДСТРОКА(OracleSourceData.GL_ACCOUNT, 10, 6) КАК Location
		|ПОМЕСТИТЬ ВТ_ДанныеФайла
		|ИЗ
		|	РегистрСведений.OracleSourceData КАК OracleSourceData
		|ГДЕ
		|	OracleSourceData.ДокументЗагрузки = &ДокументЗагрузки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.Идентификатор КАК Идентификатор,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_СоответствиеКлиентовCustomerNumber
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|			&Период,
		|			ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.OracleMI)
		|				И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Client)
		|				И Идентификатор В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_ДанныеФайла.CUSTOMER_NUMBER
		|					ИЗ
		|						ВТ_ДанныеФайла КАК ВТ_ДанныеФайла)) КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.Идентификатор КАК Идентификатор,
		|	НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних.ОбъектПриемника
		|ПОМЕСТИТЬ ВТ_СоответствиеCurrency
		|ИЗ
		|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СрезПоследних(
		|			&Период,
		|			ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.OracleMI)
		|				И ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Currency)
		|				И Идентификатор В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_ДанныеФайла.CURRENCY_CODE
		|					ИЗ
		|						ВТ_ДанныеФайла КАК ВТ_ДанныеФайла)) КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемамиСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	SalesOrder.Номер,
		|	SalesOrder.Ссылка
		|ИЗ
		|	Документ.SalesOrder КАК SalesOrder
		|ГДЕ
		|	SalesOrder.Source = &ТипВнешнейСистемы
		|	И 
		|	НЕ SalesOrder.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеФайла.GL_DATE КАК GlDate,
		|	ВТ_ДанныеФайла.GL_SOURCE КАК GlSourceType,
		|	Организации.Ссылка КАК Company,
		|	Oracle.Ссылка КАК Account,
		|	ПодразделенияОрганизаций.Ссылка КАК Location,
		|	Сегменты.Ссылка КАК SubSubSegment,
		|	ВТ_СоответствиеCurrency.ОбъектПриемника КАК Currency,
		|	ВТ_ДанныеФайла.EXCHANGE_RATE КАК ExchangeRate,
		|	ВТ_ДанныеФайла.GL_ACCOUNT КАК GL_Account,
		|	ВТ_СоответствиеКлиентовCustomerNumber.ОбъектПриемника КАК Client,
		|	ВТ_ДанныеФайла.CONTRACT_NAME КАК Contract,
		|	ВТ_ДанныеФайла.ENTERED КАК Amount,
		|	ВТ_ДанныеФайла.ACCOUNTED КАК BaseAmount,
		|	ВТ_ДанныеФайла.DOC_TYPE КАК DocType,
		|	ВТ_ДанныеФайла.DESCRIPTION КАК Description,
		|	ВТ_ДанныеФайла.TRANS_TYPE КАК TransType,
		|	ВТ_ДанныеФайла.SO_NUM КАК SONum,
		|	ВТ_ДанныеФайла.SO_DATE КАК SODate,
		|	ВТ_ДанныеФайла.SHIP_DATE_ACTUAL КАК ShipDateActual,
		|	ВТ_ДанныеФайла.CREATION_DATE КАК CreationDate,
		|	ВТ_ДанныеФайла.CREATED_BY КАК CreatedBy,
		|	ВТ_ДанныеФайла.DOC_ID КАК DocID,
		|	ВТ_ДанныеФайла.LINE_ID КАК LineID,
		|	ВТ_ДанныеФайла.ID_ORIG,
		|	ЕСТЬNULL(ТранзакцияOracle.Ссылка, ЗНАЧЕНИЕ(Документ.ТранзакцияOracle.ПустаяСсылка)) КАК Транзакция,
		|	ВТ_ДанныеФайла.CUSTOMER_NUMBER КАК CustomerNumber
		|ИЗ
		|	ВТ_ДанныеФайла КАК ВТ_ДанныеФайла
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО ВТ_ДанныеФайла.OU = Организации.Код
		|			И (НЕ Организации.ПометкаУдаления)
		|			И (Организации.Source = &ТипВнешнейСистемы)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Oracle КАК Oracle
		|		ПО ВТ_ДанныеФайла.Account = Oracle.Код
		|			И (НЕ Oracle.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|		ПО ВТ_ДанныеФайла.Location = ПодразделенияОрганизаций.Код
		|			И (НЕ ПодразделенияОрганизаций.ПометкаУдаления)
		|			И (ПодразделенияОрганизаций.Source = &ТипВнешнейСистемы)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сегменты КАК Сегменты
		|		ПО ВТ_ДанныеФайла.SubSubSegment = Сегменты.Код
		|			И (НЕ Сегменты.ПометкаУдаления)
		|			И (Сегменты.Source = &ТипВнешнейСистемы)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СоответствиеCurrency КАК ВТ_СоответствиеCurrency
		|		ПО ВТ_ДанныеФайла.CURRENCY_CODE = ВТ_СоответствиеCurrency.Идентификатор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоответствиеКлиентовCustomerNumber КАК ВТ_СоответствиеКлиентовCustomerNumber
		|		ПО ВТ_ДанныеФайла.CUSTOMER_NUMBER = ВТ_СоответствиеКлиентовCustomerNumber.Идентификатор
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТранзакцияOracle КАК ТранзакцияOracle
		|		ПО ВТ_ДанныеФайла.ID_ORIG = ТранзакцияOracle.Номер
		|			И (НЕ ТранзакцияOracle.ПометкаУдаления)";
	
	Запрос.УстановитьПараметр("Период", СтруктураПараметров.Дата);
	Запрос.УстановитьПараметр("ДокументЗагрузки", СтруктураПараметров.Ссылка);
	Запрос.УстановитьПараметр("ТипВнешнейСистемы", СтруктураПараметров.ТипВнешнейСистемы);
	
	НачатьТранзакцию();
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ЗафиксироватьТранзакцию();
	
	
	ВыборкаКэшSalesOrders = РезультатЗапроса[3].Выбрать();
	КэшSalesOrders = Новый ТаблицаЗначений;
	КэшSalesOrders.Колонки.Добавить("Номер", Новый ОписаниеТипов("Строка"));
	КэшSalesOrders.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ДокументСсылка.SalesOrder"));
	КэшSalesOrders.Индексы.Добавить("Номер");
	
	Пока ВыборкаКэшSalesOrders.Следующий() Цикл
		СтрокаКэша = КэшSalesOrders.Добавить();
		СтрокаКэша.Номер = СокрЛП(ВыборкаКэшSalesOrders.Номер);
		СтрокаКэша.Ссылка = ВыборкаКэшSalesOrders.Ссылка;
	КонецЦикла;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[4].Выбрать();
	
	НЗ = РегистрыСведений.DSSСформированныеПриЗагрузке.СоздатьНаборЗаписей();
	НЗ.Отбор.ДокументЗагрузки.Установить(СтруктураПараметров.Ссылка);
	
	НачатьТранзакцию();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Транзакция) Тогда
			ТранзакцияOracleОбъект = ВыборкаДетальныеЗаписи.Транзакция.ПолучитьОбъект();
		Иначе
			ТранзакцияOracleОбъект = Документы.ТранзакцияOracle.СоздатьДокумент();
		КонецЕсли;
		
		ЗаполнитьТранзакцию(ТранзакцияOracleОбъект, ВыборкаДетальныеЗаписи);
		
		ТранзакцияOracleОбъект.Записать(РежимЗаписиДокумента.Запись);
		
		НайденаОшибкаПриПоискеСвязанныхОбъектов = СформироватьСвязанныеОбъекты(ТранзакцияOracleОбъект, ВыборкаДетальныеЗаписи, КэшSalesOrders);
		
		ЗаписьНабора = НЗ.Добавить();
		ЗаписьНабора.ДокументЗагрузки = СтруктураПараметров.Ссылка;
		ЗаписьНабора.ПроводкаDSS = ТранзакцияOracleОбъект.Ссылка;
		ЗаписьНабора.ОшибкаПриПоискеСвязанныхОбъектов = НайденаОшибкаПриПоискеСвязанныхОбъектов;
		
	КонецЦикла;
	
	НЗ.Записать(Истина);
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Процедура ЗаполнитьТранзакцию(ТранзакцияOracleОбъект, ДанныеДляЗаполнения)
	
	ЗаполнитьЗначенияСвойств(ТранзакцияOracleОбъект, ДанныеДляЗаполнения);
	
	ТранзакцияOracleОбъект.Номер = ДанныеДляЗаполнения.ID_ORIG; 
	ТранзакцияOracleОбъект.Дата = ДанныеДляЗаполнения.GlDate;
	
	ТранзакцияOracleОбъект.GlSourceType = ПолучитьGlSourceType(ДанныеДляЗаполнения);
	
	ПреобразованиеСокрЛП(ТранзакцияOracleОбъект);
	
	Если НЕ ЗначениеЗаполнено(ТранзакцияOracleОбъект.Client) Тогда
		ВызватьИсключение "Failed to find client " + ДанныеДляЗаполнения.CustomerNumber;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьGlSourceType(ДанныеДляЗаполнения)
	
	Если ДанныеДляЗаполнения.GlSourceType = "SO Accrual" Тогда
		Возврат Перечисления.OracleGlSourceType.SOAccrual;
	ИначеЕсли ДанныеДляЗаполнения.GlSourceType = "SAM Accrual" Тогда
		Возврат Перечисления.OracleGlSourceType.SAMAccrual;
	КонецЕсли;
	
	Возврат Перечисления.OracleGlSourceType.ПустаяСсылка();
	
КонецФункции

Процедура ПреобразованиеСокрЛП(ТранзакцияOracleОбъект)
	
	ТранзакцияOracleОбъект.Contract = СокрЛП(ТранзакцияOracleОбъект.Contract);
	ТранзакцияOracleОбъект.DocType = СокрЛП(ТранзакцияOracleОбъект.DocType);
	ТранзакцияOracleОбъект.TransType = СокрЛП(ТранзакцияOracleОбъект.TransType);
	ТранзакцияOracleОбъект.SONum = СокрЛП(ТранзакцияOracleОбъект.SONum);
	ТранзакцияOracleОбъект.CreatedBy = СокрЛП(ТранзакцияOracleОбъект.CreatedBy);
	
КонецПроцедуры

Функция СформироватьСвязанныеОбъекты(ТранзакцияOracleОбъект, ДанныеДляЗаполнения, КэшSalesOrders)
	
	НайденаОшибка = Ложь;
	
	СтрокаSalesOrder = КэшSalesOrders.Найти(ДанныеДляЗаполнения.SONum, "Номер");
	
	Если СтрокаSalesOrder = Неопределено Тогда

		ТекSalesOrder = СоздатьSalesOrder(ТранзакцияOracleОбъект);
		НоваяСтрокаКэша = КэшSalesOrders.Добавить();
		НоваяСтрокаКэша.Номер = ДанныеДляЗаполнения.SONum;
		НоваяСтрокаКэша.Ссылка = ТекSalesOrder;
		
	Иначе
		
		ТекSalesOrder = СтрокаSalesOrder.Ссылка;
		ДобавитьСвязанныйОбъект(ТранзакцияOracleОбъект, Перечисления.ТипыОбъектовСвязанныхСПроводкойDSS.SalesOrder, ТекSalesOrder);
	
	КонецЕсли;
	
	Возврат НайденаОшибка;
	
КонецФункции

Процедура ДобавитьСвязанныйОбъект(ТранзакцияOracleОбъект, ТипОбъекта, СвязанныйОбъект)
	
	НЗ = РегистрыСведений.DSSСвязанныеДокументы.СоздатьНаборЗаписей();
	НЗ.Отбор.ПроводкаDSS.Установить(ТранзакцияOracleОбъект.Ссылка);
	НЗ.Отбор.ТипСвязанногоОбъекта.Установить(ТипОбъекта);
	НоваяЗапись = НЗ.Добавить();
	НоваяЗапись.ПроводкаDSS = ТранзакцияOracleОбъект.Ссылка;
	НоваяЗапись.ТипСвязанногоОбъекта = ТипОбъекта;
	НоваяЗапись.СвязанныйОбъект = СвязанныйОбъект;
	НЗ.Записать(Истина);
	
КонецПроцедуры

Функция СоздатьSalesOrder(ТранзакцияOracleОбъект)
	
	ДокОбъект = Документы.SalesOrder.СоздатьДокумент();
	ДокОбъект.Номер = ТранзакцияOracleОбъект.SONum;
	ДокОбъект.Дата = ТранзакцияOracleОбъект.SODate;
	ДокОбъект.Source = Перечисления.ТипыСоответствий.OracleMI;
	ДокОбъект.Client = ТранзакцияOracleОбъект.Client;
	ДокОбъект.Company = ТранзакцияOracleОбъект.Company;
	ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	
	ДобавитьСвязанныйОбъект(ТранзакцияOracleОбъект, Перечисления.ТипыОбъектовСвязанныхСПроводкойDSS.SalesOrder, ДокОбъект.Ссылка);
	
	Возврат ДокОбъект.Ссылка;
	
КонецФункции

Процедура ПровестиЗагруженныеДокументы(СтруктураПараметров, АдресХранилища) Экспорт
	
	ДанныеДляЗаполнения = Новый Структура();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	DSSСформированныеПриЗагрузке.ПроводкаDSS
		|ИЗ
		|	РегистрСведений.DSSСформированныеПриЗагрузке КАК DSSСформированныеПриЗагрузке
		|ГДЕ
		|	DSSСформированныеПриЗагрузке.ДокументЗагрузки = &ДокументЗагрузки
		|	И НЕ DSSСформированныеПриЗагрузке.ИгнорироватьОбработку";
	
	Запрос.УстановитьПараметр("ДокументЗагрузки", СтруктураПараметров.Ссылка);
	
	НачатьТранзакцию();
	РезультатЗапроса = Запрос.Выполнить();
	ЗафиксироватьТранзакцию();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТекстОшибок = "";
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ТекДок = ВыборкаДетальныеЗаписи.ПроводкаDSS.ПолучитьОбъект();
		Попытка
			ТекДок.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ТекстОшибок = ТекстОшибок + ОписаниеОшибки() + Символы.ПС;
		КонецПопытки;
		
	КонецЦикла;
	
	Если Не ПустаяСтрока(ТекстОшибок) Тогда
		ДанныеДляЗаполнения.Вставить("ОшибкаЗаполнения", ТекстОшибок);
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(ДанныеДляЗаполнения, АдресХранилища);
	
КонецПроцедуры

#КонецЕсли