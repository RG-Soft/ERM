#Область ПрограммныйИнтерфейс

Процедура PowerBIПередЗаписьюСправочника(Источник, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);

	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Источник));
	
	Если Источник.ЭтоНовый() Тогда
		
		Ссылка = Источник.ПолучитьСсылкуНового();
		Если Ссылка.Пустая() Тогда
			Если ОбщегоНазначения.ЭтоСправочник(ОбъектМетаданных) Тогда
				Ссылка = Справочники[ОбъектМетаданных.Имя].ПолучитьСсылку(Новый УникальныйИдентификатор());
			ИначеЕсли ОбщегоНазначения.ЭтоПланСчетов(ОбъектМетаданных) Тогда
				Ссылка = ПланыСчетов[ОбъектМетаданных.Имя].ПолучитьСсылку(Новый УникальныйИдентификатор());
			Иначе
				ВызватьИсключение СтрШаблон("Unexpected metadata type: %1", Источник);
			КонецЕсли;
			Источник.УстановитьСсылкуНового(Ссылка);
		КонецЕсли;
		
		Операция = Перечисления.ОперацииPowerBI.Create;
		
	Иначе
		
		Ссылка = Источник.Ссылка;
		Операция = Перечисления.ОперацииPowerBI.Update;
		
	КонецЕсли;

	ТаблицаСуществующихЗаданий = Справочники.ЗаданияPowerBI.ЗаданияПоИсточнику(Ссылка);
	
	Если ТаблицаСуществующихЗаданий.Количество() = 0 Тогда
		Задание = Справочники.ЗаданияPowerBI.СоздатьЭлемент();
	Иначе
		Задание = ТаблицаСуществующихЗаданий[0].Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	Если (ОбщегоНазначения.ЭтоПланСчетов(ОбъектМетаданных) ИЛИ ОбъектМетаданных.Иерархический) И ЗначениеЗаполнено(Источник.Родитель) Тогда
		Задания = Справочники.ЗаданияPowerBI.ЗаданияПоИсточнику(Источник.Родитель);
		Если Задания.Количество() > 0 Тогда
			Задание.Родитель = Задания[0].Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Если ТаблицаСуществующихЗаданий.Количество() = 0 Тогда
		Задание.Источник = Ссылка;
		Задание.Операция = Операция;
	КонецЕсли;
	Если Задание.Модифицированность() Тогда
		Задание.Записать();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьЗаданияПоИсточнику(Источник) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаЗаданийПоИсточнику = Справочники.ЗаданияPowerBI.ЗаданияПоИсточнику(Источник);
	
	Отбор = Новый Структура;
	Параметры = Новый Массив;
	
	Для каждого СтрокаТаблицыЗаданий Из ТаблицаЗаданийПоИсточнику Цикл
		
		Отбор.Вставить("ИмяМетода", "PowerBIРегламенты.ВыполнитьЗаданиеПоИсточнику");
		Отбор.Вставить("Ключ", СтрШаблон("PowerBIРегламенты.ВыполнитьЗаданияПоИсточнику: %1", СтрокаТаблицыЗаданий.Ссылка.УникальныйИдентификатор()));
		Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
		
		Параметры.Очистить();
		Параметры.Добавить(СтрокаТаблицыЗаданий.Ссылка);
		
		МассивФоновыхЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
		Если МассивФоновыхЗаданий.Количество() = 0 Тогда
			Попытка
				ФоновыеЗадания.Выполнить(Отбор.ИмяМетода, Параметры,
					Отбор.Ключ, // Ключ
					НСтр("ru = 'Выполнение заданий Power BI'")); // Наименование
			Исключение
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыполнитьЗаданиеПоИсточнику(Задание) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ЗаданияPowerBI");
	ЭлементБлокировки.УстановитьЗначение("Ссылка", Задание);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	ЗаданиеОбъект = Задание.ПолучитьОбъект();
	
	СтруктураРезультата = ЗаданиеОбъект.ВыполнитьЗадание();
	Если СтруктураРезультата.Результат Тогда
		УбратьПодчиненныеЗаданияИзИерархии(ЗаданиеОбъект);
		ЗаданиеОбъект.Удалить();
	Иначе
		ЗаданиеОбъект.КоличествоПопытокОтправки = ЗаданиеОбъект.КоличествоПопытокОтправки + 1;
		ЗаданиеОбъект.Лог = СтруктураРезультата.Сообщение;
		ЗаданиеОбъект.Записать();
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Процедура ВыполнитьЗаданиеСПодчиненными(Задание) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	ПодчиненныеЗадания = ПолучитьЗаданияСледующегоУровня(Задание);
	ВыполнитьЗаданиеПоИсточнику(Задание);
	Для каждого ПодчиненноеЗадание Из ПодчиненныеЗадания Цикл
		ВыполнитьЗаданиеПоИсточнику(ПодчиненноеЗадание);
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УбратьПодчиненныеЗаданияИзИерархии(ЗаданиеРодитель)
	
	ПодчиненныеЗадания = ПолучитьЗаданияСледующегоУровня(ЗаданиеРодитель.Ссылка);
	
	Для Каждого ПодчиненноеЗадание Из ПодчиненныеЗадания Цикл
		
		ПодчиненноеЗаданиеОбъект = ПодчиненноеЗадание.ПолучитьОбъект();
		ПодчиненноеЗаданиеОбъект.Родитель = Справочники.ЗаданияPowerBI.ПустаяСсылка();
		ПодчиненноеЗаданиеОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьЗаданияСледующегоУровня(Задание)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаданияPowerBI.Ссылка
		|ИЗ
		|	Справочник.ЗаданияPowerBI КАК ЗаданияPowerBI
		|ГДЕ
		|	ЗаданияPowerBI.Родитель = &Родитель
		|	И НЕ ЗаданияPowerBI.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Родитель", Задание);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

#КонецОбласти
