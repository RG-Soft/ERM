
Процедура ПередЗаписью(Отказ)
	
	// Дозаполним реквизиты без обращений к СУБД
	ДозаполнитьРеквизитыБезДополнительныхДанных();
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Проверим реквизиты без обращений к СУБД
	ПроверитьРеквизитыБезДополнительныхДанных(Отказ);
	
	// Если случились ошибки - в целях оптимизации дальше ничего делать не будем
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Получим данные из СУБД и дозаполним реквизиты
	ДозаполнитьРеквизитыСДополнительнымиДанными();
	
	// Проверим реквизиты с учетом данных полученных из СУБД
	ПроверитьРеквизитыСДополнительнымиДанными(Отказ);
	
КонецПроцедуры

Процедура ДозаполнитьРеквизитыБезДополнительныхДанных()
	
	Код = СокрЛП(Код);
	Наименование = СокрЛП(Наименование);
	DefaultActivity = СокрЛП(DefaultActivity);
		
КонецПроцедуры

Процедура ПроверитьРеквизитыБезДополнительныхДанных(Отказ)
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СокрЛП(Код)) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""No."" is empty!",
			ЭтотОбъект, "Код", , Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Сегмент) Тогда	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Sub sub segment"" is empty!",
			ЭтотОбъект, "Сегмент", , Отказ);	
	КонецЕсли;
	
КонецПроцедуры

Процедура ДозаполнитьРеквизитыСДополнительнымиДанными()
	
	// Определим и запомним родителя саб саб сегмента
	ДополнительныеСвойства.Вставить("SubSubSegmentРодитель", Неопределено);
	Если ЗначениеЗаполнено(Сегмент) Тогда
		ДополнительныеСвойства.SubSubSegmentРодитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сегмент, "Родитель");
	КонецЕсли;
	
	// Дозаполним саб сегмент по родителю саб саб сегмента
	Если НЕ ЗначениеЗаполнено(SubSegment) И ЗначениеЗаполнено(ДополнительныеСвойства.SubSubSegmentРодитель) Тогда
		SubSegment = ДополнительныеСвойства.SubSubSegmentРодитель;
	КонецЕсли;
	
	// Определим и запомним родителя саб сегмента
	ДополнительныеСвойства.Вставить("SubSegmentРодитель", Неопределено);
	Если ЗначениеЗаполнено(SubSegment) Тогда
		ДополнительныеСвойства.SubSegmentРодитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(SubSegment, "Родитель");
	КонецЕсли;
	
	// Дозаполним сегмент по родителю саб сегмента
	Если НЕ ЗначениеЗаполнено(Segment) И ЗначениеЗаполнено(ДополнительныеСвойства.SubSegmentРодитель) Тогда
		Segment = ДополнительныеСвойства.SubSegmentРодитель;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьРеквизитыСДополнительнымиДанными(Отказ)
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(Segment) Тогда
		
		// Родителем сегмента должна быть пустая ссылка
		// Но из-за ограничения уровней иерархии эта проверка все равно так или иначе сработает
		// Поэтому в целях оптимизации - не будем ее делать
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Segment"" is empty!",
			ЭтотОбъект, "Segment", , Отказ);
			
	КонецЕсли;
	
	Если ЗначениеЗаполнено(SubSegment) Тогда
		
		// Родителем саб сегмента должен быть сегмент
		Если ЗначениеЗаполнено(Segment) Тогда
			
			Если ДополнительныеСвойства.SubSegmentРодитель <> Segment Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					"""Sub segment"" does not belog to Segment!",
					ЭтотОбъект, "SubSegment", , Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Sub segment"" is empty!",
			ЭтотОбъект, "SubSegment", , Отказ);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Сегмент) Тогда
		
		// Родителем саб саб сегмента должен быть саб сегмент
		Если ЗначениеЗаполнено(SubSegment) Тогда
			
			Если ДополнительныеСвойства.SubSubSegmentРодитель <> SubSegment Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					"""Sub sub segment"" does not belog to Sub segment!",
					ЭтотОбъект, "SubSubSegment", , Отказ);
			КонецЕсли;
			
		КонецЕсли;	
			
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Sub sub segment"" is empty!",
			ЭтотОбъект, "Сегмент", , Отказ);
			
	КонецЕсли;
	
	// Некоторые реквизиты могут проверяться только при интерактивной записи.
	
КонецПроцедуры
