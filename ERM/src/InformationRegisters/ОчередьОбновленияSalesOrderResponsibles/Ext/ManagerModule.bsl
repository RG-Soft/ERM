#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура Добавить(Source, Идентификатор1, Идентификатор2, ДатаВремя = Неопределено) Экспорт
	
	Если ДатаВремя = Неопределено Тогда
		
		ДатаВремя = ТекущаяДата();
		ДатаВМиллиСекундах = ОбщегоНазначения.ТекущаяДатаВМиллисекундах();
		
	Иначе
		
		// Запись должна быть обработана после других записей с такой же датой.
		ДатаВМиллисекундах = ОбщегоНазначения.ДатаВМиллисекундах(ДатаВремя);
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ЕстьNull(МАКСИМУМ(ОчередьОбновленияSalesOrderResponsibles.ДатаВМиллиСекундах), 0) КАК ДатаВмс
			|ИЗ
			|	РегистрСведений.ОчередьОбновленияSalesOrderResponsibles КАК ОчередьОбновленияSalesOrderResponsibles
			|ГДЕ
			|	ОчередьОбновленияSalesOrderResponsibles.Дата = &ДатаВремя");
		
		Запрос.УстановитьПараметр("ДатаВремя", ДатаВремя);
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ДатаВМиллисекундах = ДатаВМиллисекундах + Выборка.ДатаВмс + 1;
		КонецЕсли;
		
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.ОчередьОбновленияSalesOrderResponsibles.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Source = Source;
	МенеджерЗаписи.Идентификатор1 = Идентификатор1;
	МенеджерЗаписи.Идентификатор2 = Идентификатор2;
	МенеджерЗаписи.Дата = ДатаВремя;
	МенеджерЗаписи.ДатаВМиллиСекундах = ДатаВМиллиСекундах;
	
	// Запись с замещением для правильного выстраивания очереди
	МенеджерЗаписи.Записать(Истина);
	
КонецПроцедуры

Процедура Удалить(Source, Идентификатор1, Идентификатор2) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОчередьОбновленияSalesOrderResponsibles.Source,
		|	ОчередьОбновленияSalesOrderResponsibles.Идентификатор1,
		|	ОчередьОбновленияSalesOrderResponsibles.Идентификатор2
		|ИЗ
		|	РегистрСведений.ОчередьОбновленияSalesOrderResponsibles КАК ОчередьОбновленияSalesOrderResponsibles
		|ГДЕ
		|	ОчередьОбновленияSalesOrderResponsibles.Source = &Source
		|	И ОчередьОбновленияSalesOrderResponsibles.Идентификатор1 = &Идентификатор1
		|	И ОчередьОбновленияSalesOrderResponsibles.Идентификатор2 = &Идентификатор2";
	
	Запрос.УстановитьПараметр("Source", Source);
	Запрос.УстановитьПараметр("Идентификатор1", Идентификатор1);
	Запрос.УстановитьПараметр("Идентификатор2", Идентификатор2);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		МенеджерЗаписи = РегистрыСведений.ОчередьОбновленияSalesOrderResponsibles.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
		МенеджерЗаписи.Удалить();
	КонецЕсли;
	
КонецПроцедуры

// Обновляет порцию данных из очереди
//
// Параметры:
//  РазмерПорции - Число - количество записей, которые необходимо обработать.
//
// Возвращаемое значение:
//  Число - количество обарботанных записей очереди.
//
Функция ОбработатьПорцию(РазмерПорции = 10) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ %1
		|	ОчередьОбновленияSalesOrderResponsibles.Source,
		|	ОчередьОбновленияSalesOrderResponsibles.Идентификатор1,
		|	ОчередьОбновленияSalesOrderResponsibles.Идентификатор2
		|ПОМЕСТИТЬ ВТ_ТекПорция
		|ИЗ
		|	РегистрСведений.ОчередьОбновленияSalesOrderResponsibles КАК ОчередьОбновленияSalesOrderResponsibles
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОчередьОбновленияSalesOrderResponsibles.ДатаВМиллиСекундах
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПолучателиУведомленийUnbilled.Source,
		|	ПолучателиУведомленийUnbilled.Идентификатор1,
		|	ПолучателиУведомленийUnbilled.Идентификатор2
		|ПОМЕСТИТЬ ВТ_Исключения
		|ИЗ
		|	ВТ_ТекПорция КАК ВТ_ТекПорция
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПолучателиУведомленийUnbilled КАК ПолучателиУведомленийUnbilled
		|		ПО ВТ_ТекПорция.Source = ПолучателиУведомленийUnbilled.Source
		|			И ВТ_ТекПорция.Идентификатор1 = ПолучателиУведомленийUnbilled.Идентификатор1
		|			И (ВТ_ТекПорция.Идентификатор2 = НЕОПРЕДЕЛЕНО
		|				ИЛИ ВТ_ТекПорция.Идентификатор2 = """"
		|				ИЛИ ВТ_ТекПорция.Идентификатор2 = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
		|			И (ПолучателиУведомленийUnbilled.Идентификатор2 <> НЕОПРЕДЕЛЕНО)
		|			И (ПолучателиУведомленийUnbilled.Идентификатор2 <> """")
		|			И (ПолучателиУведомленийUnbilled.Идентификатор2 <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
		|			И (ПолучателиУведомленийUnbilled.ResponsibleAR)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТекПорция.Source,
		|	ВТ_ТекПорция.Идентификатор1,
		|	ВТ_ТекПорция.Идентификатор2,
		|	ПолучателиУведомленийUnbilled.Получатель КАК Responsible
		|ПОМЕСТИТЬ ВТ_Ответственные
		|ИЗ
		|	ВТ_ТекПорция КАК ВТ_ТекПорция
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолучателиУведомленийUnbilled КАК ПолучателиУведомленийUnbilled
		|		ПО ВТ_ТекПорция.Source = ПолучателиУведомленийUnbilled.Source
		|			И ВТ_ТекПорция.Идентификатор1 = ПолучателиУведомленийUnbilled.Идентификатор1
		|			И ВТ_ТекПорция.Идентификатор2 = ПолучателиУведомленийUnbilled.Идентификатор2
		|			И (ПолучателиУведомленийUnbilled.ResponsibleAR)
		|ГДЕ
		|	ВТ_ТекПорция.Идентификатор2 <> НЕОПРЕДЕЛЕНО
		|	И ВТ_ТекПорция.Идентификатор2 <> """"
		|	И ВТ_ТекПорция.Идентификатор2 <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ТекПорция.Source,
		|	ВТ_ТекПорция.Идентификатор1,
		|	ВТ_ТекПорция.Идентификатор2,
		|	ПолучателиУведомленийUnbilled.Получатель
		|ИЗ
		|	ВТ_ТекПорция КАК ВТ_ТекПорция
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолучателиУведомленийUnbilled КАК ПолучателиУведомленийUnbilled
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Исключения КАК ВТ_Исключения
		|			ПО ПолучателиУведомленийUnbilled.Source = ВТ_Исключения.Source
		|				И ПолучателиУведомленийUnbilled.Идентификатор1 = ВТ_Исключения.Идентификатор1
		|				И ПолучателиУведомленийUnbilled.Идентификатор2 = ВТ_Исключения.Идентификатор2
		|				И (ПолучателиУведомленийUnbilled.ResponsibleAR)
		|		ПО ВТ_ТекПорция.Source = ПолучателиУведомленийUnbilled.Source
		|			И ВТ_ТекПорция.Идентификатор1 = ПолучателиУведомленийUnbilled.Идентификатор1
		|			И (ПолучателиУведомленийUnbilled.ResponsibleAR)
		|ГДЕ
		|	ВТ_Исключения.Source ЕСТЬ NULL 
		|	И (ВТ_ТекПорция.Идентификатор2 = НЕОПРЕДЕЛЕНО
		|			ИЛИ ВТ_ТекПорция.Идентификатор2 = """"
		|			ИЛИ ВТ_ТекПорция.Идентификатор2 = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Ответственные.Source КАК Source,
		|	ВТ_Ответственные.Идентификатор1 КАК Идентификатор1,
		|	ВТ_Ответственные.Идентификатор2 КАК Идентификатор2,
		|	ИдентификаторыДляНотификацийSO.SalesOrder КАК SalesOrder,
		|	ВТ_Ответственные.Responsible
		|ИЗ
		|	ВТ_Ответственные КАК ВТ_Ответственные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИдентификаторыДляНотификацийSO КАК ИдентификаторыДляНотификацийSO
		|		ПО ВТ_Ответственные.Source = ИдентификаторыДляНотификацийSO.Source
		|			И ВТ_Ответственные.Идентификатор1 = ИдентификаторыДляНотификацийSO.Идентификатор1
		|			И ВТ_Ответственные.Идентификатор2 = ИдентификаторыДляНотификацийSO.Идентификатор2
		|			И (ВТ_Ответственные.Идентификатор2 <> НЕОПРЕДЕЛЕНО)
		|			И (ВТ_Ответственные.Идентификатор2 <> """")
		|			И (ВТ_Ответственные.Идентификатор2 <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВТ_Ответственные.Source,
		|	ВТ_Ответственные.Идентификатор1,
		|	ВТ_Ответственные.Идентификатор2,
		|	ИдентификаторыДляНотификацийSO.SalesOrder,
		|	ВТ_Ответственные.Responsible
		|ИЗ
		|	ВТ_Ответственные КАК ВТ_Ответственные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИдентификаторыДляНотификацийSO КАК ИдентификаторыДляНотификацийSO
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Исключения КАК ВТ_Исключения
		|			ПО ИдентификаторыДляНотификацийSO.Source = ВТ_Исключения.Source
		|				И ИдентификаторыДляНотификацийSO.Идентификатор1 = ВТ_Исключения.Идентификатор1
		|				И ИдентификаторыДляНотификацийSO.Идентификатор2 = ВТ_Исключения.Идентификатор2
		|		ПО ВТ_Ответственные.Source = ИдентификаторыДляНотификацийSO.Source
		|			И ВТ_Ответственные.Идентификатор1 = ИдентификаторыДляНотификацийSO.Идентификатор1
		|			И (ВТ_Ответственные.Идентификатор2 = НЕОПРЕДЕЛЕНО
		|				ИЛИ ВТ_Ответственные.Идентификатор2 = """"
		|				ИЛИ ВТ_Ответственные.Идентификатор2 = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
		|ГДЕ
		|	ВТ_Исключения.Source ЕСТЬ NULL 
		|ИТОГИ ПО
		|	Source,
		|	Идентификатор1,
		|	Идентификатор2,
		|	SalesOrder
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(*) КАК КоличествоЭлементовВПорции
		|ИЗ
		|	ВТ_ТекПорция КАК ВТ_ТекПорция";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", Формат(РазмерПорции, "ЧГ="));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаКоличество = МассивРезультатов[4].Выбрать();
	ВыборкаКоличество.Следующий();
	Количество = ВыборкаКоличество.КоличествоЭлементовВПорции;
	
	ВыборкаSource = МассивРезультатов[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НЗ = РегистрыСведений.SalesOrderResponsibles.СоздатьНаборЗаписей();
	
	Пока ВыборкаSource.Следующий() Цикл
		
		ВыборкаИдентификатор1 = ВыборкаSource.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаИдентификатор1.Следующий() Цикл
			
			ВыборкаИдентификатор2 = ВыборкаИдентификатор1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаИдентификатор2.Следующий() Цикл
				
				ВыборкаSalesOrder = ВыборкаИдентификатор2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаSalesOrder.Следующий() Цикл
					
					Если Не ЗначениеЗаполнено(ВыборкаSalesOrder.SalesOrder) Тогда
						Продолжить;
					КонецЕсли;
					
					НЗ.Очистить();
					НЗ.Отбор.SalesOrder.Установить(ВыборкаSalesOrder.SalesOrder);
					
					ВыборкаДетальныеЗаписи = ВыборкаSalesOrder.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						
						ЗаписьНабора = НЗ.Добавить();
						ЗаписьНабора.SalesOrder = ВыборкаДетальныеЗаписи.SalesOrder;
						ЗаписьНабора.ResponsibleAR = ВыборкаДетальныеЗаписи.Responsible;
						
					КонецЦикла;
					
					НЗ.Записать(Истина);
					
				КонецЦикла;
				
				Удалить(ВыборкаИдентификатор2.Source, ВыборкаИдентификатор2.Идентификатор1, ВыборкаИдентификатор2.Идентификатор2);
				
			КонецЦикла;
			
		КонецЦикла;
		
		//ОбработатьЭлементОчереди(
		//	Выборка.Source,
		//	Выборка.Идентификатор1,
		//	Выборка.Идентификатор2,
		//	Выборка.SalesOrder,
		//	Выборка.Responsible);
		
	КонецЦикла;
	
	Возврат Количество;
	
КонецФункции

// Обрабатывает обновление прав по указанному элементу очереди и удаляет его 
// из очереди обновления
//Процедура ОбработатьЭлементОчереди(Source, Идентификатор1,
//			Идентификатор2, SalesOrder, Responsible) Экспорт
//	
//	Попытка
//		
//		
//	Исключение
//		
//		ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
//		
//		ОписаниеОшибки = ОписаниеОшибки + Символы.ПС
//			+ "Source = " + Source + Символы.ПС
//			+ "Идентификатор1 = " + Идентификатор1 + Символы.ПС
//			+ "Идентификатор2 = " + Идентификатор2 + Символы.ПС
//			+ "SalesOrder = " + SalesOrder + Символы.ПС
//			+ "Responsible = " + Responsible;
//		
//		ЗаписьЖурналаРегистрации(
//			НСтр("ru = 'Права доступа'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
//			УровеньЖурналаРегистрации.Ошибка,
//			,
//			,
//			ОписаниеОшибки);
//			
//	КонецПопытки;
//	
//	Удалить(Source, Идентификатор1, Идентификатор2);
//	
//КонецПроцедуры

#КонецЕсли
