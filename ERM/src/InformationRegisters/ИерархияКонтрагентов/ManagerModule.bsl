#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#Область PowerBI

// Описание
// Выполняет выгрузку данных в Power BI
// Параметры:
// 	Клиент - Ссылка на клиента, по которому нужно выгрузить иерархию
// 	ПараметрыЛогирования - Структура с параметрами для записи логов
// Возвращаемое значение:
// 	Структура - включает поля Результат, Сообщение.
Функция ВыгрузитьДанныеДляPowerBI(Клиент, ПараметрыЛогирования) Экспорт
	
	СтруктураРезультата = Новый Структура("Результат, Сообщение", Ложь, "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИерархияКонтрагентовСрезПоследних.Контрагент КАК Контрагент,
		|	ИерархияКонтрагентовСрезПоследних.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
		|	ИерархияКонтрагентовСрезПоследних.SalesAccount КАК SalesAccount
		|ИЗ
		|	РегистрСведений.ИерархияКонтрагентов.СрезПоследних КАК ИерархияКонтрагентовСрезПоследних
		|ГДЕ
		|	ИерархияКонтрагентовСрезПоследних.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент", Клиент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ГУИДКлиента = Клиент.УникальныйИдентификатор();
	
	НЗ = ВнешниеИсточникиДанных.ERM_BI.Таблицы.dbo_ClientHierarchy.СоздатьНаборЗаписей();
	НЗ.Отбор.ClientID.Установить(ГУИДКлиента);
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ЗаписьНабора = НЗ.Добавить();
		ЗаписьНабора.ClientID = ГУИДКлиента;
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ГоловнойКонтрагент) Тогда
			ЗаписьНабора.ParentClientID = ВыборкаДетальныеЗаписи.ГоловнойКонтрагент.УникальныйИдентификатор();
		Иначе
			ЗаписьНабора.ParentClientID = NULL;
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.SalesAccount) Тогда
			ЗаписьНабора.SalesAccountID = ВыборкаДетальныеЗаписи.SalesAccount.УникальныйИдентификатор();
		Иначе
			ЗаписьНабора.SalesAccountID = NULL;
		КонецЕсли;
		
	КонецЦикла;

	ПараметрыЛогирования.Событие = Перечисления.ТипыСобытийИнтеграцииPowerBI.НачалоЗаписи;
	ПараметрыЛогирования.Комментарий = "Данные по иерархии";
	РегистрыСведений.ЛогВыгрузкиPowerBI.ЗалогироватьСобытие(ПараметрыЛогирования);
	Попытка
		НЗ.Записать();
	Исключение
		СтруктураРезультата.Сообщение = ОписаниеОшибки();
		Возврат СтруктураРезультата;
	КонецПопытки;
	ПараметрыЛогирования.Событие = Перечисления.ТипыСобытийИнтеграцииPowerBI.ОкончаниеЗаписи;
	РегистрыСведений.ЛогВыгрузкиPowerBI.ЗалогироватьСобытие(ПараметрыЛогирования);
	ПараметрыЛогирования.Комментарий = "";
	
	СтруктураРезультата.Результат = Истина;
	Возврат СтруктураРезультата;
	
КонецФункции

// Описание
// Выполняет удаление данных в Power BI
// Параметры:
// 	Клиент - Ссылка на клиента, по которому нужно удалить иерархию
// 	ПараметрыЛогирования - Структура с параметрами для записи логов
// Возвращаемое значение:
// 	Структура - включает поля Результат, Сообщение.
Функция УдалитьДанныеВPowerBI(Клиент, ПараметрыЛогирования) Экспорт
	
	СтруктураРезультата = Новый Структура("Результат, Сообщение", Ложь, "");
	
	ГУИДКлиента = Клиент.УникальныйИдентификатор();
	
	НЗ = ВнешниеИсточникиДанных.ERM_BI.Таблицы.dbo_ClientHierarchy.СоздатьНаборЗаписей();
	НЗ.Отбор.ClientID.Установить(ГУИДКлиента);
	
	ПараметрыЛогирования.Событие = Перечисления.ТипыСобытийИнтеграцииPowerBI.НачалоУдаления;
	ПараметрыЛогирования.Комментарий = "Данные по иерархии";
	РегистрыСведений.ЛогВыгрузкиPowerBI.ЗалогироватьСобытие(ПараметрыЛогирования);
	Попытка
		НЗ.Записать();
	Исключение
		СтруктураРезультата.Сообщение = ОписаниеОшибки();
		Возврат СтруктураРезультата;
	КонецПопытки;
	ПараметрыЛогирования.Событие = Перечисления.ТипыСобытийИнтеграцииPowerBI.ОкончаниеУдаления;
	РегистрыСведений.ЛогВыгрузкиPowerBI.ЗалогироватьСобытие(ПараметрыЛогирования);
	ПараметрыЛогирования.Комментарий = "";
	
	СтруктураРезультата.Результат = Истина;
	Возврат СтруктураРезультата;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли