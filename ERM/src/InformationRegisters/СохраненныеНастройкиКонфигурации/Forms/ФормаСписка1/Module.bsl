#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если НЕ Элемент.ТекущиеДанные.ЭтоГруппа Тогда
		СтандартнаяОбработка = Ложь;
		Ключ = ПолучитьКлючЗаписиРегистраСведений(Элемент.ТекущиеДанные.Настройки);
		ПараметрыФормы = Новый Структура("Ключ", Ключ);
		ПроверитьНаличиеТекущегоОбъектаВРегистре(Элемент.ТекущиеДанные.Настройки);
		ОткрытьФорму("РегистрСведений.rgsСохраненныеНастройкиКонфигурации.ФормаЗаписи", ПараметрыФормы,ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	ОбновлениеДереваЗначений()
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПолучитьДеревоИерархии();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаКлиенте
Функция ПолучитьИдентификаторСтроки(ИмяПоля,КлючСтроки)
	ИдентификаторСтроки = 0;
	КоллекцияЭлементовДерева = ДеревоРеквизит.ПолучитьЭлементы();
	ПрекратитьПоиск = Ложь;
	ОбщегоНазначенияКлиентСервер.ПолучитьИдентификаторСтрокиДереваПоЗначениюПоля(
		ИмяПоля, ИдентификаторСтроки, КоллекцияЭлементовДерева, КлючСтроки, ПрекратитьПоиск);
	Возврат ИдентификаторСтроки;
КонецФункции

&НаСервере
Функция ПолучитьКлючЗаписиРегистраСведений(ИзмерениеЗначение, РегистрСведений = "rgsСохраненныеНастройкиКонфигурации", Измерение = "Настройка")
	Отбор = Новый Структура;
	Отбор.Вставить(Измерение, ИзмерениеЗначение);
	Регистр = РегистрыСведений[РегистрСведений];
	Возврат Регистр.СоздатьКлючЗаписи(Отбор);
КонецФункции

&НаКлиенте
Процедура ОбновлениеДереваЗначений()
	ИмяПоля = "Настройки";
	КлючСтроки = Элементы.ДеревоЗначенийНаФорме.ТекущиеДанные.Настройки;
	ПолучитьДеревоИерархии();
	ИдентификаторСтроки = ПолучитьИдентификаторСтроки(ИмяПоля,КлючСтроки);
	ЭтаФорма.Элементы.ДеревоЗначенийНаФорме.ТекущаяСтрока = ИдентификаторСтроки;
КонецПроцедуры

&НаСервере
Процедура ПроверитьНаличиеТекущегоОбъектаВРегистре(Настройки)
	Структура = Новый Структура;
	Структура.Вставить("Настройка",Настройки);
	Проверка = РегистрыСведений.rgsСохраненныеНастройкиКонфигурации.Выбрать(Структура);
	Если Не Проверка.Следующий() Тогда
		ЗаписатьТекущийОбъектВРегистр(Настройки)
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьТекущийОбъектВРегистр(Настройки)
	Запись = РегистрыСведений.rgsСохраненныеНастройкиКонфигурации.СоздатьМенеджерЗаписи();
	Запись.Настройка = Настройки;
	Запись.Записать();
КонецПроцедуры

&НаСервере
Процедура ПолучитьДеревоИерархии()
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	rgsНастройкиКонфигурации.Ссылка КАК Настройки,
	               |	ЕСТЬNULL(rgsСохраненныеНастройкиКонфигурации.Значение, """") КАК Значение,
	               |	rgsНастройкиКонфигурации.ЭтоГруппа КАК ЭтоГруппа
	               |ИЗ
	               |	ПланВидовХарактеристик.rgsНастройкиКонфигурации КАК rgsНастройкиКонфигурации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.rgsСохраненныеНастройкиКонфигурации КАК rgsСохраненныеНастройкиКонфигурации
	               |		ПО (rgsСохраненныеНастройкиКонфигурации.Настройка = rgsНастройкиКонфигурации.Ссылка)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Настройки ИЕРАРХИЯ
	               |АВТОУПОРЯДОЧИВАНИЕ";
	Результат = Запрос.Выполнить();
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗначениеВРеквизитФормы(Дерево, "ДеревоРеквизит");
КонецПроцедуры
#КонецОбласти



