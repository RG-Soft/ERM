
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Запись.Период = РГСофт.ПолучитьДатуСервера();
	Если Не ЗначениеЗаполнено(User) Тогда
		User = Пользователи.ТекущийПользователь();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ТолькоПросмотр = Истина;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ТолькоПросмотр = Истина;
	ЭтаФорма.ТолькоПросмотр = Истина;
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Problem) Тогда
		
		ТекПроблема = ТекущийОбъект.Problem.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТекПроблема, , "SLBAssignedTo");
		ЗначениеВРеквизитФормы(ТекПроблема.SLBAssignedTo.Выгрузить(), "SLBAssignedTo");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СтруктураРеквизитовПроблемы = Новый Структура("Дата, Invoice, User, Status, ConfirmedBy, CustomerRepresentative, CustomerInputDetails, Comment, CustInputDate, ForecastDate, RemedialWorkPlan, RWDTargetDate, SLBAssignedTo");
	ЗаполнитьЗначенияСвойств(СтруктураРеквизитовПроблемы, ЭтотОбъект);
	СтруктураРеквизитовПроблемы.Дата = ТекущийОбъект.Период;
	СтруктураРеквизитовПроблемы.Invoice = ТекущийОбъект.Invoice;
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Problem) Тогда
		РегистрыСведений.InvoiceComments.ПерезаполнитьРеквизитыInvoiceProblem(ТекущийОбъект.Problem, СтруктураРеквизитовПроблемы);
	Иначе
		ТекущийОбъект.Problem = РегистрыСведений.InvoiceComments.СоздатьInvoiceProblem(СтруктураРеквизитовПроблемы);
	КонецЕсли;
	
КонецПроцедуры
