#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Удаляет набор записей в регистре по переданным значениям структуры.
//
// Параметры:
//  СтруктураЗаписи - Структура - структура, по значениям которой необходимо удалить набор записей.
// 
Процедура УдалитьЗапись(СтруктураЗаписи) Экспорт
	
	ОбменДаннымиСервер.УдалитьНаборЗаписейВРегистреСведений(СтруктураЗаписи, "СостоянияОбменовДанными");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура добавляет запись в регистр по переданным значениям структуры.
Процедура ДобавитьЗапись(СтруктураЗаписи) Экспорт
	
	Если ОбщегоНазначенияПовтИсп.РазделениеВключено()
		И ОбщегоНазначенияПовтИсп.ДоступноИспользованиеРазделенныхДанных() Тогда
		
		ОбменДаннымиСервер.ДобавитьЗаписьВРегистрСведений(СтруктураЗаписи, "СостоянияОбменовДаннымиОбластейДанных");
	Иначе
		ОбменДаннымиСервер.ДобавитьЗаписьВРегистрСведений(СтруктураЗаписи, "СостоянияОбменовДанными");		
		//{ RGS AArsentev 08.11.2016
		Если СтруктураЗаписи.РезультатВыполненияОбмена <> Перечисления.РезультатыВыполненияОбмена.Выполнено Тогда
			ОповеститьАдминистраторовСистемыОНеудачномОбмене(СтруктураЗаписи);		
		КонецЕсли;
		//} RGS AArsentev 08.11.2016
	КонецЕсли;
	
КонецПроцедуры

//{ RGS AArsentev 08.11.2016
Процедура ОповеститьАдминистраторовСистемыОНеудачномОбмене(СтруктураЗаписи)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГруппыДоступаПользователи.Пользователь КАК Пользователь
	|ПОМЕСТИТЬ ПользователиИзГруппыДоступа
	|ИЗ
	|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
	|ГДЕ
	|	ГруппыДоступаПользователи.Ссылка = ЗНАЧЕНИЕ(Справочник.ГруппыДоступа.Администраторы)
	|	И ГруппыДоступаПользователи.Пользователь ССЫЛКА Справочник.Пользователи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыДоступаПользователи.Пользователь
	|ПОМЕСТИТЬ ГруппыПользователей
	|ИЗ
	|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
	|ГДЕ
	|	ГруппыДоступаПользователи.Ссылка = ЗНАЧЕНИЕ(Справочник.ГруппыДоступа.Администраторы)
	|	И ГруппыДоступаПользователи.Пользователь ССЫЛКА Справочник.ГруппыПользователей
	|	И НЕ ГруппыДоступаПользователи.Пользователь.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыПользователейСостав.Пользователь
	|ПОМЕСТИТЬ ПользователиИзГруппДоступаИПользователей
	|ИЗ
	|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	|ГДЕ
	|	ГруппыПользователейСостав.Ссылка В
	|			(ВЫБРАТЬ
	|				ГруппыПользователей.Пользователь
	|			ИЗ
	|				ГруппыПользователей КАК ГруппыПользователей)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПользователиИзГруппыДоступа.Пользователь
	|ИЗ
	|	ПользователиИзГруппыДоступа КАК ПользователиИзГруппыДоступа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПользователиКонтактнаяИнформация.Ссылка.Представление КАК Представление,
	|	ПользователиКонтактнаяИнформация.Представление КАК Адрес
	|ИЗ
	|	Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация
	|ГДЕ
	|	ПользователиКонтактнаяИнформация.Ссылка В
	|			(ВЫБРАТЬ
	|				ПользователиИзГруппДоступаИПользователей.Пользователь
	|			ИЗ
	|				ПользователиИзГруппДоступаИПользователей КАК ПользователиИзГруппДоступаИПользователей)
	|	И ПользователиКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивРассылки = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		РазобраннаяСтрока = ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСПочтовымиАдресами(ВыборкаДетальныеЗаписи.Адрес);
		Для каждого Кому Из РазобраннаяСтрока Цикл
			Кому.Вставить("Представление", ВыборкаДетальныеЗаписи.Представление);
			МассивРассылки.Добавить(Кому);
		КонецЦикла; 
		
	КонецЦикла;
	
	Если МассивРассылки.Количество() Тогда
		
		ПараметрыПисьма = Новый Структура;
		Если СтруктураЗаписи.ДействиеПриОбмене = Перечисления.ДействияПриОбмене.ЗагрузкаДанных Тогда
			Действие = "загрузке";
		Иначе
			Действие = "выгрузке";
		КонецЕсли;
		ПараметрыПисьма.Вставить("Тема", "Результат выполнения обмена между базами ERM - " + СтруктураЗаписи.УзелИнформационнойБазы + " при " + Действие);
		
		ПараметрыПисьма.Вставить("Кому", МассивРассылки);
		Если СтруктураЗаписи.Свойство("СообщениеОбОшибкеДляАдминистратора") Тогда
			СообщениеОбОшибкеДляАдминистратора = СтруктураЗаписи.СообщениеОбОшибкеДляАдминистратора;
		Иначе
			СообщениеОбОшибкеДляАдминистратора = "";
		КонецЕсли;
		ПараметрыПисьма.Вставить("Тело", "Обмен между базами ERM - " + СтруктураЗаписи.УзелИнформационнойБазы  + " при " + Действие + " вернул результат выполнения - """ + СтруктураЗаписи.РезультатВыполненияОбмена + """" + Символы.ПС + СообщениеОбОшибкеДляАдминистратора);
		
		//РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись(), ПараметрыПисьма); - пока нет учетки для рассылки
		
	КонецЕсли; 
КонецПроцедуры //} RGS AArsentev 08.11.2016

#КонецОбласти

#КонецЕсли