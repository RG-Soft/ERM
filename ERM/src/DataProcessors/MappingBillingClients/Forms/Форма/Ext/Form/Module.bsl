
&НаСервере
Процедура СохранитьСоответствияНаСервере()
	
	НЗ = РегистрыСведений.ПубличныеИдентификаторыСинхронизируемыхОбъектов.СоздатьНаборЗаписей();
	НЗ.Отбор.УзелИнформационнойБазы.Установить(УзелОбмена);
	
	Для каждого СтрокаТаблицы Из UnmappedData Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ERMObject) Тогда
			
			НЗ.Очистить();
			
			НЗ.Отбор.Ссылка.Установить(СтрокаТаблицы.ERMObject);
			НЗ.Отбор.Идентификатор.Установить(СтрокаТаблицы.GUID);
			
			ЗаписьНабора = НЗ.Добавить();
			ЗаписьНабора.УзелИнформационнойБазы = УзелОбмена;
			ЗаписьНабора.Ссылка = СтрокаТаблицы.ERMObject;
			ЗаписьНабора.Идентификатор = СтрокаТаблицы.GUID;
			
			НЗ.Записать(Ложь);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПолучитьДанныеДляСопоставленияНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьСоответствия(Команда)
	СохранитьСоответствияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеДляСопоставленияНаСервере()
	
	WSСсылка = WSСсылки.MappingBillingClients;
	
	ФабрикаXDTOERM = WSСсылка.ПолучитьWSОпределения().ФабрикаXDTO;
	
	WSПрокси = Обработки.MappingBillingClients.СоздатьWSПрокси(Неопределено, WSСсылка);
	
	Попытка
		СтруктураВозвратаСпискаКлиентов = WSПрокси.GetClientsList();
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецПопытки;
	
	ТаблицаКлиентовБиллинга = Новый ТаблицаЗначений;
	ТаблицаКлиентовБиллинга.Колонки.Добавить("ERP_ID", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(15)));
	ТаблицаКлиентовБиллинга.Колонки.Добавить("GUID", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(36)));
	ТаблицаКлиентовБиллинга.Колонки.Добавить("ИНН", Новый ОписаниеТипов("Строка"));
	ТаблицаКлиентовБиллинга.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка"));
	ТаблицаКлиентовБиллинга.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	
	Для каждого СтрокаСпискаКлиентовXDTO Из СтруктураВозвратаСпискаКлиентов.Строка Цикл
		
		ЗаполнитьЗначенияСвойств(ТаблицаКлиентовБиллинга.Добавить(), СтрокаСпискаКлиентовXDTO);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаКлиентовБиллинга.ERP_ID КАК ERP_ID,
	|	ТаблицаКлиентовБиллинга.GUID КАК GUID,
	|	ТаблицаКлиентовБиллинга.ИНН,
	|	ТаблицаКлиентовБиллинга.Код,
	|	ТаблицаКлиентовБиллинга.Наименование
	|ПОМЕСТИТЬ ВТ_КлиентыБиллинга
	|ИЗ
	|	&ТаблицаКлиентовБиллинга КАК ТаблицаКлиентовБиллинга
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	GUID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КлиентыБиллинга.ERP_ID,
	|	ВТ_КлиентыБиллинга.GUID,
	|	ВТ_КлиентыБиллинга.ИНН,
	|	ВТ_КлиентыБиллинга.Код,
	|	ВТ_КлиентыБиллинга.Наименование
	|ПОМЕСТИТЬ ВТ_КлиентыБиллингаНесопоставленные
	|ИЗ
	|	ВТ_КлиентыБиллинга КАК ВТ_КлиентыБиллинга
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПубличныеИдентификаторыСинхронизируемыхОбъектов КАК ПубличныеИдентификаторыСинхронизируемыхОбъектов
	|		ПО ВТ_КлиентыБиллинга.GUID = ПубличныеИдентификаторыСинхронизируемыхОбъектов.Идентификатор
	|			И (ПубличныеИдентификаторыСинхронизируемыхОбъектов.УзелИнформационнойБазы = &УзелОбмена)
	|ГДЕ
	|	ПубличныеИдентификаторыСинхронизируемыхОбъектов.Ссылка ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипСоответствия,
	|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника,
	|	МАКСИМУМ(НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_МаксимальныеДаты
	|ИЗ
	|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КлиентыБиллингаНесопоставленные КАК ВТ_КлиентыБиллингаНесопоставленные
	|		ПО НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Идентификатор = ВТ_КлиентыБиллингаНесопоставленные.ERP_ID
	|ГДЕ
	|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипОбъектаВнешнейСистемы = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовВнешнихСистем.Client)
	|
	|СГРУППИРОВАТЬ ПО
	|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипСоответствия,
	|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Период,
	|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Идентификатор,
	|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипСоответствия,
	|	НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника
	|ПОМЕСТИТЬ ВТ_МэппингERM
	|ИЗ
	|	РегистрСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами КАК НастройкаСинхронизацииОбъектовСВнешнимиСистемами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_МаксимальныеДаты КАК ВТ_МаксимальныеДаты
	|		ПО НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Период = ВТ_МаксимальныеДаты.Период
	|			И НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ТипСоответствия = ВТ_МаксимальныеДаты.ТипСоответствия
	|			И НастройкаСинхронизацииОбъектовСВнешнимиСистемами.ОбъектПриемника = ВТ_МаксимальныеДаты.ОбъектПриемника
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КлиентыБиллингаНесопоставленные.ERP_ID,
	|	ВТ_КлиентыБиллингаНесопоставленные.GUID,
	|	ВТ_КлиентыБиллингаНесопоставленные.ИНН,
	|	ВТ_КлиентыБиллингаНесопоставленные.Код,
	|	ВТ_КлиентыБиллингаНесопоставленные.Наименование,
	|	ВТ_МэппингERM.ОбъектПриемника,
	|	ВТ_МэппингERM.ТипСоответствия
	|ИЗ
	|	ВТ_КлиентыБиллингаНесопоставленные КАК ВТ_КлиентыБиллингаНесопоставленные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МэппингERM КАК ВТ_МэппингERM
	|		ПО (ВЫБОР
	|				КОГДА ВТ_КлиентыБиллингаНесопоставленные.ERP_ID = ВТ_МэппингERM.Идентификатор
	|						И ВТ_МэппингERM.ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.Lawson)
	|					ТОГДА ИСТИНА
	|				КОГДА ВТ_КлиентыБиллингаНесопоставленные.ERP_ID = ВТ_МэппингERM.Идентификатор
	|						И ВТ_МэппингERM.ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.OracleMI)
	|					ТОГДА ИСТИНА
	|				КОГДА ВТ_КлиентыБиллингаНесопоставленные.ERP_ID = ВТ_МэппингERM.Идентификатор
	|						И ВТ_МэппингERM.ТипСоответствия = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.OracleSMITH)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КлиентыБиллинга.ERP_ID,
	|	ВТ_КлиентыБиллинга.GUID,
	|	ВТ_КлиентыБиллинга.ИНН,
	|	ВТ_КлиентыБиллинга.Код,
	|	ВТ_КлиентыБиллинга.Наименование,
	|	ПубличныеИдентификаторыСинхронизируемыхОбъектов.Ссылка
	|ИЗ
	|	ВТ_КлиентыБиллинга КАК ВТ_КлиентыБиллинга
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПубличныеИдентификаторыСинхронизируемыхОбъектов КАК ПубличныеИдентификаторыСинхронизируемыхОбъектов
	|		ПО ВТ_КлиентыБиллинга.GUID = ПубличныеИдентификаторыСинхронизируемыхОбъектов.Идентификатор
	|			И (ПубличныеИдентификаторыСинхронизируемыхОбъектов.УзелИнформационнойБазы = &УзелОбмена)";
	
	Запрос.УстановитьПараметр("ТаблицаКлиентовБиллинга", ТаблицаКлиентовБиллинга);
	Запрос.УстановитьПараметр("УзелОбмена", УзелОбмена);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаНесопоставленныеДанные = МассивРезультатов[4].Выбрать();
	
	UnmappedData.Очистить();
	
	Пока ВыборкаНесопоставленныеДанные.Следующий() Цикл
		
		НоваяСтрока = UnmappedData.Добавить();
		НоваяСтрока.ERP_ID = ВыборкаНесопоставленныеДанные.ERP_ID;
		НоваяСтрока.Code = ВыборкаНесопоставленныеДанные.Код;
		НоваяСтрока.Description = ВыборкаНесопоставленныеДанные.Наименование;
		НоваяСтрока.ITN = ВыборкаНесопоставленныеДанные.ИНН;
		НоваяСтрока.GUID = ВыборкаНесопоставленныеДанные.GUID;
		НоваяСтрока.ERMObject = ВыборкаНесопоставленныеДанные.ОбъектПриемника;
		НоваяСтрока.Source = ВыборкаНесопоставленныеДанные.ТипСоответствия;
		
	КонецЦикла;
	
	ВыборкаСопоставленныеДанные = МассивРезультатов[5].Выбрать();
	
	MappedData.Очистить();
	
	Пока ВыборкаСопоставленныеДанные.Следующий() Цикл
		
		НоваяСтрока = MappedData.Добавить();
		НоваяСтрока.ERP_ID = ВыборкаСопоставленныеДанные.ERP_ID;
		НоваяСтрока.Code = ВыборкаСопоставленныеДанные.Код;
		НоваяСтрока.Description = ВыборкаСопоставленныеДанные.Наименование;
		НоваяСтрока.ITN = ВыборкаСопоставленныеДанные.ИНН;
		НоваяСтрока.GUID = ВыборкаСопоставленныеДанные.GUID;
		НоваяСтрока.ERMObject = ВыборкаСопоставленныеДанные.Ссылка;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеДляСопоставления(Команда)
	ПолучитьДанныеДляСопоставленияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УзелОбмена = ПланыОбмена.rgsОбменКлиентамиЧерезУниверсальныйФормат.НайтиПоКоду("BL");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПодобранныеСоответствия(Команда)
	
	ПустаяСсылкаКонтрагента = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	ПустаяСсылкаSource  = ПредопределенноеЗначение("Перечисление.ТипыСоответствий.ПустаяСсылка");
	
	Для каждого СтрокаТаблицы Из UnmappedData Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ERMObject) Тогда
			СтрокаТаблицы.ERMObject = ПустаяСсылкаКонтрагента;
			СтрокаТаблицы.Source = ПустаяСсылкаSource;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
