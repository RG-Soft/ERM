#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция СоздатьWSПрокси(УзелОбмена, WSСсылка) Экспорт
	
	// Анализирует WSСсылку и возвращает настроенный WSПрокси, полученной из этой WSСсылки
	
	URIПространстваИмен = "http://rg-soft.ru/ERM/1.0";
	ИмяСервиса = "MappingClients";
	
	Если WSСсылка = WSСсылки.MappingBillingClients Тогда
		ИмяПорта = "MappingClientsSoap12";
	Иначе
		ВызватьИсключение "Failed to find port for WS reference '" + WSСсылка + "' to query Billing data!";
	КонецЕсли;
	
	НастройкиТранспорта = РегистрыСведений.НастройкиТранспортаОбмена.НастройкиТранспорта(УзелОбмена, Перечисления.ВидыТранспортаСообщенийОбмена.WS);
	
	WSПрокси = WSСсылка.СоздатьWSПрокси(URIПространстваИмен, ИмяСервиса, ИмяПорта);
	WSПрокси.Пользователь = НастройкиТранспорта.WSИмяПользователя;
	WSПрокси.Пароль = НастройкиТранспорта.WSПароль;
	
	Возврат WSПрокси;
	
КонецФункции

Функция ПолучитьОбъектXDTO(ИспользуемаяФабрикаXDTO, URIПространстваИмен, Имя) Экспорт
	
	// Конструирует объект XDTO типа Имя с помощью ФабрикиXDTO и URIПространстваИмен
	ТипПоля = ИспользуемаяФабрикаXDTO.Тип(URIПространстваИмен, Имя);
	Возврат ИспользуемаяФабрикаXDTO.Создать(ТипПоля);
	
КонецФункции

Функция ПолучитьТипОбъектаXDTO(ИспользуемаяФабрикаXDTO, URIПространстваИмен, Имя) Экспорт
	
	Возврат ИспользуемаяФабрикаXDTO.Тип(URIПространстваИмен, Имя);
	
КонецФункции

#КонецЕсли
