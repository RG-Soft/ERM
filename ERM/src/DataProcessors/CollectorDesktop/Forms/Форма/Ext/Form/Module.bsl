
&НаКлиенте
Процедура AddStatus(Команда)
	
	Если ОтмеченныеИнвойсы.Количество() > 0 Тогда
		
		ПоказатьВопрос(Новый ОписаниеОповещения("AddStatusForSelectedInvoices", ЭтотОбъект),
			"Add status for all selected invoices?", РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		InvoicesТекущиеДанные = Элементы.Invoices.ТекущиеДанные;
		
		Если InvoicesТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ЗначенияЗаполнения = Новый Структура("Invoice", InvoicesТекущиеДанные.Invoice);
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		ПараметрыФормы.Вставить("Период", ТекущаяДата());
		
		ОткрытьФорму("РегистрСведений.InvoiceComments.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура AddStatusForSelectedInvoices(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СписокИнвойсов", ОтмеченныеИнвойсы);
		
		ОткрытьФорму("Обработка.CollectorDesktop.Форма.ФормаСтатусаИнвойса", ПараметрыФормы, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура PeriodПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Invoices, "ПериодОстатков", Period, ЗначениеЗаполнено(Period));
	
КонецПроцедуры

&НаКлиенте
Процедура SourceПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Invoices, "Source", Source, , , ЗначениеЗаполнено(Source));
	
КонецПроцедуры

&НаКлиенте
Процедура InvoicesВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	InvoicesТекущиеДанные = Элементы.Invoices.ТекущиеДанные;
	
	Если InvoicesТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Документ.Invoice.Форма.ФормаДокумента", Новый Структура("Ключ", InvoicesТекущиеДанные.Invoice));
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Invoices, "МассивОтмеченныхИнвойсов", ОтмеченныеИнвойсы);
	
КонецПроцедуры

&НаКлиенте
Процедура InvoicesПриАктивизацииЯчейки(Элемент)
	
	Если Элемент.ТекущийЭлемент.Имя <> "InvoicesПометка" Тогда
		Возврат;
	КонецЕсли;
	
	InvoicesТекущиеДанные = Элементы.Invoices.ТекущиеДанные;
	
	Если InvoicesТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементСписка = ОтмеченныеИнвойсы.НайтиПоЗначению(InvoicesТекущиеДанные.Invoice);
	Если ЭлементСписка = Неопределено Тогда
		ОтмеченныеИнвойсы.Добавить(InvoicesТекущиеДанные.Invoice);
	Иначе
		ОтмеченныеИнвойсы.Удалить(ЭлементСписка);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Invoices, "МассивОтмеченныхИнвойсов", ОтмеченныеИнвойсы.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаКлиенте
Процедура GeoMarketПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Invoices, "GeoMarket", GeoMarket, ЗначениеЗаполнено(GeoMarket));
	
КонецПроцедуры

&НаКлиенте
Процедура ClientПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Invoices, "Client", Client, , , ЗначениеЗаполнено(Client));
	
КонецПроцедуры

&НаКлиенте
Процедура CompanyПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Invoices, "Company", Company, , , ЗначениеЗаполнено(Company));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для каждого ТекВыделеннаяСтрока Из Элементы.Invoices.ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.Invoices.ДанныеСтроки(ТекВыделеннаяСтрока);
		
		ЭлементСписка = ОтмеченныеИнвойсы.НайтиПоЗначению(ДанныеСтроки.Invoice);
		Если ЭлементСписка = Неопределено Тогда
			ОтмеченныеИнвойсы.Добавить(ДанныеСтроки.Invoice);
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Invoices, "МассивОтмеченныхИнвойсов", ОтмеченныеИнвойсы.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	//Для каждого ТекВыделеннаяСтрока Из Элементы.Invoices.ВыделенныеСтроки Цикл
	//	
	//	ДанныеСтроки = Элементы.Invoices.ДанныеСтроки(ТекВыделеннаяСтрока);
	//	
	//	ЭлементСписка = ОтмеченныеИнвойсы.НайтиПоЗначению(ДанныеСтроки.Invoice);
	//	Если ЭлементСписка <> Неопределено Тогда
	//		ОтмеченныеИнвойсы.Удалить(ЭлементСписка);
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
	ОтмеченныеИнвойсы.Очистить();
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Invoices, "МассивОтмеченныхИнвойсов", ОтмеченныеИнвойсы.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаКлиенте
Процедура AccountПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Invoices, "Account", Account, , , ЗначениеЗаполнено(Account));
	
КонецПроцедуры


