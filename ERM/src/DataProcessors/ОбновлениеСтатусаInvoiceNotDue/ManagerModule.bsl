&НаСервере
Процедура ЗаполнитьСтатусInvoiceNotDue() Экспорт 
	
	//Если ДатаОстатков = '00010101' Тогда
	//	ДатаОстатков = НачалоДня(ТекущаяДата());
	//КонецЕсли;
	//
	//Если ДатаКомментария = '00010101' Тогда
	//	ДатаКомментария = НачалоДня(ТекущаяДата());
	//КонецЕсли;
	
	Дата = НачалоДня(ТекущаяДата());
	Дата1980 = '19800101';
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	BilledARОстатки.Invoice
		|ИЗ
		|	РегистрНакопления.BilledAR.Остатки(&Дата, ) КАК BilledARОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.InvoiceComments КАК InvoiceComments
		|		ПО BilledARОстатки.Invoice = InvoiceComments.Invoice
		|ГДЕ
		|	InvoiceComments.Invoice ЕСТЬ NULL 
		|	И BilledARОстатки.Invoice.DueDateTo > &Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	BilledARОстатки.Invoice КАК Invoice,
		|	BilledARОстатки.Invoice.DueDateTo КАК DueDateTo
		|ИЗ
		|	РегистрНакопления.BilledAR.Остатки(&Дата, ) КАК BilledARОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.InvoiceComments.СрезПоследних(, ) КАК InvoiceCommentsСрезПоследних
		|		ПО BilledARОстатки.Invoice = InvoiceCommentsСрезПоследних.Invoice
		|ГДЕ
		|	BilledARОстатки.Invoice.DueDateTo <= &Дата
		|	И BilledARОстатки.Invoice.DueDateTo <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|	И InvoiceCommentsСрезПоследних.Problem.Status = ЗНАЧЕНИЕ(перечисление.InvoiceStatus.InvoiceNotDue)";
	
	//Запрос.УстановитьПараметр("Дата", ДатаОстатков);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	//РезультатЗапроса = Запрос.Выполнить();
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	User = ПараметрыСеанса.ТекущийПользователь;
	
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаУстановитьСтатус = МассивРезультатов[0].Выбрать();
	ВыборкаУстановитьПустойСтатус = МассивРезультатов[1].Выбрать();
	
	НаборЗаписей = РегистрыСведений.InvoiceComments.СоздатьНаборЗаписей();
	
	Пока ВыборкаУстановитьСтатус.Следующий() Цикл
		
		НаборЗаписей.Очистить();
		НаборЗаписей.Отбор.Invoice.Установить(ВыборкаУстановитьСтатус.Invoice);
		
		СтруктураРеквизитовПроблемы = Новый Структура("Дата, Invoice, User, Status, ConfirmedBy, CustomerRepresentative, CustomerInputDetails, Comment, CustInputDate, ForecastDate, RemedialWorkPlan, RWDTargetDate, SLBAssignedTo");
		СтруктураРеквизитовПроблемы.Дата = Дата1980;
		СтруктураРеквизитовПроблемы.Invoice = ВыборкаУстановитьСтатус.Invoice;
		СтруктураРеквизитовПроблемы.Status = Перечисления.InvoiceStatus.InvoiceNotDue;
		СтруктураРеквизитовПроблемы.User = User;
		СтруктураРеквизитовПроблемы.Comment = "Регламент по актуализации статуса Invoice Not Due.";
		
		НачатьТранзакцию();
		
		Problem = РегистрыСведений.InvoiceComments.СоздатьInvoiceProblem(СтруктураРеквизитовПроблемы);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период = Дата1980;
		НоваяЗапись.Invoice = ВыборкаУстановитьСтатус.Invoice;
		//НоваяЗапись.Status = Перечисления.InvoiceStatus.InvoiceNotDue;
		//НоваяЗапись.User = User;
		НоваяЗапись.Problem = Problem;
		НаборЗаписей.Записать(Ложь);
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
	Пока ВыборкаУстановитьПустойСтатус.Следующий() Цикл
		
		НаборЗаписей.Очистить();
		НаборЗаписей.Отбор.Invoice.Установить(ВыборкаУстановитьПустойСтатус.Invoice);
		
		СтруктураРеквизитовПроблемы = Новый Структура("Дата, Invoice, User, Status, ConfirmedBy, CustomerRepresentative, CustomerInputDetails, Comment, CustInputDate, ForecastDate, RemedialWorkPlan, RWDTargetDate, SLBAssignedTo");
		СтруктураРеквизитовПроблемы.Дата = ВыборкаУстановитьПустойСтатус.DueDateTo;
		СтруктураРеквизитовПроблемы.Invoice = ВыборкаУстановитьПустойСтатус.Invoice;
		СтруктураРеквизитовПроблемы.Status = Перечисления.InvoiceStatus.ПустаяСсылка();
		СтруктураРеквизитовПроблемы.User = User;
		СтруктураРеквизитовПроблемы.Comment = "Регламент по актуализации статуса Invoice Not Due.";
		
		НачатьТранзакцию();
		
		Problem = РегистрыСведений.InvoiceComments.СоздатьInvoiceProblem(СтруктураРеквизитовПроблемы);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период = ВыборкаУстановитьПустойСтатус.DueDateTo;
		НоваяЗапись.Invoice = ВыборкаУстановитьПустойСтатус.Invoice;
		//НоваяЗапись.Status = Перечисления.InvoiceStatus.InvoiceNotDue;
		//НоваяЗапись.User = User;
		НоваяЗапись.Problem = Problem;
		НаборЗаписей.Записать(Ложь);
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
КонецПроцедуры
