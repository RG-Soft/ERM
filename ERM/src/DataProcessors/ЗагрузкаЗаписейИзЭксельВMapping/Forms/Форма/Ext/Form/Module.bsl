#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПерваяСтрокаДанных = 2;
	ИменаКолонокВПервойСтроке = Истина;

	
	СтруктураКолонок.Очистить();
	СтрокаТЗ = СтруктураКолонок.Добавить();
	СтрокаТЗ.ИмяПоля = "UID";
	СтрокаТЗ.ИмяКолонки = "UID";
	СтрокаТЗ.НомерКолонки = 1;
	

	СтрокаТЗ = СтруктураКолонок.Добавить();
	СтрокаТЗ.ИмяПоля = "CustomerDesc";
	СтрокаТЗ.ИмяКолонки = "CustomerDesc";
	СтрокаТЗ.НомерКолонки = 2;
	
	СтрокаТЗ = СтруктураКолонок.Добавить();
	СтрокаТЗ.ИмяПоля = "CRM";
	СтрокаТЗ.ИмяКолонки = "CRMID";
	СтрокаТЗ.НомерКолонки = 3;
	
	СтрокаТЗ = СтруктураКолонок.Добавить();
	СтрокаТЗ.ИмяПоля = "HOBs";
	СтрокаТЗ.ИмяКолонки = "INN";
	СтрокаТЗ.НомерКолонки = 4;
	
	СтрокаТЗ = СтруктураКолонок.Добавить();
	СтрокаТЗ.ИмяПоля = "OracleSmith";
	СтрокаТЗ.ИмяКолонки = "SmithID";
	СтрокаТЗ.НомерКолонки = 5;
	
	СтрокаТЗ = СтруктураКолонок.Добавить();
	СтрокаТЗ.ИмяПоля = "OracleMI";
	СтрокаТЗ.ИмяКолонки = "MiID";
	СтрокаТЗ.НомерКолонки = 6;
	
	СтрокаТЗ = СтруктураКолонок.Добавить();
	СтрокаТЗ.ИмяПоля = "Lawson";
	СтрокаТЗ.ИмяКолонки = "Lawson_ID";
	СтрокаТЗ.НомерКолонки = 7;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АдресВХранилище = "";
	ВыбранноеИмяФайла = "";
	
	ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения("ИмяФайлаНачалоВыбораЗавершение", ЭтотОбъект);
	
	НачатьПомещениеФайла(ОписаниеОповещенияОЗавершении, АдресВХранилище,,, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбораЗавершение(Результат, АдресВХранилище, ВыбранноеИмяФайла, ДополнительныеПараметры)Экспорт
	
	Если Результат Тогда
		
		Файл = Новый Файл(ВыбранноеИмяФайла);
		
		ИмяФайла = Файл.Имя;
		АдресФайлаВХранилище = АдресВХранилище;
		Модифицированность = Истина;
		
		ЗаполнитьСписокЛистовЭкселя(Истина);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьНумирациюКолонокПриИзменении(Элемент)
	Элементы.СтруктураКолонок.Видимость = ПоказыватьНумерациюКолонок;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПрочитатьФайл(Команда)
	ПрочитатьФайлНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВРегистр(Команда)
	ДобавитьВРегистрНаСервере();
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьФайлНаСервере()
	
	ТаблицаДанных.Очистить();
	
	СтруктураПараметров = Новый Структура("ЛистФайла, ИменаКолонокВПервойСтроке, ПерваяСтрокаДанных, ПоследняяСтрокаДанных");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, ЭтотОбъект);
	СтруктураПараметров.Вставить("СтруктураКолонок", РеквизитФормыВЗначение("СтруктураКолонок"));
	СтруктураПараметров.Вставить("ТаблицаДанных", РеквизитФормыВЗначение("ТаблицаДанных"));
	СтруктураПараметров.Вставить("ЛистФайла", ЛистФайла);
	
	ДанныеДляЗаполнения = Новый Структура(); 
	ТекстОшибки = "";
	
	ПутьКФайлу = ПолучитьИмяВременногоФайла("xlsx");
	ФайлЭксель = ПолучитьИзВременногоХранилища(АдресФайлаВХранилище);
	ФайлЭксель.Записать(ПутьКФайлу);
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	rgsОбщегоНазначения.ВыгрузитьЭксельВТаблицуДанных(ПутьКФайлу, ТаблицаДанных, ДанныеДляЗаполнения, АдресХранилища, СтруктураПараметров);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокЛистовЭкселя(ЗаполнитьЛист = Ложь)
	
	СписокЛистов = Новый Массив;
	
	Если ЭтоАдресВременногоХранилища(АдресФайлаВХранилище) Тогда
		ФайлЭксель = ПолучитьИзВременногоХранилища(АдресФайлаВХранилище);
	Иначе
		ОбъектДляСервера = РеквизитФормыВЗначение("Объект");
		ФайлЭксель = ОбъектДляСервера.ИсточникДанных.Получить();
	КонецЕсли;
	
	Если ФайлЭксель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПутьКФайлу = ПолучитьИмяВременногоФайла("xlsx");
	ФайлЭксель.Записать(ПутьКФайлу);
	
	Connection = Новый COMОбъект("ADODB.Connection");
	СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + СокрЛП(ПутьКФайлу) + ";Extended Properties=""Excel 12.0 Xml;HDR=" + ?(ИменаКолонокВПервойСтроке, "Yes", "No") + """";
	Попытка
		Connection.Open(СтрокаПодключения);
	Исключение
		Попытка
			СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + СокрЛП(ПутьКФайлу) + ";Extended Properties=""Excel 8.0;HDR=" + ?(ИменаКолонокВПервойСтроке, "Yes", "No") + """";
			Connection.Open(СтрокаПодключения);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецПопытки;
	
	rs = Новый COMObject("ADODB.RecordSet");
	rs.ActiveConnection = Connection;
	rs = Connection.OpenSchema(20);
	
	Пока rs.EOF() = 0 Цикл
		Если Найти(rs.Fields("TABLE_NAME").Value, "_FilterDatabase") = 0 Тогда
			СписокЛистов.Добавить(rs.Fields("TABLE_NAME").Value);
		КонецЕсли;
		rs.MoveNext();
	КонецЦикла;
	
	rs.Close();
	Connection.Close();
	
	Элементы.ЛистФайла.СписокВыбора.ЗагрузитьЗначения(СписокЛистов);
	
	Если СписокЛистов.Количество() > 0 И ЗаполнитьЛист Тогда
		ЛистФайла = СписокЛистов[0];
	Конецесли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВРегистрНаСервере()
	
	Колонки = Новый Массив;
	Колонки.Добавить("CRM");
	Колонки.Добавить("HOBs");
	Колонки.Добавить("OracleSmith");
	Колонки.Добавить("OracleMI");
	Колонки.Добавить("Lawson");
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
	
		ОбъектПриемникаСуществует = Ложь;
		Массив = Новый Массив;
		
		Для Каждого Колонка Из Колонки Цикл
			Если СтрокаТаблицы[Колонка] <> "" Тогда //проверка записи в регистре
				Отбор = Новый Структура;
				Отбор.Вставить("ТипСоответствия", Перечисления.ТипыСоответствий[Колонка]);
				Отбор.Вставить("ТипОбъектаВнешнейСистемы", Перечисления.ТипыОбъектовВнешнихСистем.Client);
				Отбор.Вставить("Идентификатор", СтрокаТаблицы[Колонка]);
				РесурсыРегистра = РегистрыСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.Получить(ТекущаяДата(),Отбор);
				ОбъектПриемника = РесурсыРегистра.ОбъектПриемника;
				Если Не ЗначениеЗаполнено(ОбъектПриемника) Тогда //Добавление в массив, если такой записи в регистре нет
					Массив.Добавить(Колонка);
				Иначе
					ОбъектПриемникаСуществует = Истина;
					СуществующийКонтрагент = ОбъектПриемника;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Контрагент = ?(ОбъектПриемникаСуществует, СуществующийКонтрагент, СтрокаТаблицы.CustomerDesc);
		
		Если Не ЗначениеЗаполнено(Справочники.Контрагенты.НайтиПоНаименованию(Контрагент)) Тогда 
			КонтрагентЗапись = Справочники.Контрагенты.СоздатьЭлемент();
			КонтрагентЗапись.Наименование = СтрокаТаблицы.CustomerDesc;
			КонтрагентЗапись.ОбменДанными.Загрузка = Истина;
			КонтрагентЗапись.Записать();
		КонецЕсли;
		
		Если Массив.Количество() <> 0 Тогда //Добавление записей из массива
			Для Каждого Элемент Из Массив Цикл
				Запись = РегистрыСведений.НастройкаСинхронизацииОбъектовСВнешнимиСистемами.СоздатьМенеджерЗаписи();
				
				Запись.Идентификатор = СтрокаТаблицы[Элемент];
				Запись.ОбъектПриемника = Справочники.Контрагенты.НайтиПоНаименованию(Контрагент);
				Запись.ТипОбъектаВнешнейСистемы = Перечисления.ТипыОбъектовВнешнихСистем.Client;
				Запись.ТипСоответствия = Перечисления.ТипыСоответствий[Элемент];
				Запись.Период = ТекущаяДата();
				Запись.Записать();
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
