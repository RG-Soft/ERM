
&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

&НаСервере
Функция ОбновитьСправочникПользователейНаСервере(ЗапретитьВыполнениеВФоне = Ложь)
	
	Если RememberCredentials Тогда
		
		// TODO RGS AGorlenko 14.12.2016: переделать поиск по наименованию
		AutoUser = Справочники.Пользователи.НайтиПоНаименованию("AutoUser");
		Если ЗначениеЗаполнено(AutoUser) Тогда
			ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(AutoUser, ИмяПользователяПодключения, "ЛогинДляПодключенияКLDAP");
			ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(AutoUser, ПарольПользователяПодключения, "ПарольДляПодключенияКLDAP");
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("ИмяПользователяПодключения", ИмяПользователяПодключения);
	СтруктураПараметров.Вставить("ПарольПользователяПодключения", ПарольПользователяПодключения);
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() ИЛИ ЗапретитьВыполнениеВФоне Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		Обработки.UpdateLDAPUsers.ОбновитьСправочникLDAPUsers(СтруктураПараметров, АдресХранилища);
		
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
	Иначе
		НаименованиеЗадания = НСтр("ru = 'Update LDAP Users'");
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			УникальныйИдентификатор, 
			"Обработки.UpdateLDAPUsers.ОбновитьСправочникLDAPUsers", 
			СтруктураПараметров, 
			НаименованиеЗадания);
			
		АдресХранилища = Результат.АдресХранилища;
	КонецЕсли;
	
	Если Результат.ЗаданиеВыполнено Тогда
		ОбработатьРезультат();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьСправочникПользователей(Команда)
	
	Результат = ОбновитьСправочникПользователейНаСервере(Истина);
	
	Если НЕ Результат.ЗаданиеВыполнено Тогда
		
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилища       = Результат.АдресХранилища;
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
		
	Иначе
		
		ОбработатьРезультат();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультат()
	
	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	Если СтруктураДанных.Свойство("ОшибкаЗаполнения") Тогда
		ВызватьИсключение СтруктураДанных.ОшибкаЗаполнения;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("LDAP Users catalogue successfully updated");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
				ОбработатьРезультат();
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 
					ПараметрыОбработчикаОжидания.ТекущийИнтервал, Истина);
			КонецЕсли;
		КонецЕсли;	
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	AutoUser = Справочники.Пользователи.НайтиПоНаименованию("AutoUser");
	Если ЗначениеЗаполнено(AutoUser) Тогда
		ПараметрыПодключения = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(AutoUser, "ЛогинДляПодключенияКLDAP, ПарольДляПодключенияКLDAP");
		Если ПараметрыПодключения <> Неопределено Тогда
			ИмяПользователяПодключения = ПараметрыПодключения.ЛогинДляПодключенияКLDAP;
			ПарольПользователяПодключения = ПараметрыПодключения.ПарольДляПодключенияКLDAP;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
