#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ОбновитьСправочникLDAPUsers(СтруктураПараметров, АдресХранилища) Экспорт
	
	СтруктураВозврата = Новый Структура;
	
	ИмяПользователяПодключения = СтруктураПараметров.ИмяПользователяПодключения;
	ПарольПользователяПодключения = СтруктураПараметров.ПарольПользователяПодключения;
	
	КомандаАДО    = Новый COMОбъект("ADODB.Command");
	СоединениеАДО = Новый COMОбъект("ADODB.Connection");
	
	СоединениеАДО.Provider = "ADSDSOObject;User Id=" + ИмяПользователяПодключения + ";Password=" + ПарольПользователяПодключения + ";Encrypt Password=true";
	Попытка
		СоединениеАДО.Open("Active Directory Provider");    
	Исключение
		СтруктураВозврата.Вставить("ОшибкаЗаполнения", "Ошибка при открытии Active Directory Provider: " + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	КомандаАДО.ActiveConnection = СоединениеАДО;
	
	//Получаем имя домена к которому принадлежит данный компьютер 
	Попытка
		RootDSE = ПолучитьCOMОбъект("LDAP://slb.com/RootDSE");
	Исключение
		СтруктураВозврата.Вставить("ОшибкаЗаполнения", "Ошибка ПолучитьCOMОбъект(LDAP://RootDSE): " + ОписаниеОшибки());
		СоединениеАДО.Close();
		Возврат;
	КонецПопытки;
	
	ТекущийДомен = RootDSE.Get("defaultNamingContext");
	
	////Подключаемся к текущему домену
	//Попытка
	//	ОбъектТекущегоДомена = ПолучитьCOMОбъект("LDAP://" + ТекущийДомен); 
	//Исключение
	//	СтруктураВозврата.Вставить("ОшибкаЗаполнения", "Ошибка ПолучитьCOMОбъект "+"LDAP://" + ТекущийДомен+": " + ОписаниеОшибки());
	//	СоединениеАДО.Close();
	//	Возврат;
	//КонецПопытки;
	//
	//ИмяДомена = ОбъектТекущегоДомена.dc;
	
	//Формируем команду получения групп из блока Groups
	КомандаАДО.CommandText = "<LDAP://DIR.slb.com/OU=RU,OU=rca,DC=DIR," + ТекущийДомен + ">" + ";(&(objectClass=top)(objectClass=organizationalUnit));name;onelevel";
	КомандаАДО.Properties("Page Size").Value     = 100;
	КомандаАДО.Properties("Timeout").Value       = 30;
	КомандаАДО.Properties("Cache Results").Value = Ложь;
	
	Попытка
		ВыборкаАДО = КомандаАДО.Execute();  
	Исключение
		СтруктураВозврата.Вставить("ОшибкаЗаполнения", "Ошибка Execute(): " + ОписаниеОшибки());
		СоединениеАДО.Close();
		Возврат;
	КонецПопытки;
	
	НачатьТранзакцию();
	
	//Выводим список групп
	Пока НЕ ВыборкаАДО.EOF Цикл
		
		ТекГруппаДомена = СокрЛП(ВыборкаАДО.Fields("name").Value);
		
		ПапкаПользователей = Справочники.LDAPUsers.НайтиПоНаименованию(ТекГруппаДомена, Истина, Справочники.LDAPUsers.ПустаяСсылка());
		
		Если Не ЗначениеЗаполнено(ПапкаПользователей) Тогда
			ПапкаПользователейОбъект = Справочники.LDAPUsers.СоздатьГруппу();
			ПапкаПользователейОбъект.Наименование = ТекГруппаДомена;
			ПапкаПользователейОбъект.Записать();
			ПапкаПользователей = ПапкаПользователейОбъект.Ссылка;
		КонецЕсли;
		
		// получаем пользователей текущей группы
		
		КомандаАДО.CommandText = "<LDAP://DIR.slb.com/ou=Users,OU=" + ТекГруппаДомена + ",OU=RU,OU=rca,DC=DIR," + ТекущийДомен + ">" + ";(&(objectCategory=person)(objectClass=user));sAMAccountName,userAccountControl,displayName,department,mail,telephoneNumber,title;onelevel";
		
		Попытка
			ВыборкаПользователейГруппы = КомандаАДО.Execute();  
		Исключение
			СтруктураВозврата.Вставить("ОшибкаЗаполнения", "Ошибка Execute(): " + ОписаниеОшибки());
			СоединениеАДО.Close();
			Возврат;
		КонецПопытки;
		
		Пока НЕ ВыборкаПользователейГруппы.EOF Цикл
			
			ИмяАккаунта = СокрЛП(ВыборкаПользователейГруппы.Fields("sAMAccountName").Value);
			
			Заблокирован = ВыборкаПользователейГруппы.Fields("userAccountControl").Value = 514 ИЛИ
				ВыборкаПользователейГруппы.Fields("userAccountControl").Value = 546 ИЛИ
				ВыборкаПользователейГруппы.Fields("userAccountControl").Value = 66050;
			
			ТекПользователь = Справочники.LDAPUsers.НайтиПоНаименованию(ИмяАккаунта, Истина);
			
			Если Не ЗначениеЗаполнено(ТекПользователь) Тогда
				
				Если Заблокирован Тогда
					ВыборкаПользователейГруппы.MoveNext();
					Продолжить;
				КонецЕсли;
				
				ТекПользовательОбъект = Справочники.LDAPUsers.СоздатьЭлемент();
				ТекПользовательОбъект.Наименование = ИмяАккаунта;
				
			Иначе
				
				ТекПользовательОбъект = ТекПользователь.ПолучитьОбъект();
				
			КонецЕсли;
			
			Если ТекПользовательОбъект.NotUpdateAutomatically Тогда
				ВыборкаПользователейГруппы.MoveNext();
				Продолжить;
			КонецЕсли;
			
			РГСофтКлиентСервер.УстановитьЗначение(ТекПользовательОбъект.Родитель, ПапкаПользователей);
			РГСофтКлиентСервер.УстановитьЗначение(ТекПользовательОбъект.DisplayName, СокрЛП(ВыборкаПользователейГруппы.Fields("displayName").Value));
			РГСофтКлиентСервер.УстановитьЗначение(ТекПользовательОбъект.Department, СокрЛП(ВыборкаПользователейГруппы.Fields("department").Value));
			РГСофтКлиентСервер.УстановитьЗначение(ТекПользовательОбъект.Mail, СокрЛП(ВыборкаПользователейГруппы.Fields("mail").Value));
			РГСофтКлиентСервер.УстановитьЗначение(ТекПользовательОбъект.TelephoneNumber, СокрЛП(ВыборкаПользователейГруппы.Fields("telephoneNumber").Value));
			РГСофтКлиентСервер.УстановитьЗначение(ТекПользовательОбъект.JobTitle, СокрЛП(ВыборкаПользователейГруппы.Fields("title").Value));
			
			Если ТекПользовательОбъект.Модифицированность() Тогда
				ТекПользовательОбъект.Записать();
			КонецЕсли;
			
			ВыборкаПользователейГруппы.MoveNext();
			
		КонецЦикла;
		
		ВыборкаПользователейГруппы.Close();
		
		ВыборкаАДО.MoveNext();
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	//Обязательно закрываем соединения и объекты
	ВыборкаАДО.Close();
	СоединениеАДО.Close();
	
	ПоместитьВоВременноеХранилище(СтруктураВозврата, АдресХранилища);
	
КонецПроцедуры
	
#КонецЕсли