#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция НайтиТранзакцииLawson(Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Док_ПроводкаDSS.Ссылка КАК ТранзакцияLawson,
		|	Док_ПроводкаDSS.TranAmount КАК Amount,
		|	ВЫБОР
		|		КОГДА ВнутренниеКурсыВалютСрезПоследних.Курс ЕСТЬ NULL
		|				ИЛИ ВнутренниеКурсыВалютСрезПоследних.Курс = 0
		|			ТОГДА 0
		|		ИНАЧЕ Док_ПроводкаDSS.TranAmount / ВнутренниеКурсыВалютСрезПоследних.Курс
		|	КОНЕЦ КАК BaseAmount,
		//|	Док_ПроводкаDSS.BaseAmount КАК BaseAmount,
		//|	Док_ПроводкаDSS.Номер КАК Номер,
		//|	Док_ПроводкаDSS.SourceCode КАК SourceCode,
		//|	Док_ПроводкаDSS.AccountLawson КАК AccountLawson,
		//|	Док_ПроводкаDSS.AU КАК AU,
		//|	Док_ПроводкаDSS.AU.ПодразделениеОрганизации.БазовыйЭлемент.GeoMarket КАК Geo,
		//|	Док_ПроводкаDSS.Description КАК Description,
		|	Док_ПроводкаDSS.Currency КАК Currency,
		|	Док_ПроводкаDSS.AU.ПодразделениеОрганизации.БазовыйЭлемент.GeoMarket.ManagementGeomarket КАК ManagementGeomarket
		//|	Док_ПроводкаDSS.Company КАК Company,
		//|	Док_ПроводкаDSS.CustomerNumber КАК CustomerNumber,
		//|	Док_ПроводкаDSS.КонтрагентLawson КАК КонтрагентLawson,
		//|	Док_ПроводкаDSS.AccountingPeriod КАК AccountingPeriod,
		//|	NULL КАК Account,
		//|	NULL КАК Client,
		//|	NULL КАК DocID,
		//|	NULL КАК DocNumber,
		//|	NULL КАК GL_Account,
		//|	NULL КАК GlSourceType
		|ИЗ
		|	Документ.ПроводкаDSS КАК Док_ПроводкаDSS
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВнутренниеКурсыВалют.СрезПоследних(&КонецПериода, ) КАК ВнутренниеКурсыВалютСрезПоследних
		|		ПО Док_ПроводкаDSS.Currency = ВнутренниеКурсыВалютСрезПоследних.Валюта
		|ГДЕ
		|	(Док_ПроводкаDSS.AccountLawson = &AccountLawson1
		|			ИЛИ Док_ПроводкаDSS.AccountLawson = &AccountLawson2)
		|	И Док_ПроводкаDSS.AU.Сегмент.БазовыйЭлемент.Родитель = &SubSegmentLawson
		|	И Док_ПроводкаDSS.Проведен
		|	И Док_ПроводкаDSS.AccountingPeriod >= &НачалоПериода
		|	И Док_ПроводкаDSS.AccountingPeriod <= &КонецПериода";
	
	Запрос.УстановитьПараметр("AccountLawson1", ПланыСчетов.Lawson.TradeReceivables);
	Запрос.УстановитьПараметр("AccountLawson2", ПланыСчетов.Lawson.RevenueEstsUnbilled);
	Запрос.УстановитьПараметр("SubSegmentLawson", Справочники.HFM_Technology.НайтиПоКоду("ABL"));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Функция НайтиТранзакцииOracle(Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТранзакцияOracle.Ссылка КАК ТранзакцияOracle,
		|	ТранзакцияOracle.AU.ПодразделениеОрганизации.БазовыйЭлемент.GeoMarket.ManagementGeomarket КАК ManagementGeomarket,
		|	ТранзакцияOracle.Currency КАК Currency,
		|	ВЫБОР
		|		КОГДА ТранзакцияOracle.Account.Код ПОДОБНО ""110G.%""
		|			ТОГДА ТранзакцияOracle.Amount * 1.18
		|		ИНАЧЕ ТранзакцияOracle.Amount
		|	КОНЕЦ КАК Amount,
		|	ВЫБОР
		|		КОГДА ВнутренниеКурсыВалютСрезПоследних.Курс ЕСТЬ NULL
		|				ИЛИ ВнутренниеКурсыВалютСрезПоследних.Курс = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТранзакцияOracle.Account.Код ПОДОБНО ""110G.%""
		|					ТОГДА ТранзакцияOracle.Amount * 1.18
		|				ИНАЧЕ ТранзакцияOracle.Amount
		|			КОНЕЦ / ВнутренниеКурсыВалютСрезПоследних.Курс
		|	КОНЕЦ КАК BaseAmount
		|ИЗ
		|	Документ.ТранзакцияOracle КАК ТранзакцияOracle
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВнутренниеКурсыВалют.СрезПоследних(&КонецПериода, ) КАК ВнутренниеКурсыВалютСрезПоследних
		|		ПО ТранзакцияOracle.Currency = ВнутренниеКурсыВалютСрезПоследних.Валюта
		|ГДЕ
		|	ТранзакцияOracle.Проведен
		|	И (ТранзакцияOracle.Account.Код ПОДОБНО ""110G%""
		|			ИЛИ ТранзакцияOracle.Account.Код ПОДОБНО ""1090%"")
		|	И ТранзакцияOracle.GL_Account ПОДОБНО ""%.999999""
		|	И ТранзакцияOracle.Дата >= &НачалоПериода
		|	И ТранзакцияOracle.Дата <= &КонецПериода
		|	И ТранзакцияOracle.Source = ЗНАЧЕНИЕ(Перечисление.ТипыСоответствий.OracleMI)";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

#КонецЕсли