&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

&НаКлиенте
Процедура ПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если Период = Дата(1,1,1) Тогда	
		ПараметрыВыбора = Новый Структура("НачалоПериода, КонецПериода", НачалоМесяца(ТекущаяДата()), КонецМесяца(ТекущаяДата()));
	Иначе
		ПараметрыВыбора = Новый Структура("НачалоПериода, КонецПериода", НачалоМесяца(Период), КонецМесяца(Период));
	КонецЕсли;	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", ПараметрыВыбора, ЭтаФорма.ПредставлениеПериода, , , , ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Период = РезультатВыбора.НачалоПериода;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКорректировки(Команда)
	
	Результат = Истина;
	ВыполнитьПроверкуСуммНаКлиенте(Результат);
	
	Если Результат Тогда 
		СоздатьКорректировкиНаСервере();
	Иначе
		ТекстСообщения = НСтр("ru = 'The deviation between the selected transactions  is within than allowed. 
			|Balance transfer is possible!'");
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецЕсли;

	
КонецПроцедуры

&НаСервере
Процедура СоздатьКорректировкиНаСервере()
	
	Отбор = Новый Структура;
    Отбор.Вставить("Apply", Истина);
	ТЗ_ТранзакцииLawson = ТаблицаТранзакцийLawson.Скопировать(Отбор, );
	ТЗ_ТранзакцииLawson.Колонки[ТранзакцияLawson].Имя = "Транзакция";
	ТЗ_ТранзакцииLawson.Колонки.Добавить("КорректировкаРегистров");
	
	ТЗ_ТранзакцииOracle = ТаблицаТранзакцийOracle.Скопировать(Отбор, );
	ТЗ_ТранзакцииOracle.Колонки[ТранзакцияOracle].Имя = "Транзакция";
	ТЗ_ТранзакцииOracle.Колонки.Добавить("КорректировкаРегистров");
	 
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();

	Док = Документы.КорректировкаРегистров.СоздатьДокумент();
	Док.ДополнительныеСвойства.Вставить("РазрешитьСозданиеДокументаБезРеверса", Истина);
	Док.Дата = КонецМесяца(Период);
	Док.ТипКорректировки = Перечисления.ТипыКорректировкиРегистров.ПереносБалансовСLawsonНаOracle;
	Док.ManagementGeomarket = ManagementGeomarket;
	Док.Комментарий = "Перенос Балансов С Lawson На Oracle";
	Док.Ответственный = Пользователи.ТекущийПользователь();
	Док.Записать();
	
	КорректировкаСсылка = Док.Ссылка;
	
	НЗ = РегистрыСведений.СоответсвиеКорректировкиРегистровПроводки.СоздатьНаборЗаписей();
	НЗ.Отбор.КорректировкаРегистров.Установить(КорректировкаСсылка);
	
	Для каждого СтрокаТранзакции Из ТЗ_ТранзакцииLawson Цикл
		НоваяЗапись = НЗ.Добавить();
		НоваяЗапись.КорректировкаРегистров = КорректировкаСсылка;
		НоваяЗапись.Транзакция = СтрокаТранзакции.ТранзакцияLawson;
	КонецЦикла;

	Для каждого СтрокаТранзакции Из ТЗ_ТранзакцииOracle Цикл
		НоваяЗапись = НЗ.Добавить();
		НоваяЗапись.КорректировкаРегистров = КорректировкаСсылка;
		НоваяЗапись.Транзакция = СтрокаТранзакции.ТранзакцияOracle;
	КонецЦикла;
	
	НЗ.Записать(Истина);
	
	
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиТранзакции(Команда)
	
	ИтоговаяСуммаLawson = 0;
	ИтоговаяСуммаOracle = 0;
	
	Результат = НайтиТранзакцииНаСервере();
	
КонецПроцедуры

&НаСервере
Функция НайтиТранзакцииНаСервере()
	
	ТранзакцииLawson = Обработки.ПереносБалансовСLawsonНаOracleMI.НайтиТранзакцииLawson(Период, ВидСчета, ManagementGeomarket);
	ТранзакцииOracle = Обработки.ПереносБалансовСLawsonНаOracleMI.НайтиТранзакцииOracle(Период, ВидСчета, ManagementGeomarket);
	
	ТаблицаТранзакцийLawson.Загрузить(ТранзакцииLawson);
	ТаблицаТранзакцийOracle.Загрузить(ТранзакцииOracle);
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьПроверкуСумм(Команда)
	
	Результат = Истина;
	ВыполнитьПроверкуСуммНаКлиенте(Результат);
	
	Если Результат Тогда 
		ТекстСообщения = НСтр("ru = 'The deviation between the selected transactions  is within than allowed. 
			|Balance transfer is possible!'");
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкуСуммНаКлиенте(Результат = Истина)

	Если Макс(ИтоговаяСуммаLawson - ИтоговаяСуммаOracle, ИтоговаяСуммаOracle - ИтоговаяСуммаLawson) > ДопустимоеОтклонениеСумм Тогда
		Результат = Ложь;
	КонецЕсли;
	
	Если НЕ Результат Тогда
		ТекстСообщения = НСтр("ru = 'The deviation between the selected transactions is larger than allowed!'");
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТранзакцийLawsonApplyПриИзменении(Элемент)
	
	Если Элементы.ТаблицаТранзакцийLawson.ТекущиеДанные.Apply Тогда
		ИтоговаяСуммаLawson = ИтоговаяСуммаLawson + Элементы.ТаблицаТранзакцийLawson.ТекущиеДанные.BaseAmount;
	Иначе
		ИтоговаяСуммаLawson = ИтоговаяСуммаLawson - Элементы.ТаблицаТранзакцийLawson.ТекущиеДанные.BaseAmount;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТранзакцийOracleApplyПриИзменении(Элемент)
	
	Если Элементы.ТаблицаТранзакцийOracle.ТекущиеДанные.Apply Тогда
		ИтоговаяСуммаOracle = ИтоговаяСуммаOracle + Элементы.ТаблицаТранзакцийOracle.ТекущиеДанные.BaseAmount;
	Иначе
		ИтоговаяСуммаOracle = ИтоговаяСуммаOracle - Элементы.ТаблицаТранзакцийOracle.ТекущиеДанные.BaseAmount;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиLawson(Команда)
	
	Для Каждого СтрокаТаблицы Из ТаблицаТранзакцийLawson Цикл
		Если Элементы.ТаблицаТранзакцийLawson.ПроверитьСтроку(СтрокаТаблицы.ПолучитьИдентификатор()) Тогда
			Если НЕ СтрокаТаблицы.Apply Тогда
				СтрокаТаблицы.Apply = Истина;
				ИтоговаяСуммаLawson = ИтоговаяСуммаLawson + СтрокаТаблицы.BaseAmount;
			КонецЕсли
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиLawson(Команда)
	
	Для каждого СтрокаТаблицы Из ТаблицаТранзакцийLawson Цикл
		Если СтрокаТаблицы.Apply Тогда
			СтрокаТаблицы.Apply = Ложь;
			ИтоговаяСуммаLawson = ИтоговаяСуммаLawson - СтрокаТаблицы.BaseAmount;
		КонецЕсли;
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиOracle(Команда)
	
	Для Каждого СтрокаТаблицы Из ТаблицаТранзакцийOracle Цикл
		Если Элементы.ТаблицаТранзакцийOracle.ПроверитьСтроку(СтрокаТаблицы.ПолучитьИдентификатор()) Тогда
			Если НЕ СтрокаТаблицы.Apply Тогда
				СтрокаТаблицы.Apply = Истина;
				ИтоговаяСуммаOracle = ИтоговаяСуммаOracle + СтрокаТаблицы.BaseAmount;
			КонецЕсли
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиOracle(Команда)
	
	Для каждого СтрокаТаблицы Из ТаблицаТранзакцийOracle Цикл
		Если СтрокаТаблицы.Apply Тогда
			СтрокаТаблицы.Apply = Ложь;
			ИтоговаяСуммаOracle = ИтоговаяСуммаOracle - СтрокаТаблицы.BaseAmount;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

