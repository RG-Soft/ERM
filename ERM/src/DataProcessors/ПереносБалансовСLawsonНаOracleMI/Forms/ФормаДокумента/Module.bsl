&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

&НаКлиенте
Процедура ПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если Период = Дата(1,1,1) Тогда	
		ПараметрыВыбора = Новый Структура("НачалоПериода, КонецПериода", НачалоМесяца(ТекущаяДата()), КонецМесяца(ТекущаяДата()));
	Иначе
		ПараметрыВыбора = Новый Структура("НачалоПериода, КонецПериода", НачалоМесяца(Период), КонецМесяца(Период));
	КонецЕсли;	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", ПараметрыВыбора, ЭтаФорма.ПредставлениеПериода, , , , ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Период = РезультатВыбора.НачалоПериода;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКорректировки(Команда)
	СоздатьКорректировкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьКорректировкиНаСервере()
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура НайтиТранзакции(Команда)
	
	Результат = НайтиТранзакцииНаСервере();
	
КонецПроцедуры

&НаСервере
Функция НайтиТранзакцииНаСервере()
	
	ТранзакцииLawson = Обработки.ПереносБалансовСLawsonНаOracleMI.НайтиТранзакцииLawson(Период);
	ТранзакцииOracle = Обработки.ПереносБалансовСLawsonНаOracleMI.НайтиТранзакцииOracle(Период);
	
	ТаблицаТранзакцийLawson.Загрузить(ТранзакцииLawson);
	ТаблицаТранзакцийOracle.Загрузить(ТранзакцииOracle);
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьПроверкуСумм(Команда)
	ВыполнитьПроверкуСуммНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПроверкуСуммНаСервере()
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТранзакцийLawsonApplyПриИзменении(Элемент)
	
	Если Элементы.ТаблицаТранзакцийLawson.ТекущиеДанные.Apply Тогда
		ИтоговаяСуммаLawson = ИтоговаяСуммаLawson + Элементы.ТаблицаТранзакцийLawson.ТекущиеДанные.BaseAmount;
	Иначе
		ИтоговаяСуммаLawson = ИтоговаяСуммаLawson - Элементы.ТаблицаТранзакцийLawson.ТекущиеДанные.BaseAmount;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТранзакцийOracleApplyПриИзменении(Элемент)
	
	Если Элементы.ТаблицаТранзакцийOracle.ТекущиеДанные.Apply Тогда
		ИтоговаяСуммаOracle = ИтоговаяСуммаOracle + Элементы.ТаблицаТранзакцийOracle.ТекущиеДанные.BaseAmount;
	Иначе
		ИтоговаяСуммаOracle = ИтоговаяСуммаOracle - Элементы.ТаблицаТранзакцийOracle.ТекущиеДанные.BaseAmount;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиLawson(Команда)
	
	Для Каждого СтрокаТаблицы Из ТаблицаТранзакцийLawson Цикл
		Если Элементы.ТаблицаТранзакцийLawson.ПроверитьСтроку(СтрокаТаблицы.ПолучитьИдентификатор()) Тогда
			Если НЕ СтрокаТаблицы.Apply Тогда
				СтрокаТаблицы.Apply = Истина;
				ИтоговаяСуммаLawson = ИтоговаяСуммаLawson + СтрокаТаблицы.BaseAmount;
			КонецЕсли
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиLawson(Команда)
	
	Для каждого СтрокаТаблицы Из ТаблицаТранзакцийLawson Цикл
		Если СтрокаТаблицы.Apply Тогда
			СтрокаТаблицы.Apply = Ложь;
			ИтоговаяСуммаLawson = ИтоговаяСуммаLawson - СтрокаТаблицы.BaseAmount;
		КонецЕсли;
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиOracle(Команда)
	
	Для Каждого СтрокаТаблицы Из ТаблицаТранзакцийOracle Цикл
		Если Элементы.ТаблицаТранзакцийOracle.ПроверитьСтроку(СтрокаТаблицы.ПолучитьИдентификатор()) Тогда
			Если НЕ СтрокаТаблицы.Apply Тогда
				СтрокаТаблицы.Apply = Истина;
				ИтоговаяСуммаOracle = ИтоговаяСуммаOracle + СтрокаТаблицы.BaseAmount;
			КонецЕсли
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиOracle(Команда)
	
	Для каждого СтрокаТаблицы Из ТаблицаТранзакцийOracle Цикл
		Если СтрокаТаблицы.Apply Тогда
			СтрокаТаблицы.Apply = Ложь;
			ИтоговаяСуммаOracle = ИтоговаяСуммаOracle - СтрокаТаблицы.BaseAmount;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

