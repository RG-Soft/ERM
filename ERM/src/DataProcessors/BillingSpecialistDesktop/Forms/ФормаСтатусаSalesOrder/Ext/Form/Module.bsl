
//&НаСервере
//Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
//	
//	СтруктураРеквизитовПроблемы = Новый Структура("Дата, SalesOrder, User, Reason, Billed, ExpectedDateForInvoice, EscalateTo, Details, Responsibles");
//	ЗаполнитьЗначенияСвойств(СтруктураРеквизитовПроблемы, ЭтотОбъект);
//	СтруктураРеквизитовПроблемы.Дата = ТекущийОбъект.Период;
//	СтруктураРеквизитовПроблемы.SalesOrder = ТекущийОбъект.SalesOrder;
//	
//	Если ЗначениеЗаполнено(ТекущийОбъект.Problem) Тогда
//		РегистрыСведений.SalesOrdersComments.ПерезаполнитьРеквизитыSalesOrderProblem(ТекущийОбъект.Problem, СтруктураРеквизитовПроблемы);
//	Иначе
//		ТекущийОбъект.Problem = РегистрыСведений.SalesOrdersComments.СоздатьSalesOrderProblem(СтруктураРеквизитовПроблемы);
//	КонецЕсли;
//	
//КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период = РГСофт.ПолучитьДатуСервера();
	Если Не ЗначениеЗаполнено(User) Тогда
		User = Пользователи.ТекущийПользователь();
	КонецЕсли;

	СписокSalesOrders = Параметры.СписокSalesOrders;

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ТолькоПросмотр = Истина;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ТолькоПросмотр = Истина;
	
КонецПроцедуры

&НаСервере
Процедура SaveНаСервере()
	
	НЗ = РегистрыСведений.SalesOrdersComments.СоздатьНаборЗаписей();
	НЗ.Отбор.Период.Установить(Период);
	
	Для каждого ЭлементСписка Из СписокSalesOrders Цикл
		
	СтруктураРеквизитовПроблемы = Новый Структура("Дата, SalesOrder, User, Reason, Billed, ExpectedDateForInvoice, EscalateTo, Details, Responsibles");
	
	ЗаполнитьЗначенияСвойств(СтруктураРеквизитовПроблемы, ЭтотОбъект);
	
	СтруктураРеквизитовПроблемы.Дата = Период;
	СтруктураРеквизитовПроблемы.SalesOrder = ЭлементСписка.Значение;
	
	Problem = РегистрыСведений.SalesOrdersComments.СоздатьSalesOrderProblem(СтруктураРеквизитовПроблемы);

	НЗ.Очистить();
	НЗ.Отбор.SalesOrder.Установить(ЭлементСписка.Значение);

	Запись = НЗ.Добавить();
	Запись.Период = Период;
	Запись.SalesOrder = ЭлементСписка.Значение;
	Запись.Problem = Problem;
	НЗ.Записать(Ложь);
	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура Save(Команда)
	SaveНаСервере();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ResponsiblesПриИзменении(Элемент)
КонецПроцедуры






