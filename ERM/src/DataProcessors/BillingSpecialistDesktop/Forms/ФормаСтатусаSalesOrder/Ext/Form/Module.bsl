
//&НаСервере
//Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
//	
//	СтруктураРеквизитовПроблемы = Новый Структура("Дата, SalesOrder, User, Reason, Billed, ExpectedDateForInvoice, EscalateTo, Details, Responsibles");
//	ЗаполнитьЗначенияСвойств(СтруктураРеквизитовПроблемы, ЭтотОбъект);
//	СтруктураРеквизитовПроблемы.Дата = ТекущийОбъект.Период;
//	СтруктураРеквизитовПроблемы.SalesOrder = ТекущийОбъект.SalesOrder;
//	
//	Если ЗначениеЗаполнено(ТекущийОбъект.Problem) Тогда
//		РегистрыСведений.SalesOrdersComments.ПерезаполнитьРеквизитыSalesOrderProblem(ТекущийОбъект.Problem, СтруктураРеквизитовПроблемы);
//	Иначе
//		ТекущийОбъект.Problem = РегистрыСведений.SalesOrdersComments.СоздатьSalesOrderProblem(СтруктураРеквизитовПроблемы);
//	КонецЕсли;
//	
//КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период = РГСофт.ПолучитьДатуСервера();
	Если Не ЗначениеЗаполнено(User) Тогда
		User = Пользователи.ТекущийПользователь();
	КонецЕсли;

	СписокSalesOrders = Параметры.СписокSalesOrders;
	ДоступностьBilled = Истина;
	Для Индекс = 0 По СписокSalesOrders.Количество() - 1 Цикл
		Если СписокSalesOrders[Индекс].Значение.Source = Перечисления.ТипыСоответствий.Lawson ИЛИ СписокSalesOrders[Индекс].Значение.Source = Перечисления.ТипыСоответствий.OracleMI ИЛИ
			СписокSalesOrders[Индекс].Значение.Source = Перечисления.ТипыСоответствий.OracleSmith ИЛИ СписокSalesOrders[Индекс].Значение.Source = Перечисления.ТипыСоответствий.HOBs И СписокSalesOrders[Индекс].Значение.Company <> Справочники.Организации.НайтиПоКоду("385") Тогда
			ДоступностьBilled = Ложь;
		КонецЕсли;
	КонецЦикла;
	Элементы.Billed.Доступность = ДоступностьBilled;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ТолькоПросмотр = Истина;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ТолькоПросмотр = Истина;
	
КонецПроцедуры

&НаСервере
Процедура SaveНаСервере(СообщениеОбОшибке)
	
	НЗ = РегистрыСведений.SalesOrdersComments.СоздатьНаборЗаписей();
	НЗ.Отбор.Период.Установить(Период);
	
	СтатусBilledИзКомментария = Ложь;
	Если Billed = Перечисления.SalesOrderBilledStatus.ПустаяСсылка() Тогда
		СтатусBilledИзКомментария = Истина;
		//Запрос
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	SalesOrdersCommentsСрезПоследних.Problem.Billed КАК Billed,
			|	SalesOrdersCommentsСрезПоследних.SalesOrder
			|ИЗ
			|	РегистрСведений.SalesOrdersComments.СрезПоследних(, SalesOrder В (&СписокSalesOrders)) КАК SalesOrdersCommentsСрезПоследних";
		
		Запрос.УстановитьПараметр("СписокSalesOrders", СписокSalesOrders);
		
		НачатьТранзакцию();
		КэшBilled = Запрос.Выполнить().Выгрузить();
		КэшBilled.Индексы.Добавить("SalesOrder");
		ЗафиксироватьТранзакцию();
		
	КонецЕсли;
	
	НачатьТранзакцию();
		
	Для каждого ЭлементСписка Из СписокSalesOrders Цикл
		
		СтруктураРеквизитовПроблемы = Новый Структура("Дата, SalesOrder, User, Reason, Billed, ExpectedDateForInvoice, EscalateTo, Details, Responsibles");
		//СтруктураРеквизитовПроблемы.Вставить("Responsibles", Новый ТаблицаЗначений);
		
		ЗаполнитьЗначенияСвойств(СтруктураРеквизитовПроблемы, ЭтотОбъект);
		
		СтруктураРеквизитовПроблемы.Дата = Период;
		СтруктураРеквизитовПроблемы.SalesOrder = ЭлементСписка.Значение;
		
		Если СтатусBilledИзКомментария Тогда
			НайденныйSalesOrder = КэшBilled.Найти(ЭлементСписка.Значение, "SalesOrder");
			Если НайденныйSalesOrder = Неопределено Тогда
				СообщениеОбОшибке = "For the selected Sales Order is not status";
				ОтменитьТранзакцию();
				ВызватьИсключение СообщениеОбОшибке;
			Иначе
			СтруктураРеквизитовПроблемы.Billed = НайденныйSalesOrder.Billed;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭтотОбъект.EscalateTo) Тогда
			
			Отказ = Ложь;
			РегистрыСведений.SalesOrdersComments.ПроверитьНастройкиНотификаций(ЭлементСписка.Значение,Отказ);
			
			Если Отказ Тогда
				 СообщениеОбОшибке = "Notification configured incorrectly! See 'Unbilled notification recipients'.";
				 ОтменитьТранзакцию();
				 ВызватьИсключение СообщениеОбОшибке;
			КонецЕсли;
			
			МассивОтветственных = Документы.SalesOrder.ПолучитьОтветственныхПоSO(ЭлементСписка.Значение, ЭтотОбъект.EscalateTo);
			Если МассивОтветственных.Количество() = 0 Тогда
				СообщениеОбОшибке = "For the selected Sales Order is not filled Responsible";
				ОтменитьТранзакцию();
				ВызватьИсключение СообщениеОбОшибке;
			КонецЕсли;
			Responsibles.Очистить();
			//СтруктураРеквизитовПроблемы.Responsibles.Очистить();
			//СтруктураРеквизитовПроблемы.Responsibles.Колонки.Добавить("Responsible", Новый ОписаниеТипов("СправочникСсылка.LDAPUsers"));
			Для каждого ТекОтветственный Из МассивОтветственных Цикл
				НоваяСтрока = Responsibles.Добавить();
				НоваяСтрока.Responsible = ТекОтветственный;
			КонецЦикла;
			СтруктураРеквизитовПроблемы.Responsibles = Responsibles;
		КонецЕсли;
		
		Problem = РегистрыСведений.SalesOrdersComments.СоздатьSalesOrderProblem(СтруктураРеквизитовПроблемы);

		НЗ.Очистить();
		НЗ.Отбор.SalesOrder.Установить(ЭлементСписка.Значение);

		Запись = НЗ.Добавить();
		Запись.Период = Период;
		Запись.SalesOrder = ЭлементСписка.Значение;
		Запись.Problem = Problem;
		НЗ.Записать(Ложь);
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();

КонецПроцедуры

&НаКлиенте
Процедура Save(Команда)
	СообщениеОбОшибке = "";
	SaveНаСервере(СообщениеОбОшибке);
	Закрыть();
	Если СообщениеОбОшибке <> "" Тогда
		Сообщить(СообщениеОбОшибке);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ResponsiblesПриИзменении(Элемент)
КонецПроцедуры






