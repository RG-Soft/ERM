
&НаСервере
Процедура ВыполнитьОчисткуДанныхНаСервере()
	
	НачатьТранзакцию();
	
	НЗ_DSSSourceData = РегистрыСведений.OracleSourceData.СоздатьНаборЗаписей();
	НЗ_DSSСформированныеПриЗагрузке = РегистрыСведений.DSSСформированныеПриЗагрузке.СоздатьНаборЗаписей();
	
	ВыборкаДокументовЗагрузки = Документы.ЗагрузкаДанныхOracle.Выбрать();
	
	Пока ВыборкаДокументовЗагрузки.Следующий() Цикл
		
		НЗ_DSSSourceData.Отбор.ДокументЗагрузки.Установить(ВыборкаДокументовЗагрузки.Ссылка);
		НЗ_DSSSourceData.Записать(Истина);
		
		НЗ_DSSСформированныеПриЗагрузке.Отбор.ДокументЗагрузки.Установить(ВыборкаДокументовЗагрузки.Ссылка);
		НЗ_DSSСформированныеПриЗагрузке.Записать(Истина);
		
		ТекОбъект = ВыборкаДокументовЗагрузки.ПолучитьОбъект();
		ТекОбъект.Удалить();
		
	КонецЦикла;
	
	НЗ_DSSСвязанныеДокументы = РегистрыСведений.DSSСвязанныеДокументы.СоздатьНаборЗаписей();
	
	ВыборкаТранзакций = Документы.ТранзакцияOracle.Выбрать();
	
	Пока ВыборкаТранзакций.Следующий() Цикл
		
		НЗ_DSSСвязанныеДокументы.Отбор.ПроводкаDSS.Установить(ВыборкаТранзакций.Ссылка);
		НЗ_DSSСвязанныеДокументы.Записать(Истина);
		
		ТекОбъект = ВыборкаТранзакций.ПолучитьОбъект();
		
		Если ТекОбъект.Проведен Тогда
			ТекОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
		
		ТекОбъект.Удалить();
		
	КонецЦикла;
	
	ВыборкаSO = Документы.SalesOrder.Выбрать();
	
	Пока ВыборкаSO.Следующий() Цикл
		
		Если ВыборкаSO.Source <> Перечисления.ТипыСоответствий.OracleMI Тогда
			Продолжить;
		КонецЕсли;
		
		ТекОбъект = ВыборкаSO.ПолучитьОбъект();
		ТекОбъект.Удалить();
		
	КонецЦикла;
	
	ВыборкаИнвойсов = Документы.Invoice.Выбрать();
	
	Пока ВыборкаИнвойсов.Следующий() Цикл
		
		Если ВыборкаИнвойсов.Source <> Перечисления.ТипыСоответствий.OracleMI Тогда
			Продолжить;
		КонецЕсли;
		
		ТекОбъект = ВыборкаИнвойсов.ПолучитьОбъект();
		ТекОбъект.Удалить();
		
	КонецЦикла;
	
	ВыборкаРучныхКорректировок = Документы.РучнаяКорректировка.Выбрать();
	
	Пока ВыборкаРучныхКорректировок.Следующий() Цикл
		
		Если ВыборкаРучныхКорректировок.Source <> Перечисления.ТипыСоответствий.OracleMI Тогда
			Продолжить;
		КонецЕсли;
		
		ТекОбъект = ВыборкаРучныхКорректировок.ПолучитьОбъект();
		ТекОбъект.Удалить();
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьРегистрыНаСервере()
	
	Если ТипСоответствия = Перечисления.ТипыСоответствий.ПустаяСсылка() Тогда
		Сообщить("Source not specified");	
	Иначе
		Макет =  РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет");
		ТекстЗапроса = Макет.ПолучитьТекст();
		
		МассивИменМетаданных = Новый Массив();
		МассивИменМетаданных.Добавить("РегистрНакопления.UnbilledAR");
		МассивИменМетаданных.Добавить("РегистрНакопления.billedAR");
		МассивИменМетаданных.Добавить("РегистрНакопления.UnallocatedCash");
		МассивИменМетаданных.Добавить("РегистрНакопления.ManualTransactions");
		МассивИменМетаданных.Добавить("РегистрНакопления.UnallocatedMemo");
		МассивИменМетаданных.Добавить("Документ.ТранзакцияOracle");
		МассивИменМетаданных.Добавить("Перечисление.ТипыСоответствий");
		
		
		МассивИменМетаданных.Добавить("Документ.РучнаяКорректировка");
		МассивИменМетаданных.Добавить("Документ.SalesOrder");
		МассивИменМетаданных.Добавить("Документ.Invoice");
		МассивИменМетаданных.Добавить("Документ.CashBatch");
		МассивИменМетаданных.Добавить("Документ.BatchAllocation");
		МассивИменМетаданных.Добавить("Документ.Memo");
		
		МассивИменМетаданных.Добавить("РегистрСведений.КлючиИнвойсов");
		МассивИменМетаданных.Добавить("РегистрСведений.КлючиCashBatch");
		МассивИменМетаданных.Добавить("РегистрСведений.КлючиBatchAllocation");
		МассивИменМетаданных.Добавить("РегистрСведений.КлючиРучныхКорректировок");
		//Структура1 = ПолучитьСтруктуруХраненияБазыДанных();
		СтруктураБД=ПолучитьСтруктуруХраненияБазыДанных(МассивИменМетаданных);
	 
		Индекс = Перечисления.ТипыСоответствий.Индекс(ТипСоответствия);
		
		//ТипыСоответствий
		СтрокаТипыСоответствий = СтруктураБД.Найти("Перечисление.ТипыСоответствий", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицыПеречисления#",СтрокаТипыСоответствий.ИмяТаблицыХранения);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#НомерЭлементаПеречисления#",Индекс);
		
		//UnbilledAR
		СтрокаUnbilledAR = СтруктураБД.Найти("РегистрНакопления.UnbilledAR", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_UnbilledAR_Движения#",СтрокаUnbilledAR.ИмяТаблицыХранения);
		СтрокаUnbilledARОстатки = СтруктураБД.Найти("РегистрНакопления.UnbilledAR.Остатки", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_UnbilledAR_Итоги#",СтрокаUnbilledARОстатки.ИмяТаблицыХранения);
		ТЗ_ПоляUnbilledAR = СтрокаUnbilledAR.Поля;
		СтрокаПолеUnbilledAR = ТЗ_ПоляUnbilledAR.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_UnbilledAR#",СтрокаПолеUnbilledAR.ИмяПоляХранения);
		
		//billedAR
		СтрокаbilledAR = СтруктураБД.Найти("РегистрНакопления.BilledAR", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_billedAR_Движения#",СтрокаbilledAR.ИмяТаблицыХранения);
		СтрокаbilledARОстатки = СтруктураБД.Найти("РегистрНакопления.BilledAR.Остатки", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_billedAR_Итоги#",СтрокаbilledARОстатки.ИмяТаблицыХранения);
		ТЗ_ПоляbilledAR = СтрокаbilledAR.Поля;
		СтрокаПолеbilledAR = ТЗ_ПоляbilledAR.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_billedAR#",СтрокаПолеbilledAR.ИмяПоляХранения);
		
		//UnallocatedCash
		СтрокаUnallocatedCash = СтруктураБД.Найти("РегистрНакопления.UnallocatedCash", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_UnallocatedCash_Движения#",СтрокаUnallocatedCash.ИмяТаблицыХранения);
		СтрокаUnallocatedCashОстатки = СтруктураБД.Найти("РегистрНакопления.UnallocatedCash.Остатки", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_UnallocatedCash_Итоги#",СтрокаUnallocatedCashОстатки.ИмяТаблицыХранения);
		ТЗ_ПоляUnallocatedCash = СтрокаUnallocatedCash.Поля;
		СтрокаПолеUnallocatedCash = ТЗ_ПоляUnallocatedCash.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_UnallocatedCash#",СтрокаПолеUnallocatedCash.ИмяПоляХранения);
		
		//ManualTransactions
		СтрокаManualTransactions = СтруктураБД.Найти("РегистрНакопления.ManualTransactions", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_ManualTransactions_Движения#",СтрокаManualTransactions.ИмяТаблицыХранения);
		СтрокаManualTransactionsОстатки = СтруктураБД.Найти("РегистрНакопления.ManualTransactions.Остатки", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_ManualTransactions_Итоги#",СтрокаManualTransactionsОстатки.ИмяТаблицыХранения);
		ТЗ_ПоляManualTransactions = СтрокаManualTransactions.Поля;
		СтрокаПолеManualTransactions = ТЗ_ПоляManualTransactions.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_ManualTransactions#",СтрокаПолеManualTransactions.ИмяПоляХранения);
		
		//UnallocatedMemo
		СтрокаUnallocatedMemo = СтруктураБД.Найти("РегистрНакопления.UnallocatedMemo", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_UnallocatedMemo_Движения#",СтрокаUnallocatedMemo.ИмяТаблицыХранения);
		СтрокаUnallocatedMemoОстатки = СтруктураБД.Найти("РегистрНакопления.UnallocatedMemo.Остатки", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_UnallocatedMemo_Итоги#",СтрокаUnallocatedMemoОстатки.ИмяТаблицыХранения);
		ТЗ_ПоляUnallocatedMemo = СтрокаUnallocatedMemo.Поля;
		СтрокаПолеUnallocatedMemo = ТЗ_ПоляUnallocatedMemo.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_UnallocatedMemo#",СтрокаПолеUnallocatedMemo.ИмяПоляХранения);
		
		//Транзакции
		СтрокаТранзакции = СтруктураБД.Найти("Документ.ТранзакцияOracle", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицыТранзакций#",СтрокаТранзакции.ИмяТаблицыХранения);
		ТЗ_ПоляТранзакции = СтрокаТранзакции.Поля;
		СтрокаПолеТранзакции = ТЗ_ПоляТранзакции.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоляТранзакций#",СтрокаПолеТранзакции.ИмяПоляХранения);
		
		//Документ Ручная корректировка
		СтрокаРучнаяКорректировка = СтруктураБД.Найти("Документ.РучнаяКорректировка", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_РучнаяКорректировка#",СтрокаРучнаяКорректировка.ИмяТаблицыХранения);
		ТЗ_ПоляРучнаяКорректировка = СтрокаРучнаяКорректировка.Поля;
		СтрокаПолеРучнаяКорректировка = ТЗ_ПоляРучнаяКорректировка.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_РучнаяКорректировка#",СтрокаПолеРучнаяКорректировка.ИмяПоляХранения);
		
		//Документ SalesOrder
		СтрокаSalesOrder = СтруктураБД.Найти("Документ.SalesOrder", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_SalesOrder#",СтрокаSalesOrder.ИмяТаблицыХранения);
		ТЗ_ПоляSalesOrder = СтрокаSalesOrder.Поля;
		СтрокаПолеSalesOrder = ТЗ_ПоляSalesOrder.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_SalesOrder#",СтрокаПолеSalesOrder.ИмяПоляХранения);
		
		//Документ Invoice
		СтрокаInvoice = СтруктураБД.Найти("Документ.Invoice", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_Invoice#",СтрокаInvoice.ИмяТаблицыХранения);
		ТЗ_ПоляInvoice = СтрокаInvoice.Поля;
		СтрокаПолеInvoice = ТЗ_ПоляInvoice.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_Invoice#",СтрокаПолеInvoice.ИмяПоляХранения);
		
		//Документ CashBatch
		СтрокаCashBatch = СтруктураБД.Найти("Документ.CashBatch", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_CashBatch#",СтрокаCashBatch.ИмяТаблицыХранения);
		ТЗ_ПоляCashBatch = СтрокаCashBatch.Поля;
		СтрокаПолеCashBatch = ТЗ_ПоляCashBatch.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_CashBatch#",СтрокаПолеCashBatch.ИмяПоляХранения);
		
		//Документ BatchAllocation
		СтрокаBatchAllocation = СтруктураБД.Найти("Документ.BatchAllocation", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_BatchAllocation#",СтрокаBatchAllocation.ИмяТаблицыХранения);
		ТЗ_ПоляBatchAllocation = СтрокаBatchAllocation.Поля;
		СтрокаПолеBatchAllocation = ТЗ_ПоляBatchAllocation.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_BatchAllocation#",СтрокаПолеBatchAllocation.ИмяПоляХранения);
		
		//Документ Memo
		СтрокаMemo = СтруктураБД.Найти("Документ.Memo", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_Memo#",СтрокаMemo.ИмяТаблицыХранения);
		ТЗ_ПоляMemo = СтрокаMemo.Поля;
		СтрокаПолеMemo = ТЗ_ПоляMemo.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_Memo#",СтрокаПолеMemo.ИмяПоляХранения);
		
		//КлючиИнвойсов
		СтрокаКлючиИнвойсов = СтруктураБД.Найти("РегистрСведений.КлючиИнвойсов", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_КлючиИнвойсов#",СтрокаКлючиИнвойсов.ИмяТаблицыХранения);
		ТЗ_ПоляКлючиИнвойсов = СтрокаКлючиИнвойсов.Поля;
		СтрокаПолеКлючиИнвойсов = ТЗ_ПоляКлючиИнвойсов.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_КлючиИнвойсов#",СтрокаПолеКлючиИнвойсов.ИмяПоляХранения);
		
		//КлючиCashBatch
		СтрокаКлючиCashBatch = СтруктураБД.Найти("РегистрСведений.КлючиCashBatch", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_КлючиCashBatch#",СтрокаКлючиCashBatch.ИмяТаблицыХранения);
		ТЗ_ПоляКлючиCashBatch = СтрокаКлючиCashBatch.Поля;
		СтрокаПолеКлючиCashBatch = ТЗ_ПоляКлючиCashBatch.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_КлючиCashBatch#",СтрокаПолеКлючиCashBatch.ИмяПоляХранения);
		
		//КлючиBatchAllocation
		СтрокаКлючиBatchAllocation = СтруктураБД.Найти("РегистрСведений.КлючиBatchAllocation", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_КлючиBatchAllocation#",СтрокаКлючиBatchAllocation.ИмяТаблицыХранения);
		ТЗ_ПоляКлючиBatchAllocation = СтрокаКлючиBatchAllocation.Поля;
		СтрокаПолеКлючиBatchAllocation = ТЗ_ПоляКлючиBatchAllocation.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_КлючиBatchAllocation#",СтрокаПолеКлючиBatchAllocation.ИмяПоляХранения);
		
		//КлючиРучныхКорректировок
		СтрокаКлючиРучныхКорректировок = СтруктураБД.Найти("РегистрСведений.КлючиРучныхКорректировок", "ИмяТаблицы");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяТаблицы_КлючиРучныхКорректировок#",СтрокаКлючиРучныхКорректировок.ИмяТаблицыХранения);
		ТЗ_ПоляКлючиРучныхКорректировок = СтрокаКлючиРучныхКорректировок.Поля;
		СтрокаПолеКлючиРучныхКорректировок = ТЗ_ПоляКлючиРучныхКорректировок.Найти("Source", "ИмяПоля");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"#ИмяПоля_КлючиРучныхКорректировок#",СтрокаПолеКлючиРучныхКорректировок.ИмяПоляХранения);
		
		ИмяФайлаSql = ПолучитьИмяВременногоФайла(".sql");
		ИмяФайлаBat = ПолучитьИмяВременногоФайла(".bat");
		ИмяФайлаTxt = ПолучитьИмяВременногоФайла(".txt");
		
		
		Текст = Новый ЗаписьТекста(ИмяФайлаSql, КодировкаТекста.ANSI);
		Текст.Записать(ТекстЗапроса);
		Текст.Закрыть();
		
		ТекстКоманднойСтроки = "sqlcmd -S ru0021app04.dir.slb.com -Udbuser1c -Prgs4dm1n@root$ -i " + ИмяФайлаSql + " -o " + ИмяФайлаTxt;
		//ТекстКоманднойСтроки = "Echo Какой-то текст>" + ИмяФайлаTxt;
		
		Текст = Новый ЗаписьТекста(ИмяФайлаBat, КодировкаТекста.ANSI);
		Текст.Записать(ТекстКоманднойСтроки);
		Текст.Закрыть();
		
		ЗапуститьПриложение(ИмяФайлаBat, ,Истина);
		Текст = Новый ЧтениеТекста(ИмяФайлаTxt, КодировкаТекста.ANSI);
		Стр = Текст.ПрочитатьСтроку();
		Результат = "";
		Пока Стр <> Неопределено Цикл
			Результат = Результат + Стр +  Символы.ПС;
			Стр = Текст.ПрочитатьСтроку();
		КонецЦикла;
		Текст.Закрыть();
		
		УдалитьФайлы(ИмяФайлаSql);
		УдалитьФайлы(ИмяФайлаBat);
		УдалитьФайлы(ИмяФайлаTxt);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВыполнитьОчисткуДанных(Команда)
	
	//ВыполнитьОчисткуДанныхНаСервере();
	ОчиститьРегистрыНаСервере();
	
КонецПроцедуры
