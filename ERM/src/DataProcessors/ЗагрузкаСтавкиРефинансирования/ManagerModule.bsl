#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбновитьСтавкуРефинансирования(СтруктураПараметров, АдресХранилища) Экспорт

	Результат = Новый Структура("ВыполненоУспешно, ДатаСтавки, СообщениеОбОшибке");

	ТелоЗапроса =
	"<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope"">
	|	<soap:Body>
	|		<MainInfoXML xmlns=""http://web.cbr.ru/""
	|				xmlns:xs=""http://www.w3.org/2001/XMLSchema""
	|				xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""/>
	|	</soap:Body>
	|</soap:Envelope>";

	Для НомерПопытки = 1 По 10 Цикл

		Соединение = Новый HTTPСоединение("www.cbr.ru", , , , , , Неопределено, Ложь);
		Заголовки = Новый Соответствие();
		Заголовки.Вставить("Content-Type", "application/soap+xml;charset=utf-8");
		Заголовки.Вставить("action", "http://web.cbr.ru/MainInfoXML");
		ЗапросHTTP = Новый HTTPЗапрос("/DailyInfoWebServ/DailyInfo.asmx", Заголовки);
		ЗапросHTTP.УстановитьТелоИзСтроки(ТелоЗапроса);
		Попытка
			ОтветHTTP = Соединение.ОтправитьДляОбработки(ЗапросHTTP);
		Исключение
			Результат.СообщениеОбОшибке = ОписаниеОшибки();
		КонецПопытки;
		
		Если ОтветHTTP.КодСостояния = 302 И ОтветHTTP.Заголовки["Location"] <> Неопределено Тогда
			Если ОтветHTTP.Заголовки["Set-Cookie"] <> Неопределено Тогда
				ЗначениеЗаголовка = ОтветHTTP.Заголовки["Set-Cookie"];
				ПозицияОкончания = СтрНайти(ЗначениеЗаголовка, ";");
				Заголовки.Вставить("cookie", ?(ПозицияОкончания > 0, Лев(ЗначениеЗаголовка, ПозицияОкончания - 1), ЗначениеЗаголовка));
			КонецЕсли;
			ЗапросHTTP = Новый HTTPЗапрос(ОтветHTTP.Заголовки["Location"], Заголовки);
			ОтветHTTP = Соединение.ОтправитьДляОбработки(ЗапросHTTP);
		КонецЕсли;

		ОтветСтрокой = ОтветHTTP.ПолучитьТелоКакСтроку();
		
		Если ОтветHTTP.КодСостояния = 200 Тогда
			
			КонтекстДокументаXML = ОпределитьКонтекстXML(ОтветСтрокой);
			
			РезультатXPath = ВычислитьXPath("//stavka_ref", КонтекстДокументаXML);
			
			НайденныйResponse = РезультатXPath.ПолучитьСледующий();
			
			Если НайденныйResponse <> Неопределено Тогда
				ЗначениеСтавкиСтрокой = НайденныйResponse.ТекстовоеСодержимое;
				ДатаСтавкиСтрокой = НайденныйResponse.ПолучитьАтрибут("Date");
				МассивПодстрок = СтрРазделить(ДатаСтавкиСтрокой, ".");
				Если МассивПодстрок.Количество() >= 3 Тогда
					ДатаСтавки = Дата(МассивПодстрок[2] + МассивПодстрок[1] + МассивПодстрок[0]);
					ЗначениеСтавки = Число(ЗначениеСтавкиСтрокой);
					РегистрыСведений.СтавкаРефинансированияЦБ.ДобавитьЗапись(
						Новый Структура("Период, Размер", ДатаСтавки, ЗначениеСтавки));
					Результат.ВыполненоУспешно = Истина;
					Результат.ДатаСтавки = ДатаСтавки;
					Прервать;
				Иначе
					Результат.СообщениеОбОшибке = "Неожиданный формат даты: " + ДатаСтавкиСтрокой;										
				КонецЕсли;
			Иначе
				Результат.СообщениеОбОшибке = "Неожиданный формат ответа. Не удалось найти узел stavka_ref"; 
			КонецЕсли;
			
		Иначе
			
			Результат.СообщениеОбОшибке = СтрШаблон("Код ответа: %1. Тело ответа: %2", ОтветHTTP.КодСостояния, ОтветСтрокой);
					
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ Результат.ВыполненоУспешно Тогда
		ЗаписьЖурналаРегистрации("Загрузка ставки рефинансирования", УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.ЗагрузкаСтавкиРефинансирования, , Результат.СообщениеОбОшибке);
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

Функция ОпределитьКонтекстXML(ТекстXML)
	
	ЧтениеXMLТекста = Новый ЧтениеXML;
	ЧтениеXMLТекста.УстановитьСтроку(ТекстXML);
	ПостроительDOMДляXML = Новый ПостроительDOM;
	ДокументDOMДляXML = ПостроительDOMДляXML.Прочитать(ЧтениеXMLТекста);
	РазыменовательИменДляXML = Новый РазыменовательПространствИменDOM(ДокументDOMДляXML);
	Возврат Новый Структура("ДокументDOM, РазыменовательDOM", ДокументDOMДляXML, РазыменовательИменДляXML); 
	
КонецФункции

// Вычисляет выражение xpath для контекста xml
Функция ВычислитьXPath(Выражение, Контекст, УзелКонтекста = Неопределено)
	
	Возврат Контекст.ДокументDOM.ВычислитьВыражениеXPath(Выражение,?(УзелКонтекста=Неопределено,Контекст.ДокументDOM,УзелКонтекста),Контекст.РазыменовательDOM);
	
КонецФункции
	
#КонецЕсли